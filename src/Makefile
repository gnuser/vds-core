# Makefile.in generated by automake 1.15 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright (c) 2016 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

# Copyright (c) 2016 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

# Copyright (c) 2015-2016 The Bitcoin Core developers
# Distributed under the MIT software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/vds
pkgincludedir = $(includedir)/vds
pkglibdir = $(libdir)/vds
pkglibexecdir = $(libexecdir)/vds
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
am__append_1 = MULTICORE=1
#am__append_2 = PLATFORM=darwin
am__append_3 = $(BDB_CPPFLAGS)
am__append_4 = $(LIBVDS_WALLET)
am__append_5 = $(LIBVDS_ZMQ)
#am__append_6 = $(LIBVDS_PROTON)
bin_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	$(am__EXEEXT_4)
noinst_PROGRAMS = $(am__EXEEXT_5)
TESTS = $(am__EXEEXT_6)
am__append_7 = vdsd 
am__append_8 = vds-cli vds-tx
am__append_9 = crypto/sha256_sse4.cpp

#only added json_spirit so that `make dist` works properly
#am__append_10 = \
#    cpp-ethereum/libethash/io_win32.c \
#    cpp-ethereum/libethash/util_win32.c

am__append_11 = cpp-ethereum/libethash/io_posix.c
#am__append_12 = compat/glibc_compat.cpp
#am__append_13 = bitcoind-res.rc
am__append_14 = $(LIBVDS_WALLET)
am__append_15 = $(LIBVDS_ZMQ) $(ZMQ_LIBS)
#am__append_16 = $(LIBVDS_PROTON) $(PROTON_LIBS)
#am__append_17 = bitcoin-cli-res.rc
#am__append_18 = bitcoin-tx-res.rc
##am__append_19 = compat/glibc_compat.cpp
am__append_20 = $(LIBLEVELDB_INT) \
	$(LIBMEMENV_INT)
am__append_21 = $(LIBLEVELDB_INT)
am__append_22 = $(LIBMEMENV_INT)
am__append_23 = -I$(srcdir)/leveldb/include \
	-I$(srcdir)/leveldb/helpers/memenv
#am__append_24 = -DLEVELDB_PLATFORM_WINDOWS -DWINVER=0x0500 -D__USE_MINGW_ANSI_STDIO=1
am__append_25 = -DLEVELDB_PLATFORM_POSIX
#am__append_26 = leveldb/util/env_win.cc \
#	leveldb/port/port_win.cc
am__append_27 = leveldb/port/port_posix.cc
am__append_28 = bench/bench_bitcoin
am__append_29 = bench/coin_selection.cpp
am__append_30 = $(LIBVDS_WALLET) $(LIBVDS_CRYPTO)
am__append_31 = $(LIBVDS_ZMQ) $(ZMQ_LIBS)
#am__append_32 =  \
#	$(LIBVDS_PROTON) \
#	$(PROTON_LIBS)
am__append_33 = $(CLEAN_BITCOIN_BENCH)
am__append_34 = test/test_bitcoin vds-gtest
am__append_35 = test/test_bitcoin
am__append_36 = test/test_bitcoin_fuzzy vds-gtest
am__append_37 = \
  test/bctest.py \
  test/bitcoin-util-test.py \
  test/data/bitcoin-util-test.json \
  test/data/blanktx.hex \
  test/data/tt-delin1-out.hex \
  test/data/tt-delout1-out.hex \
  test/data/tt-locktime317000-out.hex \
  test/data/tx394b54bb.hex \
  test/data/txcreate1.hex \
  test/data/txcreate2.hex \
  test/data/txcreatesign.hex

am__append_38 = \
  wallet/test/wallet_tests.cpp 

am__append_39 = $(LIBVDS_WALLET)
am__append_40 = $(LIBVDS_ZMQ) \
	$(ZMQ_LIBS)
#am__append_41 =  \
#	$(LIBVDS_PROTON) \
#	$(PROTON_LIBS)
am__append_42 = $(CLEAN_VDS_TEST)
# These tests are order-dependent, because they
# depend on global state (see #1539)
am__append_43 = \
	wallet/gtest/test_wallet_zkeys.cpp

am__append_44 = \
	wallet/gtest/test_wallet.cpp

am__append_45 = $(LIBVDS_ZMQ) $(ZMQ_LIBS)
am__append_46 = $(LIBVDS_WALLET)
#am__append_47 = $(LIBVDS_PROTON) $(PROTON_LIBS)
subdir = src
SUBDIRS =
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build-aux/m4/ax_boost_base.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_chrono.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_filesystem.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_program_options.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_random.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_regex.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_serialization.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_system.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_thread.m4 \
	$(top_srcdir)/build-aux/m4/ax_boost_unit_test_framework.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_check_preproc_flag.m4 \
	$(top_srcdir)/build-aux/m4/ax_cxx_compile_stdcxx.m4 \
	$(top_srcdir)/build-aux/m4/ax_gcc_func_attribute.m4 \
	$(top_srcdir)/build-aux/m4/ax_openmp.m4 \
	$(top_srcdir)/build-aux/m4/ax_pthread.m4 \
	$(top_srcdir)/build-aux/m4/bitcoin_find_bdb.m4 \
	$(top_srcdir)/build-aux/m4/bitcoin_qt.m4 \
	$(top_srcdir)/build-aux/m4/bitcoin_subdir_to_include.m4 \
	$(top_srcdir)/build-aux/m4/l_atomic.m4 \
	$(top_srcdir)/build-aux/m4/libtool.m4 \
	$(top_srcdir)/build-aux/m4/ltoptions.m4 \
	$(top_srcdir)/build-aux/m4/ltsugar.m4 \
	$(top_srcdir)/build-aux/m4/ltversion.m4 \
	$(top_srcdir)/build-aux/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__include_HEADERS_DIST) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config/vds-config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
crypto_libvds_crypto_a_AR = $(AR) $(ARFLAGS)
crypto_libvds_crypto_a_LIBADD =
am__crypto_libvds_crypto_a_SOURCES_DIST = crypto/chacha20.h \
	crypto/chacha20.cpp crypto/common.h crypto/equihash.cpp \
	crypto/equihash.h crypto/equihash.tcc crypto/hmac_sha256.cpp \
	crypto/hmac_sha256.h crypto/hmac_sha512.cpp \
	crypto/hmac_sha512.h crypto/scrypt.cpp crypto/scrypt.h \
	crypto/ripemd160.cpp crypto/ripemd160.h crypto/sha1.cpp \
	crypto/sha1.h crypto/sha256.cpp crypto/sha256.h \
	crypto/sha512.cpp crypto/sha512.h \
	cpp-ethereum/utils/libscrypt/b64.c \
	cpp-ethereum/utils/libscrypt/b64.h \
	cpp-ethereum/utils/libscrypt/crypto-mcf.c \
	cpp-ethereum/utils/libscrypt/crypto_scrypt-check.c \
	cpp-ethereum/utils/libscrypt/crypto_scrypt-hash.c \
	cpp-ethereum/utils/libscrypt/crypto_scrypt-hexconvert.c \
	cpp-ethereum/utils/libscrypt/crypto_scrypt-hexconvert.h \
	cpp-ethereum/utils/libscrypt/crypto_scrypt-nosse.c \
	cpp-ethereum/utils/libscrypt/crypto-scrypt-saltgen.c \
	cpp-ethereum/utils/libscrypt/libscrypt.h \
	cpp-ethereum/utils/libscrypt/sha256.c \
	cpp-ethereum/utils/libscrypt/sha256.h \
	cpp-ethereum/utils/libscrypt/slowequals.c \
	cpp-ethereum/utils/libscrypt/slowequals.h \
	cpp-ethereum/utils/libscrypt/sysendian.h support/cleanse.cpp \
	crypto/sha256_sse4.cpp
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = crypto/crypto_libvds_crypto_a-sha256_sse4.$(OBJEXT)
am_crypto_libvds_crypto_a_OBJECTS =  \
	crypto/crypto_libvds_crypto_a-chacha20.$(OBJEXT) \
	crypto/crypto_libvds_crypto_a-equihash.$(OBJEXT) \
	crypto/crypto_libvds_crypto_a-hmac_sha256.$(OBJEXT) \
	crypto/crypto_libvds_crypto_a-hmac_sha512.$(OBJEXT) \
	crypto/crypto_libvds_crypto_a-scrypt.$(OBJEXT) \
	crypto/crypto_libvds_crypto_a-ripemd160.$(OBJEXT) \
	crypto/crypto_libvds_crypto_a-sha1.$(OBJEXT) \
	crypto/crypto_libvds_crypto_a-sha256.$(OBJEXT) \
	crypto/crypto_libvds_crypto_a-sha512.$(OBJEXT) \
	cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-b64.$(OBJEXT) \
	cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto-mcf.$(OBJEXT) \
	cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-check.$(OBJEXT) \
	cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-hash.$(OBJEXT) \
	cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-hexconvert.$(OBJEXT) \
	cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-nosse.$(OBJEXT) \
	cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto-scrypt-saltgen.$(OBJEXT) \
	cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-sha256.$(OBJEXT) \
	cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-slowequals.$(OBJEXT) \
	support/crypto_libvds_crypto_a-cleanse.$(OBJEXT) \
	$(am__objects_1)
crypto_libvds_crypto_a_OBJECTS = $(am_crypto_libvds_crypto_a_OBJECTS)
cryptopp_libcryptopp_a_AR = $(AR) $(ARFLAGS)
cryptopp_libcryptopp_a_LIBADD =
am_cryptopp_libcryptopp_a_OBJECTS =  \
	cryptopp/cryptopp_libcryptopp_a-cryptlib.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-cpu.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-integer.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-algebra.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-algparam.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-asn.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-basecode.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-dsa.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-des.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-dessp.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-dll.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-ec2n.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-eccrypto.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-ecp.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-eprecomp.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-filters.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-fips140.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-gf2n.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-gfpcrypt.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-hex.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-hmac.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-hrtimer.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-iterhash.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-keccak.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-misc.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-modes.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-mqueue.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-nbtheory.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-oaep.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-osrng.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-polynomi.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-pubkey.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-queue.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-randpool.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-rdtables.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-rijndael.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-rng.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-sha.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-strciphr.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-winpipes.$(OBJEXT) \
	cryptopp/cryptopp_libcryptopp_a-sha3.$(OBJEXT)
cryptopp_libcryptopp_a_OBJECTS = $(am_cryptopp_libcryptopp_a_OBJECTS)
leveldb_libleveldb_a_AR = $(AR) $(ARFLAGS)
leveldb_libleveldb_a_LIBADD =
am__leveldb_libleveldb_a_SOURCES_DIST = leveldb/port/atomic_pointer.h \
	leveldb/port/port_example.h leveldb/port/port_posix.h \
	leveldb/port/win/stdint.h leveldb/port/port.h \
	leveldb/port/port_win.h leveldb/port/thread_annotations.h \
	leveldb/include/leveldb/db.h leveldb/include/leveldb/options.h \
	leveldb/include/leveldb/comparator.h \
	leveldb/include/leveldb/filter_policy.h \
	leveldb/include/leveldb/slice.h \
	leveldb/include/leveldb/table_builder.h \
	leveldb/include/leveldb/env.h leveldb/include/leveldb/c.h \
	leveldb/include/leveldb/iterator.h \
	leveldb/include/leveldb/cache.h \
	leveldb/include/leveldb/dumpfile.h \
	leveldb/include/leveldb/table.h \
	leveldb/include/leveldb/write_batch.h \
	leveldb/include/leveldb/status.h leveldb/db/log_format.h \
	leveldb/db/memtable.h leveldb/db/version_set.h \
	leveldb/db/write_batch_internal.h leveldb/db/filename.h \
	leveldb/db/version_edit.h leveldb/db/dbformat.h \
	leveldb/db/builder.h leveldb/db/log_writer.h \
	leveldb/db/db_iter.h leveldb/db/skiplist.h \
	leveldb/db/db_impl.h leveldb/db/table_cache.h \
	leveldb/db/snapshot.h leveldb/db/log_reader.h \
	leveldb/table/filter_block.h leveldb/table/block_builder.h \
	leveldb/table/block.h leveldb/table/two_level_iterator.h \
	leveldb/table/merger.h leveldb/table/format.h \
	leveldb/table/iterator_wrapper.h leveldb/util/crc32c.h \
	leveldb/util/arena.h leveldb/util/random.h \
	leveldb/util/posix_logger.h leveldb/util/hash.h \
	leveldb/util/histogram.h leveldb/util/coding.h \
	leveldb/util/testutil.h leveldb/util/mutexlock.h \
	leveldb/util/logging.h leveldb/util/testharness.h \
	leveldb/db/builder.cc leveldb/db/c.cc leveldb/db/dbformat.cc \
	leveldb/db/db_impl.cc leveldb/db/db_iter.cc \
	leveldb/db/dumpfile.cc leveldb/db/filename.cc \
	leveldb/db/log_reader.cc leveldb/db/log_writer.cc \
	leveldb/db/memtable.cc leveldb/db/repair.cc \
	leveldb/db/table_cache.cc leveldb/db/version_edit.cc \
	leveldb/db/version_set.cc leveldb/db/write_batch.cc \
	leveldb/table/block_builder.cc leveldb/table/block.cc \
	leveldb/table/filter_block.cc leveldb/table/format.cc \
	leveldb/table/iterator.cc leveldb/table/merger.cc \
	leveldb/table/table_builder.cc leveldb/table/table.cc \
	leveldb/table/two_level_iterator.cc leveldb/util/arena.cc \
	leveldb/util/bloom.cc leveldb/util/cache.cc \
	leveldb/util/coding.cc leveldb/util/comparator.cc \
	leveldb/util/crc32c.cc leveldb/util/env.cc \
	leveldb/util/env_posix.cc leveldb/util/filter_policy.cc \
	leveldb/util/hash.cc leveldb/util/histogram.cc \
	leveldb/util/logging.cc leveldb/util/options.cc \
	leveldb/util/status.cc leveldb/util/env_win.cc \
	leveldb/port/port_win.cc leveldb/port/port_posix.cc
#am__objects_2 = leveldb/util/leveldb_libleveldb_a-env_win.$(OBJEXT) \
#	leveldb/port/leveldb_libleveldb_a-port_win.$(OBJEXT)
am__objects_3 = leveldb/port/leveldb_libleveldb_a-port_posix.$(OBJEXT)
am_leveldb_libleveldb_a_OBJECTS = leveldb/db/leveldb_libleveldb_a-builder.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-c.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-dbformat.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-db_impl.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-db_iter.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-dumpfile.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-filename.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-log_reader.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-log_writer.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-memtable.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-repair.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-table_cache.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-version_edit.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-version_set.$(OBJEXT) \
	leveldb/db/leveldb_libleveldb_a-write_batch.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-block_builder.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-block.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-filter_block.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-format.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-iterator.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-merger.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-table_builder.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-table.$(OBJEXT) \
	leveldb/table/leveldb_libleveldb_a-two_level_iterator.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-arena.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-bloom.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-cache.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-coding.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-comparator.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-crc32c.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-env.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-env_posix.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-filter_policy.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-hash.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-histogram.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-logging.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-options.$(OBJEXT) \
	leveldb/util/leveldb_libleveldb_a-status.$(OBJEXT) \
	$(am__objects_2) $(am__objects_3)
leveldb_libleveldb_a_OBJECTS = $(am_leveldb_libleveldb_a_OBJECTS)
leveldb_libmemenv_a_AR = $(AR) $(ARFLAGS)
leveldb_libmemenv_a_LIBADD =
am__leveldb_libmemenv_a_SOURCES_DIST =  \
	leveldb/helpers/memenv/memenv.cc \
	leveldb/helpers/memenv/memenv.h
am_leveldb_libmemenv_a_OBJECTS = leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.$(OBJEXT)
leveldb_libmemenv_a_OBJECTS = $(am_leveldb_libmemenv_a_OBJECTS)
libvds_a_AR = $(AR) $(ARFLAGS)
libvds_a_DEPENDENCIES = $(LIBSECP256K1) $(LIBSNARK)
am_libvds_a_OBJECTS = crypto/libvds_a-sha256.$(OBJEXT) \
	crypto/libvds_a-sha256.$(OBJEXT) \
	vds/libvds_a-IncrementalMerkleTree.$(OBJEXT) \
	vds/libvds_a-NoteEncryption.$(OBJEXT) \
	vds/libvds_a-Address.$(OBJEXT) \
	vds/libvds_a-JoinSplit.$(OBJEXT) vds/libvds_a-Proof.$(OBJEXT) \
	vds/libvds_a-Note.$(OBJEXT) vds/libvds_a-prf.$(OBJEXT) \
	vds/libvds_a-util.$(OBJEXT) vds/libvds_a-zip32.$(OBJEXT) \
	vds/libvds_a-util.$(OBJEXT)
libvds_a_OBJECTS = $(am_libvds_a_OBJECTS)
libvds_cli_a_AR = $(AR) $(ARFLAGS)
libvds_cli_a_LIBADD =
am__objects_4 =
am_libvds_cli_a_OBJECTS = rpc/libvds_cli_a-client.$(OBJEXT) \
	$(am__objects_4) $(am__objects_4)
libvds_cli_a_OBJECTS = $(am_libvds_cli_a_OBJECTS)
libvds_common_a_AR = $(AR) $(ARFLAGS)
libvds_common_a_DEPENDENCIES = $(LIBSECP256K1)
am__libvds_common_a_SOURCES_DIST = arith_uint256.cpp base58.cpp \
	bech32.cpp chainparams.cpp coins.cpp compressor.cpp \
	core_read.cpp core_write.cpp eccryptoverify.cpp ecwrapper.cpp \
	hash.cpp key.cpp key_io.cpp keystore.cpp netaddress.cpp \
	netbase.cpp primitives/block.cpp primitives/transaction.cpp \
	protocol.cpp pubkey.cpp scheduler.cpp script/interpreter.cpp \
	script/script.cpp script/script_error.cpp script/sign.cpp \
	script/standard.cpp transaction_builder.cpp \
	cpp-ethereum/libdevcore/Base64.cpp \
	cpp-ethereum/libdevcore/Base64.h \
	cpp-ethereum/libdevcore/Common.cpp \
	cpp-ethereum/libdevcore/Common.h \
	cpp-ethereum/libdevcore/CommonData.cpp \
	cpp-ethereum/libdevcore/CommonData.h \
	cpp-ethereum/libdevcore/CommonIO.cpp \
	cpp-ethereum/libdevcore/CommonIO.h \
	cpp-ethereum/libdevcore/CommonJS.cpp \
	cpp-ethereum/libdevcore/CommonJS.h \
	cpp-ethereum/libdevcore/FileSystem.cpp \
	cpp-ethereum/libdevcore/FileSystem.h \
	cpp-ethereum/libdevcore/FixedHash.cpp \
	cpp-ethereum/libdevcore/FixedHash.h \
	cpp-ethereum/libdevcore/Guards.cpp \
	cpp-ethereum/libdevcore/Guards.h \
	cpp-ethereum/libdevcore/Hash.cpp \
	cpp-ethereum/libdevcore/Hash.h cpp-ethereum/libdevcore/Log.cpp \
	cpp-ethereum/libdevcore/Log.h \
	cpp-ethereum/libdevcore/MemoryDB.cpp \
	cpp-ethereum/libdevcore/MemoryDB.h \
	cpp-ethereum/libdevcore/OverlayDB.cpp \
	cpp-ethereum/libdevcore/OverlayDB.h \
	cpp-ethereum/libdevcore/RLP.cpp cpp-ethereum/libdevcore/RLP.h \
	cpp-ethereum/libdevcore/SHA3.cpp \
	cpp-ethereum/libdevcore/SHA3.h \
	cpp-ethereum/libdevcore/TransientDirectory.cpp \
	cpp-ethereum/libdevcore/TransientDirectory.h \
	cpp-ethereum/libdevcore/TrieCommon.cpp \
	cpp-ethereum/libdevcore/TrieCommon.h \
	cpp-ethereum/libdevcore/Worker.cpp \
	cpp-ethereum/libdevcore/Worker.h \
	cpp-ethereum/libevm/ExtVMFace.cpp \
	cpp-ethereum/libevm/ExtVMFace.h cpp-ethereum/libevm/VM.cpp \
	cpp-ethereum/libevm/VM.h cpp-ethereum/libevm/VMOpt.cpp \
	cpp-ethereum/libevm/VMCalls.cpp \
	cpp-ethereum/libevm/VMFactory.cpp \
	cpp-ethereum/libevm/VMFactory.h \
	cpp-ethereum/libevmcore/Instruction.cpp \
	cpp-ethereum/libevmcore/Instruction.h \
	cpp-ethereum/libevmcore/Exceptions.h \
	cpp-ethereum/libevmcore/EVMSchedule.h \
	cpp-ethereum/libethereum/Account.cpp \
	cpp-ethereum/libethereum/Defaults.cpp \
	cpp-ethereum/libethereum/GasPricer.cpp \
	cpp-ethereum/libethereum/State.cpp \
	cpp-ethereum/libethcore/ABI.cpp \
	cpp-ethereum/libethcore/ChainOperationParams.cpp \
	cpp-ethereum/libethcore/Common.cpp \
	cpp-ethereum/libethcore/ICAP.cpp \
	cpp-ethereum/libethcore/Precompiled.cpp \
	cpp-ethereum/libdevcore/TrieDB.cpp \
	cpp-ethereum/libdevcrypto/Common.cpp \
	cpp-ethereum/libdevcrypto/CryptoPP.cpp \
	cpp-ethereum/libdevcrypto/AES.cpp \
	cpp-ethereum/libdevcrypto/ECDHE.cpp \
	cpp-ethereum/libethashseal/GenesisInfo.cpp \
	cpp-ethereum/libethereum/ChainParams.cpp \
	cpp-ethereum/libethcore/Transaction.cpp \
	cpp-ethereum/libethereum/Transaction.cpp \
	cpp-ethereum/libethereum/Executive.cpp \
	cpp-ethereum/libethereum/ExtVM.cpp \
	cpp-ethereum/libethereum/Block.cpp \
	cpp-ethereum/libethereum/BlockChain.cpp \
	cpp-ethereum/libethereum/BlockDetails.cpp \
	cpp-ethereum/libethereum/TransactionQueue.cpp \
	cpp-ethereum/libethereum/BlockQueue.cpp \
	cpp-ethereum/libethcore/BlockHeader.cpp \
	cpp-ethereum/libethereum/TransactionReceipt.cpp \
	cpp-ethereum/libethcore/SealEngine.cpp \
	cpp-ethereum/libdevcore/TrieHash.cpp \
	cpp-ethereum/libethereum/GenesisInfo.cpp \
	cpp-ethereum/libethashseal/Ethash.cpp \
	cpp-ethereum/libethashseal/EthashCPUMiner.cpp \
	cpp-ethereum/libethashseal/EthashAux.cpp \
	cpp-ethereum/libethashseal/EthashProofOfWork.cpp \
	cpp-ethereum/libethereum/Account.h \
	cpp-ethereum/libethereum/Defaults.h \
	cpp-ethereum/libethereum/GasPricer.h \
	cpp-ethereum/libethereum/State.h cpp-ethereum/libethcore/ABI.h \
	cpp-ethereum/libethcore/ChainOperationParams.h \
	cpp-ethereum/libethcore/Common.h \
	cpp-ethereum/libethcore/ICAP.h \
	cpp-ethereum/libethcore/Precompiled.h \
	cpp-ethereum/libdevcore/TrieDB.h \
	cpp-ethereum/libdevcrypto/Common.h \
	cpp-ethereum/libdevcrypto/CryptoPP.h \
	cpp-ethereum/libdevcrypto/AES.h \
	cpp-ethereum/libdevcrypto/ECDHE.h \
	cpp-ethereum/libethashseal/GenesisInfo.h \
	cpp-ethereum/libethereum/ChainParams.h \
	cpp-ethereum/libethcore/Transaction.h \
	cpp-ethereum/libethcore/Exceptions.h \
	cpp-ethereum/libethereum/Transaction.h \
	cpp-ethereum/libethereum/Executive.h \
	cpp-ethereum/libethereum/ExtVM.h \
	cpp-ethereum/libethereum/Block.h \
	cpp-ethereum/libethereum/BlockChain.h \
	cpp-ethereum/libethereum/BlockDetails.h \
	cpp-ethereum/libethereum/TransactionQueue.h \
	cpp-ethereum/libethereum/BlockQueue.h \
	cpp-ethereum/libethcore/BlockHeader.h \
	cpp-ethereum/libethereum/TransactionReceipt.h \
	cpp-ethereum/libethcore/SealEngine.h \
	cpp-ethereum/libdevcore/TrieHash.h \
	cpp-ethereum/libethereum/GenesisInfo.h \
	cpp-ethereum/libethashseal/Ethash.h \
	cpp-ethereum/libethashseal/EthashCPUMiner.h \
	cpp-ethereum/libethashseal/EthashAux.h \
	cpp-ethereum/libethashseal/EthashProofOfWork.h \
	cpp-ethereum/libethash/internal.c cpp-ethereum/libethash/io.c \
	cpp-ethereum/libethash/sha3.c \
	cpp-ethereum/libethash/internal.h cpp-ethereum/libethash/io.h \
	cpp-ethereum/libethash/sha3.h \
	cpp-ethereum/libdevcore/vector_ref.h \
	cpp-ethereum/libdevcore/Exceptions.h \
	cpp-ethereum/libdevcore/db.h \
	cpp-ethereum/libdevcore/concurrent_queue.h \
	cpp-ethereum/libdevcore/Terminal.h \
	cpp-ethereum/libethereum/CodeSizeCache.h \
	cpp-ethereum/libethereum/VerifiedBlock.h \
	cpp-ethereum/libdevcore/Assertions.h \
	cpp-ethereum/libdevcore/debugbreak.h \
	cpp-ethereum/libethereum/GenericMiner.h \
	cpp-ethereum/libevm/VMFace.h \
	cpp-ethereum/libethereum/GenericFarm.h \
	cpp-ethereum/libethereum/Interface.h \
	cpp-ethereum/libethcore/CommonJS.h \
	cpp-ethereum/libdevcore/picosha2.h \
	cpp-ethereum/libevm/VMConfig.h \
	cpp-ethereum/libethereum/LogFilter.h \
	cpp-ethereum/libdevcrypto/Exceptions.h \
	cpp-ethereum/libethashseal/genesis/mainNetwork.cpp \
	cpp-ethereum/libethashseal/genesis/eip150Test.cpp \
	cpp-ethereum/libethashseal/genesis/eip158Test.cpp \
	cpp-ethereum/libethashseal/genesis/frontierTest.cpp \
	cpp-ethereum/libethashseal/genesis/homesteadTest.cpp \
	cpp-ethereum/libethashseal/genesis/mainNetworkTest.cpp \
	cpp-ethereum/libethashseal/genesis/metropolisTest.cpp \
	cpp-ethereum/libethashseal/genesis/qtumMainNetwork.cpp \
	cpp-ethereum/libethashseal/genesis/qtumTestNetwork.cpp \
	cpp-ethereum/libethashseal/genesis/ropsten.cpp \
	cpp-ethereum/libethashseal/genesis/transitionnetTest.cpp \
	cpp-ethereum/libethash/ethash.h \
	cpp-ethereum/libethash/compiler.h \
	cpp-ethereum/libethash/data_sizes.h \
	cpp-ethereum/libethash/fnv.h cpp-ethereum/libethash/mmap.h \
	cpp-ethereum/libethash/endian.h \
	cpp-ethereum/libethash/mmap_win32.c \
	cpp-ethereum/utils/json_spirit/JsonSpiritHeaders.h \
	cpp-ethereum/utils/json_spirit/json_spirit.h \
	cpp-ethereum/utils/json_spirit/json_spirit_error_position.h \
	cpp-ethereum/utils/json_spirit/json_spirit_reader.h \
	cpp-ethereum/utils/json_spirit/json_spirit_reader_template.h \
	cpp-ethereum/utils/json_spirit/json_spirit_stream_reader.h \
	cpp-ethereum/utils/json_spirit/json_spirit_utils.h \
	cpp-ethereum/utils/json_spirit/json_spirit_value.h \
	cpp-ethereum/utils/json_spirit/json_spirit_writer.h \
	cpp-ethereum/utils/json_spirit/json_spirit_writer_template.h \
	addressindex.h spentindex.h addrman.h alert.h amount.h \
	amqp/amqpabstractnotifier.h amqp/amqpconfig.h \
	amqp/amqpnotificationinterface.h amqp/amqppublishnotifier.h \
	amqp/amqpsender.h arith_uint256.h asyncrpcoperation.h \
	asyncrpcqueue.h activemasternode.h masternode.h base58.h \
	bech32.h bip38_key.h bloom.h chain.h chainparams.h \
	chainparamsbase.h chainparamsseeds.h checkpoints.h \
	checkqueue.h clientversion.h clue.h coincontrol.h coins.h \
	compat.h compat/byteswap.h compat/endian.h compat/sanity.h \
	compressor.h consensus/consensus.h consensus/params.h \
	consensus/validation.h contract.h contractabi.h contractman.h \
	core_io.h core_memusage.h crypto/pbkdf2.h fs.h vib.h \
	eccryptoverify.h deprecation.h ecwrapper.h flat-database.h \
	hash.h httprpc.h httpserver.h init.h dsnotificationinterface.h \
	key.h key_io.h keystore.h dbwrapper.h limitedmap.h \
	masternode-payments.h masternode-sync.h masternodeman.h \
	masternodeconfig.h masternodestatistic.h memusage.h \
	merkleblock.h messagesigner.h metrics.h mruset.h net.h \
	net_processing.h netaddress.h netbase.h netfulfilledman.h \
	noui.h paymentdisclosure.h paymentdisclosuredb.h policy/fees.h \
	policy/feerate.h policy/policy.h policy/rbf.h pow.h \
	prevector.h primitives/block.h primitives/transaction.h \
	protocol.h pubkey.h random.h reverselock.h rpc/client.h \
	rpc/protocol.h rpc/server.h scheduler.h script/interpreter.h \
	script/script.h script/script_error.h script/sigcache.h \
	script/sign.h script/standard.h serialize.h streams.h \
	support/allocators/secure.h support/allocators/zeroafterfree.h \
	support/cleanse.h support/events.h support/pagelocker.h \
	support/lockedpool.h sync.h threadsafety.h threadinterrupt.h \
	timedata.h tinyformat.h torcontrol.h transaction_builder.h \
	txdb.h txmempool.h cluedb.h txdestinationtool.h addb.h \
	ui_interface.h uint256.h uint252.h undo.h util.h \
	utilmoneystr.h utilstrencodings.h utiltime.h validation.h \
	validationinterface.h version.h versionbits.h sqlitewrapper.h \
	wallet/asyncrpcoperation_sendmany.h \
	wallet/asyncrpcoperation_shieldcoinbase.h \
	wallet/bip39_mnemonic.h wallet/bip39_words_english.h \
	wallet/crypter.h wallet/db.h wallet/feebumper.h wallet/fees.h \
	wallet/rpcwallet.h wallet/wallet.h wallet/wallet_ismine.h \
	wallet/walletdb.h zmq/zmqabstractnotifier.h zmq/zmqconfig.h \
	zmq/zmqnotificationinterface.h zmq/zmqpublishnotifier.h \
	qtum/qtumstate.h qtum/qtumtransaction.h qtum/qtumDGP.h \
	qtum/storageresults.h vds/IncrementalMerkleTree.hpp \
	vds/NoteEncryption.hpp vds/Address.hpp vds/JoinSplit.hpp \
	vds/Note.hpp vds/prf.h vds/Proof.hpp vds/util.h vds/Vds.h \
	vds/zip32.h cpp-ethereum/libethash/io_win32.c \
	cpp-ethereum/libethash/util_win32.c \
	cpp-ethereum/libethash/io_posix.c
#am__objects_5 = cpp-ethereum/libethash/libvds_common_a-io_win32.$(OBJEXT) \
#	cpp-ethereum/libethash/libvds_common_a-util_win32.$(OBJEXT)
am__objects_6 = cpp-ethereum/libethash/libvds_common_a-io_posix.$(OBJEXT)
am_libvds_common_a_OBJECTS = libvds_common_a-arith_uint256.$(OBJEXT) \
	libvds_common_a-base58.$(OBJEXT) \
	libvds_common_a-bech32.$(OBJEXT) \
	libvds_common_a-chainparams.$(OBJEXT) \
	libvds_common_a-coins.$(OBJEXT) \
	libvds_common_a-compressor.$(OBJEXT) \
	libvds_common_a-core_read.$(OBJEXT) \
	libvds_common_a-core_write.$(OBJEXT) \
	libvds_common_a-eccryptoverify.$(OBJEXT) \
	libvds_common_a-ecwrapper.$(OBJEXT) \
	libvds_common_a-hash.$(OBJEXT) libvds_common_a-key.$(OBJEXT) \
	libvds_common_a-key_io.$(OBJEXT) \
	libvds_common_a-keystore.$(OBJEXT) \
	libvds_common_a-netaddress.$(OBJEXT) \
	libvds_common_a-netbase.$(OBJEXT) \
	primitives/libvds_common_a-block.$(OBJEXT) \
	primitives/libvds_common_a-transaction.$(OBJEXT) \
	libvds_common_a-protocol.$(OBJEXT) \
	libvds_common_a-pubkey.$(OBJEXT) \
	libvds_common_a-scheduler.$(OBJEXT) \
	script/libvds_common_a-interpreter.$(OBJEXT) \
	script/libvds_common_a-script.$(OBJEXT) \
	script/libvds_common_a-script_error.$(OBJEXT) \
	script/libvds_common_a-sign.$(OBJEXT) \
	script/libvds_common_a-standard.$(OBJEXT) \
	libvds_common_a-transaction_builder.$(OBJEXT) \
	cpp-ethereum/libdevcore/libvds_common_a-Base64.$(OBJEXT) \
	cpp-ethereum/libdevcore/libvds_common_a-Common.$(OBJEXT) \
	cpp-ethereum/libdevcore/libvds_common_a-CommonData.$(OBJEXT) \
	cpp-ethereum/libdevcore/libvds_common_a-CommonIO.$(OBJEXT) \
	cpp-ethereum/libdevcore/libvds_common_a-CommonJS.$(OBJEXT) \
	cpp-ethereum/libdevcore/libvds_common_a-FileSystem.$(OBJEXT) \
	cpp-ethereum/libdevcore/libvds_common_a-FixedHash.$(OBJEXT) \
	cpp-ethereum/libdevcore/libvds_common_a-Guards.$(OBJEXT) \
	cpp-ethereum/libdevcore/libvds_common_a-Hash.$(OBJEXT) \
	cpp-ethereum/libdevcore/libvds_common_a-Log.$(OBJEXT) \
	cpp-ethereum/libdevcore/libvds_common_a-MemoryDB.$(OBJEXT) \
	cpp-ethereum/libdevcore/libvds_common_a-OverlayDB.$(OBJEXT) \
	cpp-ethereum/libdevcore/libvds_common_a-RLP.$(OBJEXT) \
	cpp-ethereum/libdevcore/libvds_common_a-SHA3.$(OBJEXT) \
	cpp-ethereum/libdevcore/libvds_common_a-TransientDirectory.$(OBJEXT) \
	cpp-ethereum/libdevcore/libvds_common_a-TrieCommon.$(OBJEXT) \
	cpp-ethereum/libdevcore/libvds_common_a-Worker.$(OBJEXT) \
	cpp-ethereum/libevm/libvds_common_a-ExtVMFace.$(OBJEXT) \
	cpp-ethereum/libevm/libvds_common_a-VM.$(OBJEXT) \
	cpp-ethereum/libevm/libvds_common_a-VMOpt.$(OBJEXT) \
	cpp-ethereum/libevm/libvds_common_a-VMCalls.$(OBJEXT) \
	cpp-ethereum/libevm/libvds_common_a-VMFactory.$(OBJEXT) \
	cpp-ethereum/libevmcore/libvds_common_a-Instruction.$(OBJEXT) \
	cpp-ethereum/libethereum/libvds_common_a-Account.$(OBJEXT) \
	cpp-ethereum/libethereum/libvds_common_a-Defaults.$(OBJEXT) \
	cpp-ethereum/libethereum/libvds_common_a-GasPricer.$(OBJEXT) \
	cpp-ethereum/libethereum/libvds_common_a-State.$(OBJEXT) \
	cpp-ethereum/libethcore/libvds_common_a-ABI.$(OBJEXT) \
	cpp-ethereum/libethcore/libvds_common_a-ChainOperationParams.$(OBJEXT) \
	cpp-ethereum/libethcore/libvds_common_a-Common.$(OBJEXT) \
	cpp-ethereum/libethcore/libvds_common_a-ICAP.$(OBJEXT) \
	cpp-ethereum/libethcore/libvds_common_a-Precompiled.$(OBJEXT) \
	cpp-ethereum/libdevcore/libvds_common_a-TrieDB.$(OBJEXT) \
	cpp-ethereum/libdevcrypto/libvds_common_a-Common.$(OBJEXT) \
	cpp-ethereum/libdevcrypto/libvds_common_a-CryptoPP.$(OBJEXT) \
	cpp-ethereum/libdevcrypto/libvds_common_a-AES.$(OBJEXT) \
	cpp-ethereum/libdevcrypto/libvds_common_a-ECDHE.$(OBJEXT) \
	cpp-ethereum/libethashseal/libvds_common_a-GenesisInfo.$(OBJEXT) \
	cpp-ethereum/libethereum/libvds_common_a-ChainParams.$(OBJEXT) \
	cpp-ethereum/libethcore/libvds_common_a-Transaction.$(OBJEXT) \
	cpp-ethereum/libethereum/libvds_common_a-Transaction.$(OBJEXT) \
	cpp-ethereum/libethereum/libvds_common_a-Executive.$(OBJEXT) \
	cpp-ethereum/libethereum/libvds_common_a-ExtVM.$(OBJEXT) \
	cpp-ethereum/libethereum/libvds_common_a-Block.$(OBJEXT) \
	cpp-ethereum/libethereum/libvds_common_a-BlockChain.$(OBJEXT) \
	cpp-ethereum/libethereum/libvds_common_a-BlockDetails.$(OBJEXT) \
	cpp-ethereum/libethereum/libvds_common_a-TransactionQueue.$(OBJEXT) \
	cpp-ethereum/libethereum/libvds_common_a-BlockQueue.$(OBJEXT) \
	cpp-ethereum/libethcore/libvds_common_a-BlockHeader.$(OBJEXT) \
	cpp-ethereum/libdevcore/libvds_common_a-RLP.$(OBJEXT) \
	cpp-ethereum/libethereum/libvds_common_a-TransactionReceipt.$(OBJEXT) \
	cpp-ethereum/libethcore/libvds_common_a-SealEngine.$(OBJEXT) \
	cpp-ethereum/libdevcore/libvds_common_a-TrieHash.$(OBJEXT) \
	cpp-ethereum/libethereum/libvds_common_a-GenesisInfo.$(OBJEXT) \
	cpp-ethereum/libethashseal/libvds_common_a-Ethash.$(OBJEXT) \
	cpp-ethereum/libethashseal/libvds_common_a-EthashCPUMiner.$(OBJEXT) \
	cpp-ethereum/libethashseal/libvds_common_a-EthashAux.$(OBJEXT) \
	cpp-ethereum/libethashseal/libvds_common_a-EthashProofOfWork.$(OBJEXT) \
	cpp-ethereum/libethash/libvds_common_a-internal.$(OBJEXT) \
	cpp-ethereum/libethash/libvds_common_a-io.$(OBJEXT) \
	cpp-ethereum/libethash/libvds_common_a-sha3.$(OBJEXT) \
	cpp-ethereum/libethashseal/genesis/libvds_common_a-mainNetwork.$(OBJEXT) \
	cpp-ethereum/libethashseal/genesis/libvds_common_a-eip150Test.$(OBJEXT) \
	cpp-ethereum/libethashseal/genesis/libvds_common_a-eip158Test.$(OBJEXT) \
	cpp-ethereum/libethashseal/genesis/libvds_common_a-frontierTest.$(OBJEXT) \
	cpp-ethereum/libethashseal/genesis/libvds_common_a-homesteadTest.$(OBJEXT) \
	cpp-ethereum/libethashseal/genesis/libvds_common_a-mainNetworkTest.$(OBJEXT) \
	cpp-ethereum/libethashseal/genesis/libvds_common_a-metropolisTest.$(OBJEXT) \
	cpp-ethereum/libethashseal/genesis/libvds_common_a-qtumMainNetwork.$(OBJEXT) \
	cpp-ethereum/libethashseal/genesis/libvds_common_a-qtumTestNetwork.$(OBJEXT) \
	cpp-ethereum/libethashseal/genesis/libvds_common_a-ropsten.$(OBJEXT) \
	cpp-ethereum/libethashseal/genesis/libvds_common_a-transitionnetTest.$(OBJEXT) \
	cpp-ethereum/libethash/libvds_common_a-mmap_win32.$(OBJEXT) \
	$(am__objects_4) $(am__objects_4) $(am__objects_5) \
	$(am__objects_6)
libvds_common_a_OBJECTS = $(am_libvds_common_a_OBJECTS)
libvds_consensus_a_AR = $(AR) $(ARFLAGS)
libvds_consensus_a_LIBADD =
am_libvds_consensus_a_OBJECTS =  \
	crypto/libvds_consensus_a-equihash.$(OBJEXT) \
	crypto/libvds_consensus_a-hmac_sha512.$(OBJEXT) \
	crypto/libvds_consensus_a-ripemd160.$(OBJEXT) \
	crypto/libvds_consensus_a-sha1.$(OBJEXT) \
	crypto/libvds_consensus_a-sha256.$(OBJEXT) \
	crypto/libvds_consensus_a-sha512.$(OBJEXT) \
	libvds_consensus_a-eccryptoverify.$(OBJEXT) \
	libvds_consensus_a-ecwrapper.$(OBJEXT) \
	libvds_consensus_a-hash.$(OBJEXT) \
	primitives/libvds_consensus_a-transaction.$(OBJEXT) \
	libvds_consensus_a-pubkey.$(OBJEXT) \
	script/libvds_consensus_a-vdsconsensus.$(OBJEXT) \
	script/libvds_consensus_a-interpreter.$(OBJEXT) \
	script/libvds_consensus_a-script.$(OBJEXT) \
	libvds_consensus_a-uint256.$(OBJEXT) \
	libvds_consensus_a-utilstrencodings.$(OBJEXT)
libvds_consensus_a_OBJECTS = $(am_libvds_consensus_a_OBJECTS)
libvds_proton_a_AR = $(AR) $(ARFLAGS)
libvds_proton_a_LIBADD =
am__libvds_proton_a_SOURCES_DIST = amqp/amqpabstractnotifier.cpp \
	amqp/amqpnotificationinterface.cpp \
	amqp/amqppublishnotifier.cpp
#am_libvds_proton_a_OBJECTS = amqp/libvds_proton_a-amqpabstractnotifier.$(OBJEXT) \
#	amqp/libvds_proton_a-amqpnotificationinterface.$(OBJEXT) \
#	amqp/libvds_proton_a-amqppublishnotifier.$(OBJEXT)
libvds_proton_a_OBJECTS = $(am_libvds_proton_a_OBJECTS)
libvds_server_a_AR = $(AR) $(ARFLAGS)
libvds_server_a_DEPENDENCIES = $(LIBVDS_SQLITE) $(LIBVDS)
am__objects_7 = libvds_server_a-sendalert.$(OBJEXT) \
	libvds_server_a-addrman.$(OBJEXT) \
	libvds_server_a-addrdb.$(OBJEXT) \
	libvds_server_a-alert.$(OBJEXT) \
	libvds_server_a-asyncrpcoperation.$(OBJEXT) \
	libvds_server_a-asyncrpcqueue.$(OBJEXT) \
	libvds_server_a-bloom.$(OBJEXT) \
	libvds_server_a-chain.$(OBJEXT) \
	libvds_server_a-checkpoints.$(OBJEXT) \
	libvds_server_a-clue.$(OBJEXT) \
	libvds_server_a-cluedb.$(OBJEXT) \
	libvds_server_a-deprecation.$(OBJEXT) \
	libvds_server_a-httprpc.$(OBJEXT) \
	libvds_server_a-httpserver.$(OBJEXT) \
	libvds_server_a-init.$(OBJEXT) \
	libvds_server_a-dsnotificationinterface.$(OBJEXT) \
	libvds_server_a-dbwrapper.$(OBJEXT) \
	libvds_server_a-masternode.$(OBJEXT) \
	libvds_server_a-masternode-payments.$(OBJEXT) \
	libvds_server_a-masternode-sync.$(OBJEXT) \
	libvds_server_a-masternodeconfig.$(OBJEXT) \
	libvds_server_a-masternodeman.$(OBJEXT) \
	libvds_server_a-masternodestatistic.$(OBJEXT) \
	libvds_server_a-merkleblock.$(OBJEXT) \
	libvds_server_a-metrics.$(OBJEXT) \
	libvds_server_a-messagesigner.$(OBJEXT) \
	consensus/libvds_server_a-merkle.$(OBJEXT) \
	libvds_server_a-net.$(OBJEXT) \
	libvds_server_a-netfulfilledman.$(OBJEXT) \
	libvds_server_a-net_processing.$(OBJEXT) \
	libvds_server_a-noui.$(OBJEXT) \
	policy/libvds_server_a-fees.$(OBJEXT) \
	policy/libvds_server_a-feerate.$(OBJEXT) \
	policy/libvds_server_a-policy.$(OBJEXT) \
	libvds_server_a-pow.$(OBJEXT) libvds_server_a-rest.$(OBJEXT) \
	rpc/libvds_server_a-blockchain.$(OBJEXT) \
	rpc/libvds_server_a-masternode.$(OBJEXT) \
	rpc/libvds_server_a-misc.$(OBJEXT) \
	rpc/libvds_server_a-net.$(OBJEXT) \
	rpc/libvds_server_a-ad.$(OBJEXT) \
	rpc/libvds_server_a-masternode.$(OBJEXT) \
	rpc/libvds_server_a-rawtransaction.$(OBJEXT) \
	rpc/libvds_server_a-server.$(OBJEXT) \
	script/libvds_server_a-sigcache.$(OBJEXT) \
	libvds_server_a-sendalert.$(OBJEXT) \
	libvds_server_a-tandiadb.$(OBJEXT) \
	libvds_server_a-timedata.$(OBJEXT) \
	libvds_server_a-torcontrol.$(OBJEXT) \
	libvds_server_a-txdb.$(OBJEXT) \
	libvds_server_a-txdestinationtool.$(OBJEXT) \
	libvds_server_a-addb.$(OBJEXT) \
	libvds_server_a-txmempool.$(OBJEXT) \
	libvds_server_a-ui_interface.$(OBJEXT) \
	libvds_server_a-validation.$(OBJEXT) \
	libvds_server_a-validationinterface.$(OBJEXT) \
	libvds_server_a-versionbits.$(OBJEXT) \
	qtum/libvds_server_a-qtumstate.$(OBJEXT) \
	qtum/libvds_server_a-qtumtransaction.$(OBJEXT) \
	qtum/libvds_server_a-qtumDGP.$(OBJEXT) \
	qtum/libvds_server_a-storageresults.$(OBJEXT)
am_libvds_server_a_OBJECTS = $(am__objects_7) $(am__objects_4) \
	$(am__objects_4)
libvds_server_a_OBJECTS = $(am_libvds_server_a_OBJECTS)
libvds_sqlite3_a_AR = $(AR) $(ARFLAGS)
libvds_sqlite3_a_LIBADD =
am_libvds_sqlite3_a_OBJECTS = libvds_sqlite3_a-sqlite3.$(OBJEXT)
libvds_sqlite3_a_OBJECTS = $(am_libvds_sqlite3_a_OBJECTS)
libvds_util_a_AR = $(AR) $(ARFLAGS)
libvds_util_a_LIBADD =
am__libvds_util_a_SOURCES_DIST = support/pagelocker.cpp \
	support/lockedpool.cpp chainparamsbase.cpp clientversion.cpp \
	compat/glibc_sanity.cpp compat/glibcxx_sanity.cpp \
	compat/strnlen.cpp fs.cpp random.cpp rpc/protocol.cpp \
	support/cleanse.cpp sync.cpp uint256.cpp threadinterrupt.cpp \
	util.cpp utilmoneystr.cpp utilstrencodings.cpp utiltime.cpp \
	addressindex.h spentindex.h addrman.h alert.h amount.h \
	amqp/amqpabstractnotifier.h amqp/amqpconfig.h \
	amqp/amqpnotificationinterface.h amqp/amqppublishnotifier.h \
	amqp/amqpsender.h arith_uint256.h asyncrpcoperation.h \
	asyncrpcqueue.h activemasternode.h masternode.h base58.h \
	bech32.h bip38_key.h bloom.h chain.h chainparams.h \
	chainparamsbase.h chainparamsseeds.h checkpoints.h \
	checkqueue.h clientversion.h clue.h coincontrol.h coins.h \
	compat.h compat/byteswap.h compat/endian.h compat/sanity.h \
	compressor.h consensus/consensus.h consensus/params.h \
	consensus/validation.h contract.h contractabi.h contractman.h \
	core_io.h core_memusage.h crypto/pbkdf2.h fs.h vib.h \
	eccryptoverify.h deprecation.h ecwrapper.h flat-database.h \
	hash.h httprpc.h httpserver.h init.h dsnotificationinterface.h \
	key.h key_io.h keystore.h dbwrapper.h limitedmap.h \
	masternode-payments.h masternode-sync.h masternodeman.h \
	masternodeconfig.h masternodestatistic.h memusage.h \
	merkleblock.h messagesigner.h metrics.h mruset.h net.h \
	net_processing.h netaddress.h netbase.h netfulfilledman.h \
	noui.h paymentdisclosure.h paymentdisclosuredb.h policy/fees.h \
	policy/feerate.h policy/policy.h policy/rbf.h pow.h \
	prevector.h primitives/block.h primitives/transaction.h \
	protocol.h pubkey.h random.h reverselock.h rpc/client.h \
	rpc/protocol.h rpc/server.h scheduler.h script/interpreter.h \
	script/script.h script/script_error.h script/sigcache.h \
	script/sign.h script/standard.h serialize.h streams.h \
	support/allocators/secure.h support/allocators/zeroafterfree.h \
	support/cleanse.h support/events.h support/pagelocker.h \
	support/lockedpool.h sync.h threadsafety.h threadinterrupt.h \
	timedata.h tinyformat.h torcontrol.h transaction_builder.h \
	txdb.h txmempool.h cluedb.h txdestinationtool.h addb.h \
	ui_interface.h uint256.h uint252.h undo.h util.h \
	utilmoneystr.h utilstrencodings.h utiltime.h validation.h \
	validationinterface.h version.h versionbits.h sqlitewrapper.h \
	wallet/asyncrpcoperation_sendmany.h \
	wallet/asyncrpcoperation_shieldcoinbase.h \
	wallet/bip39_mnemonic.h wallet/bip39_words_english.h \
	wallet/crypter.h wallet/db.h wallet/feebumper.h wallet/fees.h \
	wallet/rpcwallet.h wallet/wallet.h wallet/wallet_ismine.h \
	wallet/walletdb.h zmq/zmqabstractnotifier.h zmq/zmqconfig.h \
	zmq/zmqnotificationinterface.h zmq/zmqpublishnotifier.h \
	qtum/qtumstate.h qtum/qtumtransaction.h qtum/qtumDGP.h \
	qtum/storageresults.h vds/IncrementalMerkleTree.hpp \
	vds/NoteEncryption.hpp vds/Address.hpp vds/JoinSplit.hpp \
	vds/Note.hpp vds/prf.h vds/Proof.hpp vds/util.h vds/Vds.h \
	vds/zip32.h compat/glibc_compat.cpp
#am__objects_8 = compat/libvds_util_a-glibc_compat.$(OBJEXT)
am_libvds_util_a_OBJECTS = support/libvds_util_a-pagelocker.$(OBJEXT) \
	support/libvds_util_a-lockedpool.$(OBJEXT) \
	libvds_util_a-chainparamsbase.$(OBJEXT) \
	libvds_util_a-clientversion.$(OBJEXT) \
	compat/libvds_util_a-glibc_sanity.$(OBJEXT) \
	compat/libvds_util_a-glibcxx_sanity.$(OBJEXT) \
	compat/libvds_util_a-strnlen.$(OBJEXT) \
	libvds_util_a-fs.$(OBJEXT) libvds_util_a-random.$(OBJEXT) \
	rpc/libvds_util_a-protocol.$(OBJEXT) \
	support/libvds_util_a-cleanse.$(OBJEXT) \
	libvds_util_a-sync.$(OBJEXT) libvds_util_a-uint256.$(OBJEXT) \
	libvds_util_a-threadinterrupt.$(OBJEXT) \
	libvds_util_a-util.$(OBJEXT) \
	libvds_util_a-utilmoneystr.$(OBJEXT) \
	libvds_util_a-utilstrencodings.$(OBJEXT) \
	libvds_util_a-utiltime.$(OBJEXT) $(am__objects_4) \
	$(am__objects_4) $(am__objects_8)
nodist_libvds_util_a_OBJECTS =
libvds_util_a_OBJECTS = $(am_libvds_util_a_OBJECTS) \
	$(nodist_libvds_util_a_OBJECTS)
libvds_wallet_a_AR = $(AR) $(ARFLAGS)
libvds_wallet_a_DEPENDENCIES = $(LIBVDS)
am_libvds_wallet_a_OBJECTS = libvds_wallet_a-ui_interface.$(OBJEXT) \
	libvds_wallet_a-zcbenchmarks.$(OBJEXT) \
	libvds_wallet_a-activemasternode.$(OBJEXT) \
	libvds_wallet_a-contract.$(OBJEXT) \
	libvds_wallet_a-contractabi.$(OBJEXT) \
	libvds_wallet_a-contractman.$(OBJEXT) \
	libvds_wallet_a-masternode.$(OBJEXT) \
	libvds_wallet_a-masternodeman.$(OBJEXT) \
	libvds_wallet_a-masternodestatistic.$(OBJEXT) \
	libvds_wallet_a-masternodeconfig.$(OBJEXT) \
	libvds_wallet_a-masternode-sync.$(OBJEXT) \
	libvds_wallet_a-masternode-payments.$(OBJEXT) \
	libvds_wallet_a-base58.$(OBJEXT) \
	libvds_wallet_a-bip38_key.$(OBJEXT) \
	rpc/libvds_wallet_a-blockchain.$(OBJEXT) \
	rpc/libvds_wallet_a-misc.$(OBJEXT) \
	rpc/libvds_wallet_a-masternode.$(OBJEXT) \
	wallet/libvds_wallet_a-asyncrpcoperation_sendmany.$(OBJEXT) \
	wallet/libvds_wallet_a-asyncrpcoperation_shieldcoinbase.$(OBJEXT) \
	wallet/libvds_wallet_a-bip39_mnemonic.$(OBJEXT) \
	wallet/libvds_wallet_a-crypter.$(OBJEXT) \
	wallet/libvds_wallet_a-db.$(OBJEXT) \
	wallet/libvds_wallet_a-feebumper.$(OBJEXT) \
	wallet/libvds_wallet_a-fees.$(OBJEXT) \
	libvds_wallet_a-paymentdisclosure.$(OBJEXT) \
	libvds_wallet_a-paymentdisclosuredb.$(OBJEXT) \
	wallet/libvds_wallet_a-rpcdisclosure.$(OBJEXT) \
	wallet/libvds_wallet_a-rpcdump.$(OBJEXT) \
	wallet/libvds_wallet_a-rpcwallet.$(OBJEXT) \
	wallet/libvds_wallet_a-wallet.$(OBJEXT) \
	wallet/libvds_wallet_a-wallet_ismine.$(OBJEXT) \
	wallet/libvds_wallet_a-walletdb.$(OBJEXT) $(am__objects_4) \
	$(am__objects_4)
libvds_wallet_a_OBJECTS = $(am_libvds_wallet_a_OBJECTS)
libvds_zmq_a_AR = $(AR) $(ARFLAGS)
libvds_zmq_a_LIBADD =
am__libvds_zmq_a_SOURCES_DIST = zmq/zmqabstractnotifier.cpp \
	zmq/zmqnotificationinterface.cpp zmq/zmqpublishnotifier.cpp
am_libvds_zmq_a_OBJECTS = zmq/libvds_zmq_a-zmqabstractnotifier.$(OBJEXT) \
	zmq/libvds_zmq_a-zmqnotificationinterface.$(OBJEXT) \
	zmq/libvds_zmq_a-zmqpublishnotifier.$(OBJEXT)
libvds_zmq_a_OBJECTS = $(am_libvds_zmq_a_OBJECTS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
#libvdsconsensus_la_DEPENDENCIES =  \
#	$(LIBSECP256K1)
am__libvdsconsensus_la_SOURCES_DIST = crypto/equihash.cpp \
	crypto/hmac_sha512.cpp crypto/ripemd160.cpp crypto/sha1.cpp \
	crypto/sha256.cpp crypto/sha512.cpp hash.cpp \
	primitives/transaction.cpp pubkey.cpp script/vdsconsensus.cpp \
	script/interpreter.cpp script/script.cpp uint256.cpp \
	utilstrencodings.cpp compat/glibc_compat.cpp
##am__objects_9 = compat/libvdsconsensus_la-glibc_compat.lo
#am_libvdsconsensus_la_OBJECTS = crypto/libvdsconsensus_la-equihash.lo \
#	crypto/libvdsconsensus_la-hmac_sha512.lo \
#	crypto/libvdsconsensus_la-ripemd160.lo \
#	crypto/libvdsconsensus_la-sha1.lo \
#	crypto/libvdsconsensus_la-sha256.lo \
#	crypto/libvdsconsensus_la-sha512.lo \
#	libvdsconsensus_la-hash.lo \
#	primitives/libvdsconsensus_la-transaction.lo \
#	libvdsconsensus_la-pubkey.lo \
#	script/libvdsconsensus_la-vdsconsensus.lo \
#	script/libvdsconsensus_la-interpreter.lo \
#	script/libvdsconsensus_la-script.lo \
#	libvdsconsensus_la-uint256.lo \
#	libvdsconsensus_la-utilstrencodings.lo \
#	$(am__objects_9)
libvdsconsensus_la_OBJECTS = $(am_libvdsconsensus_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libvdsconsensus_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libvdsconsensus_la_LDFLAGS) \
	$(LDFLAGS) -o $@
#am_libvdsconsensus_la_rpath = -rpath \
#	$(libdir)
am__EXEEXT_1 = vdsd$(EXEEXT)
am__EXEEXT_2 = vds-cli$(EXEEXT) \
	vds-tx$(EXEEXT)
am__EXEEXT_3 = bench/bench_bitcoin$(EXEEXT)
am__EXEEXT_4 = test/test_bitcoin$(EXEEXT)
am__EXEEXT_5 = test/test_bitcoin_fuzzy$(EXEEXT) \
	vds-gtest$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am__bench_bench_bitcoin_SOURCES_DIST = bench/bench_bitcoin.cpp \
	bench/bench.cpp bench/bench.h bench/checkblock.cpp \
	bench/checkqueue.cpp bench/Examples.cpp bench/rollingbloom.cpp \
	bench/crypto_hash.cpp bench/ccoins_caching.cpp \
	bench/mempool_eviction.cpp bench/verify_script.cpp \
	bench/base58.cpp bench/lockedpool.cpp bench/perf.cpp \
	bench/perf.h bench/prevector_destructor.cpp \
	bench/coin_selection.cpp
am__objects_10 = bench/bench_bench_bitcoin-coin_selection.$(OBJEXT)
am_bench_bench_bitcoin_OBJECTS = bench/bench_bench_bitcoin-bench_bitcoin.$(OBJEXT) \
	bench/bench_bench_bitcoin-bench.$(OBJEXT) \
	bench/bench_bench_bitcoin-checkblock.$(OBJEXT) \
	bench/bench_bench_bitcoin-checkqueue.$(OBJEXT) \
	bench/bench_bench_bitcoin-Examples.$(OBJEXT) \
	bench/bench_bench_bitcoin-rollingbloom.$(OBJEXT) \
	bench/bench_bench_bitcoin-crypto_hash.$(OBJEXT) \
	bench/bench_bench_bitcoin-ccoins_caching.$(OBJEXT) \
	bench/bench_bench_bitcoin-mempool_eviction.$(OBJEXT) \
	bench/bench_bench_bitcoin-verify_script.$(OBJEXT) \
	bench/bench_bench_bitcoin-base58.$(OBJEXT) \
	bench/bench_bench_bitcoin-lockedpool.$(OBJEXT) \
	bench/bench_bench_bitcoin-perf.$(OBJEXT) \
	bench/bench_bench_bitcoin-prevector_destructor.$(OBJEXT) \
	$(am__objects_10)
#am__objects_11 =  \
#	$(am__objects_4) \
#	$(am__objects_4)
am__objects_11 = $(am__objects_4)
nodist_bench_bench_bitcoin_OBJECTS =  \
	$(am__objects_11)
bench_bench_bitcoin_OBJECTS = $(am_bench_bench_bitcoin_OBJECTS) \
	$(nodist_bench_bench_bitcoin_OBJECTS)
am__DEPENDENCIES_1 = $(am__append_21)
am__DEPENDENCIES_2 = $(am__append_22)
am__DEPENDENCIES_3 =
am__DEPENDENCIES_4 =  \
	$(LIBVDS_ZMQ) \
	$(am__DEPENDENCIES_3)
#am__DEPENDENCIES_5 =  \
#	$(LIBVDS_PROTON) \
#	$(am__DEPENDENCIES_3)
bench_bench_bitcoin_DEPENDENCIES =  \
	$(LIBVDS_SERVER) $(LIBVDS_SQLITE) \
	$(am__append_30) $(LIBVDS_CLI) \
	$(LIBVDS_COMMON) $(LIBUNIVALUE) \
	$(LIBVDS_UTIL) $(LIBVDS_CONSENSUS) \
	$(LIBVDS_CRYPTO) $(LIBVDS) $(LIBSNARK) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(LIBCRYPTOPP) $(LIBSECP256K1) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_5) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(LIBVDS) $(LIBSNARK) $(am__DEPENDENCIES_3)
bench_bench_bitcoin_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) \
	$(bench_bench_bitcoin_LDFLAGS) $(LDFLAGS) -o $@
am__test_test_bitcoin_SOURCES_DIST = test/arith_uint256_tests.cpp \
	test/bignum.h test/addrman_tests.cpp test/alert_tests.cpp \
	test/allocator_tests.cpp test/base32_tests.cpp \
	test/base58_tests.cpp test/base64_tests.cpp \
	test/bip32_tests.cpp test/bloom_tests.cpp \
	test/checkblock_tests.cpp test/Checkpoints_tests.cpp \
	test/coins_tests.cpp test/compress_tests.cpp \
	test/crypto_tests.cpp test/DoS_tests.cpp \
	test/equihash_tests.cpp test/getarg_tests.cpp \
	test/hash_tests.cpp test/key_tests.cpp test/main_tests.cpp \
	test/mempool_tests.cpp test/miner_tests.cpp \
	test/mruset_tests.cpp test/multisig_tests.cpp \
	test/netbase_tests.cpp test/pmt_tests.cpp \
	test/policyestimator_tests.cpp test/pow_tests.cpp \
	test/raii_event_tests.cpp test/reverselock_tests.cpp \
	test/rpc_tests.cpp test/sanity_tests.cpp \
	test/scheduler_tests.cpp test/script_P2SH_tests.cpp \
	test/script_tests.cpp test/scriptnum_tests.cpp \
	test/serialize_tests.cpp test/sighash_tests.cpp \
	test/sigopcount_tests.cpp test/skiplist_tests.cpp \
	test/test_bitcoin.cpp test/test_bitcoin.h \
	test/timedata_tests.cpp test/torcontrol_tests.cpp \
	test/transaction_tests.cpp test/uint256_tests.cpp \
	test/univalue_tests.cpp test/util_tests.cpp \
	test/sha256compress_tests.cpp wallet/test/wallet_tests.cpp \
	test/data/script_valid.json test/data/script_tests.json \
	test/data/base58_keys_valid.json \
	test/data/base58_encode_decode.json \
	test/data/base58_keys_invalid.json \
	test/data/script_invalid.json \
	test/data/tx_invalid_checktx.json \
	test/data/tx_invalid_verify.json test/data/tx_valid.json \
	test/data/sighash.json test/data/merkle_roots.json \
	test/data/merkle_roots_empty.json \
	test/data/merkle_serialization.json \
	test/data/merkle_witness_serialization.json \
	test/data/merkle_path.json test/data/merkle_commitments.json \
	test/data/merkle_roots_sapling.json \
	test/data/merkle_roots_empty_sapling.json \
	test/data/merkle_serialization_sapling.json \
	test/data/merkle_witness_serialization_sapling.json \
	test/data/merkle_path_sapling.json \
	test/data/merkle_commitments_sapling.json \
	test/data/g1_compressed.json test/data/g2_compressed.json \
	test/data/sapling_key_components.json \
	bench/data/block413567.raw test/data/alertTests.raw
am__objects_12 = wallet/test/test_test_bitcoin-wallet_tests.$(OBJEXT)
am__objects_13 = test/test_test_bitcoin-arith_uint256_tests.$(OBJEXT) \
	test/test_test_bitcoin-addrman_tests.$(OBJEXT) \
	test/test_test_bitcoin-alert_tests.$(OBJEXT) \
	test/test_test_bitcoin-allocator_tests.$(OBJEXT) \
	test/test_test_bitcoin-base32_tests.$(OBJEXT) \
	test/test_test_bitcoin-base58_tests.$(OBJEXT) \
	test/test_test_bitcoin-base64_tests.$(OBJEXT) \
	test/test_test_bitcoin-bip32_tests.$(OBJEXT) \
	test/test_test_bitcoin-bloom_tests.$(OBJEXT) \
	test/test_test_bitcoin-checkblock_tests.$(OBJEXT) \
	test/test_test_bitcoin-Checkpoints_tests.$(OBJEXT) \
	test/test_test_bitcoin-coins_tests.$(OBJEXT) \
	test/test_test_bitcoin-compress_tests.$(OBJEXT) \
	test/test_test_bitcoin-crypto_tests.$(OBJEXT) \
	test/test_test_bitcoin-DoS_tests.$(OBJEXT) \
	test/test_test_bitcoin-equihash_tests.$(OBJEXT) \
	test/test_test_bitcoin-getarg_tests.$(OBJEXT) \
	test/test_test_bitcoin-hash_tests.$(OBJEXT) \
	test/test_test_bitcoin-key_tests.$(OBJEXT) \
	test/test_test_bitcoin-main_tests.$(OBJEXT) \
	test/test_test_bitcoin-mempool_tests.$(OBJEXT) \
	test/test_test_bitcoin-miner_tests.$(OBJEXT) \
	test/test_test_bitcoin-mruset_tests.$(OBJEXT) \
	test/test_test_bitcoin-multisig_tests.$(OBJEXT) \
	test/test_test_bitcoin-netbase_tests.$(OBJEXT) \
	test/test_test_bitcoin-pmt_tests.$(OBJEXT) \
	test/test_test_bitcoin-policyestimator_tests.$(OBJEXT) \
	test/test_test_bitcoin-pow_tests.$(OBJEXT) \
	test/test_test_bitcoin-raii_event_tests.$(OBJEXT) \
	test/test_test_bitcoin-reverselock_tests.$(OBJEXT) \
	test/test_test_bitcoin-rpc_tests.$(OBJEXT) \
	test/test_test_bitcoin-sanity_tests.$(OBJEXT) \
	test/test_test_bitcoin-scheduler_tests.$(OBJEXT) \
	test/test_test_bitcoin-script_P2SH_tests.$(OBJEXT) \
	test/test_test_bitcoin-script_tests.$(OBJEXT) \
	test/test_test_bitcoin-scriptnum_tests.$(OBJEXT) \
	test/test_test_bitcoin-serialize_tests.$(OBJEXT) \
	test/test_test_bitcoin-sighash_tests.$(OBJEXT) \
	test/test_test_bitcoin-sigopcount_tests.$(OBJEXT) \
	test/test_test_bitcoin-skiplist_tests.$(OBJEXT) \
	test/test_test_bitcoin-test_bitcoin.$(OBJEXT) \
	test/test_test_bitcoin-timedata_tests.$(OBJEXT) \
	test/test_test_bitcoin-torcontrol_tests.$(OBJEXT) \
	test/test_test_bitcoin-transaction_tests.$(OBJEXT) \
	test/test_test_bitcoin-uint256_tests.$(OBJEXT) \
	test/test_test_bitcoin-univalue_tests.$(OBJEXT) \
	test/test_test_bitcoin-util_tests.$(OBJEXT) \
	test/test_test_bitcoin-sha256compress_tests.$(OBJEXT) \
	$(am__objects_12)
am_test_test_bitcoin_OBJECTS = $(am__objects_13) \
	$(am__objects_4) $(am__objects_4)
nodist_test_test_bitcoin_OBJECTS =  \
	$(am__objects_11)
test_test_bitcoin_OBJECTS = $(am_test_test_bitcoin_OBJECTS) \
	$(nodist_test_test_bitcoin_OBJECTS)
am__DEPENDENCIES_6 =  \
	$(LIBVDS_ZMQ) \
	$(am__DEPENDENCIES_3)
#am__DEPENDENCIES_7 =  \
#	$(LIBVDS_PROTON) \
#	$(am__DEPENDENCIES_3)
test_test_bitcoin_DEPENDENCIES = $(LIBVDS_SERVER) \
	$(LIBVDS_SQLITE) $(am__append_39) \
	$(LIBVDS_CLI) $(LIBVDS_COMMON) \
	$(LIBUNIVALUE) $(LIBVDS_UTIL) \
	$(LIBVDS_CONSENSUS) $(LIBVDS_CRYPTO) \
	$(LIBVDS) $(LIBSNARK) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2) $(LIBCRYPTOPP) \
	$(LIBSECP256K1) $(am__DEPENDENCIES_3) \
	$(LIBVDS_CONSENSUS) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(LIBVDS) $(LIBSNARK) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_6) \
	$(am__DEPENDENCIES_7) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(LIBSECP256K1) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3)
test_test_bitcoin_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(test_test_bitcoin_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_test_bitcoin_fuzzy_SOURCES_DIST =  \
	test/test_bitcoin_fuzzy.cpp
am_test_test_bitcoin_fuzzy_OBJECTS = test/test_test_bitcoin_fuzzy-test_bitcoin_fuzzy.$(OBJEXT)
test_test_bitcoin_fuzzy_OBJECTS =  \
	$(am_test_test_bitcoin_fuzzy_OBJECTS)
test_test_bitcoin_fuzzy_DEPENDENCIES =  \
	$(LIBUNIVALUE) $(LIBVDS_SERVER) \
	$(LIBVDS_COMMON) $(LIBVDS_UTIL) \
	$(LIBVDS_CONSENSUS) $(LIBVDS_CRYPTO) \
	$(LIBVDS) $(LIBSECP256K1) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(LIBSNARK) $(am__DEPENDENCIES_3)
test_test_bitcoin_fuzzy_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(test_test_bitcoin_fuzzy_CXXFLAGS) $(CXXFLAGS) \
	$(test_test_bitcoin_fuzzy_LDFLAGS) $(LDFLAGS) -o $@
am__vds_cli_SOURCES_DIST = bitcoin-cli.cpp bitcoin-cli-res.rc
#am__objects_14 = bitcoin-cli-res.$(OBJEXT)
am_vds_cli_OBJECTS = vds_cli-bitcoin-cli.$(OBJEXT) $(am__objects_14)
vds_cli_OBJECTS = $(am_vds_cli_OBJECTS)
vds_cli_DEPENDENCIES = $(LIBVDS_CLI) $(LIBUNIVALUE) $(LIBVDS_UTIL) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) $(LIBVDS) \
	$(LIBSNARK) $(LIBVDS_CRYPTO) $(LIBCRYPTOPP) \
	$(am__DEPENDENCIES_3)
vds_cli_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(vds_cli_LDFLAGS) $(LDFLAGS) -o $@
am__vds_gtest_SOURCES_DIST = gtest/main.cpp gtest/utils.cpp \
	gtest/test_checktransaction.cpp gtest/json_test_vectors.cpp \
	gtest/json_test_vectors.h wallet/gtest/test_wallet_zkeys.cpp \
	gtest/test_tautology.cpp gtest/test_deprecation.cpp \
	gtest/test_equihash.cpp gtest/test_httprpc.cpp \
	gtest/test_keys.cpp gtest/test_keystore.cpp \
	gtest/test_noteencryption.cpp gtest/test_mempool.cpp \
	gtest/test_merkletree.cpp gtest/test_miner.cpp \
	gtest/test_pow.cpp gtest/test_random.cpp gtest/test_rpc.cpp \
	gtest/test_sapling_note.cpp gtest/test_transaction.cpp \
	gtest/test_transaction_builder.cpp gtest/test_validation.cpp \
	gtest/test_circuit.cpp gtest/test_txid.cpp \
	gtest/test_libzcash_utils.cpp gtest/test_proofs.cpp \
	gtest/test_paymentdisclosure.cpp gtest/test_pedersen_hash.cpp \
	gtest/test_checkblock.cpp gtest/test_zip32.cpp \
	wallet/gtest/test_wallet.cpp
am__objects_15 = wallet/gtest/vds_gtest-test_wallet_zkeys.$(OBJEXT)
am__objects_16 = wallet/gtest/vds_gtest-test_wallet.$(OBJEXT)
am_vds_gtest_OBJECTS =  \
	gtest/vds_gtest-main.$(OBJEXT) \
	gtest/vds_gtest-utils.$(OBJEXT) \
	gtest/vds_gtest-test_checktransaction.$(OBJEXT) \
	gtest/vds_gtest-json_test_vectors.$(OBJEXT) \
	$(am__objects_15) \
	gtest/vds_gtest-test_tautology.$(OBJEXT) \
	gtest/vds_gtest-test_deprecation.$(OBJEXT) \
	gtest/vds_gtest-test_equihash.$(OBJEXT) \
	gtest/vds_gtest-test_httprpc.$(OBJEXT) \
	gtest/vds_gtest-test_keys.$(OBJEXT) \
	gtest/vds_gtest-test_keystore.$(OBJEXT) \
	gtest/vds_gtest-test_noteencryption.$(OBJEXT) \
	gtest/vds_gtest-test_mempool.$(OBJEXT) \
	gtest/vds_gtest-test_merkletree.$(OBJEXT) \
	gtest/vds_gtest-test_miner.$(OBJEXT) \
	gtest/vds_gtest-test_pow.$(OBJEXT) \
	gtest/vds_gtest-test_random.$(OBJEXT) \
	gtest/vds_gtest-test_rpc.$(OBJEXT) \
	gtest/vds_gtest-test_sapling_note.$(OBJEXT) \
	gtest/vds_gtest-test_transaction.$(OBJEXT) \
	gtest/vds_gtest-test_transaction_builder.$(OBJEXT) \
	gtest/vds_gtest-test_validation.$(OBJEXT) \
	gtest/vds_gtest-test_circuit.$(OBJEXT) \
	gtest/vds_gtest-test_txid.$(OBJEXT) \
	gtest/vds_gtest-test_libzcash_utils.$(OBJEXT) \
	gtest/vds_gtest-test_proofs.$(OBJEXT) \
	gtest/vds_gtest-test_paymentdisclosure.$(OBJEXT) \
	gtest/vds_gtest-test_pedersen_hash.$(OBJEXT) \
	gtest/vds_gtest-test_checkblock.$(OBJEXT) \
	gtest/vds_gtest-test_zip32.$(OBJEXT) \
	$(am__objects_16)
vds_gtest_OBJECTS = $(am_vds_gtest_OBJECTS)
vds_gtest_DEPENDENCIES = $(LIBVDS_SERVER) \
	$(LIBVDS_SQLITE) $(LIBVDS_CLI) \
	$(LIBVDS_COMMON) $(LIBUNIVALUE) \
	$(LIBVDS_UTIL) $(LIBVDS_CONSENSUS) \
	$(LIBVDS_CRYPTO) $(LIBVDS) $(LIBSNARK) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(LIBCRYPTOPP) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(LIBSECP256K1) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_6) \
	$(am__append_46) $(LIBVDS_CONSENSUS) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(LIBVDS) $(LIBSNARK) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(LIBSECP256K1) $(am__DEPENDENCIES_7)
vds_gtest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(vds_gtest_CXXFLAGS) \
	$(CXXFLAGS) $(vds_gtest_LDFLAGS) $(LDFLAGS) -o $@
am__vds_tx_SOURCES_DIST = bitcoin-tx.cpp bitcoin-tx-res.rc
#am__objects_17 = bitcoin-tx-res.$(OBJEXT)
am_vds_tx_OBJECTS = vds_tx-bitcoin-tx.$(OBJEXT) $(am__objects_17)
vds_tx_OBJECTS = $(am_vds_tx_OBJECTS)
vds_tx_DEPENDENCIES = $(LIBUNIVALUE) $(LIBVDS_COMMON) $(LIBVDS_UTIL) \
	$(LIBSECP256K1) $(LIBVDS_CONSENSUS) $(LIBVDS) $(LIBSNARK) \
	$(LIBCRYPTOPP) $(LIBVDS_CRYPTO) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3)
vds_tx_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(vds_tx_LDFLAGS) $(LDFLAGS) -o $@
am__vdsd_SOURCES_DIST = bitcoind.cpp bitcoind-res.rc
#am__objects_18 = bitcoind-res.$(OBJEXT)
am_vdsd_OBJECTS = vdsd-bitcoind.$(OBJEXT) $(am__objects_18)
vdsd_OBJECTS = $(am_vdsd_OBJECTS)
am__DEPENDENCIES_8 = $(LIBVDS_ZMQ) \
	$(am__DEPENDENCIES_3)
#am__DEPENDENCIES_9 = $(LIBVDS_PROTON) \
#	$(am__DEPENDENCIES_3)
vdsd_DEPENDENCIES = $(LIBVDS_SERVER) $(LIBVDS_SQLITE) $(am__append_14) \
	$(LIBVDS_COMMON) $(LIBUNIVALUE) $(LIBVDS_UTIL) \
	$(LIBVDS_CONSENSUS) $(LIBVDS_CRYPTO) $(LIBVDS) $(LIBSNARK) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) $(LIBCRYPTOPP) \
	$(LIBSECP256K1) $(am__DEPENDENCIES_8) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) $(LIBVDS_CRYPTO) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_9)
vdsd_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(vdsd_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src/config
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(crypto_libvds_crypto_a_SOURCES) \
	$(cryptopp_libcryptopp_a_SOURCES) \
	$(leveldb_libleveldb_a_SOURCES) $(leveldb_libmemenv_a_SOURCES) \
	$(libvds_a_SOURCES) $(libvds_cli_a_SOURCES) \
	$(libvds_common_a_SOURCES) $(libvds_consensus_a_SOURCES) \
	$(libvds_proton_a_SOURCES) $(libvds_server_a_SOURCES) \
	$(libvds_sqlite3_a_SOURCES) $(libvds_util_a_SOURCES) \
	$(nodist_libvds_util_a_SOURCES) $(libvds_wallet_a_SOURCES) \
	$(libvds_zmq_a_SOURCES) $(libvdsconsensus_la_SOURCES) \
	$(bench_bench_bitcoin_SOURCES) \
	$(nodist_bench_bench_bitcoin_SOURCES) \
	$(test_test_bitcoin_SOURCES) \
	$(nodist_test_test_bitcoin_SOURCES) \
	$(test_test_bitcoin_fuzzy_SOURCES) $(vds_cli_SOURCES) \
	$(vds_gtest_SOURCES) $(vds_tx_SOURCES) $(vdsd_SOURCES)
DIST_SOURCES = $(am__crypto_libvds_crypto_a_SOURCES_DIST) \
	$(cryptopp_libcryptopp_a_SOURCES) \
	$(am__leveldb_libleveldb_a_SOURCES_DIST) \
	$(am__leveldb_libmemenv_a_SOURCES_DIST) $(libvds_a_SOURCES) \
	$(libvds_cli_a_SOURCES) $(am__libvds_common_a_SOURCES_DIST) \
	$(libvds_consensus_a_SOURCES) \
	$(am__libvds_proton_a_SOURCES_DIST) $(libvds_server_a_SOURCES) \
	$(libvds_sqlite3_a_SOURCES) $(am__libvds_util_a_SOURCES_DIST) \
	$(libvds_wallet_a_SOURCES) $(am__libvds_zmq_a_SOURCES_DIST) \
	$(am__libvdsconsensus_la_SOURCES_DIST) \
	$(am__bench_bench_bitcoin_SOURCES_DIST) \
	$(am__test_test_bitcoin_SOURCES_DIST) \
	$(am__test_test_bitcoin_fuzzy_SOURCES_DIST) \
	$(am__vds_cli_SOURCES_DIST) $(am__vds_gtest_SOURCES_DIST) \
	$(am__vds_tx_SOURCES_DIST) $(am__vdsd_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__include_HEADERS_DIST = script/vdsconsensus.h
HEADERS = $(include_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
am__EXEEXT_6 = test/test_bitcoin$(EXEEXT) \
	vds-gtest$(EXEEXT)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.bench.include \
	$(srcdir)/Makefile.cryptopp.include \
	$(srcdir)/Makefile.gtest.include $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.leveldb.include \
	$(srcdir)/Makefile.test.include \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/ubuntu/vds/vds-core/build-aux/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
ARFLAGS = cr
AUTOCONF = ${SHELL} /home/ubuntu/vds/vds-core/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/ubuntu/vds/vds-core/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/ubuntu/vds/vds-core/build-aux/missing automake-1.15
AWK = gawk
BDB_CPPFLAGS = 
BDB_LIBS = -ldb_cxx-6.2
BITCOIN_CLI_NAME = vds-cli
BITCOIN_DAEMON_NAME = vdsd
BITCOIN_GUI_NAME = vds-qt
BITCOIN_TX_NAME = vds-tx
BOOST_CHRONO_LIB = -lboost_chrono
BOOST_CPPFLAGS = -pthread -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/share/../include
BOOST_FILESYSTEM_LIB = -lboost_filesystem
BOOST_LDFLAGS = -L/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/share/../lib
BOOST_LIBS = -L/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/share/../lib -lboost_system -lboost_filesystem -lboost_program_options -lboost_thread -lboost_chrono -lboost_random -lboost_regex -lboost_serialization
BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options
BOOST_RANDOM_LIB = -lboost_random
BOOST_REGEX_LIB = -lboost_regex
BOOST_SERIALIZATION_LIB = -lboost_serialization
BOOST_SYSTEM_LIB = -lboost_system
BOOST_THREAD_LIB = -lboost_thread
BOOST_UNIT_TEST_FRAMEWORK_LIB = -lboost_unit_test_framework
BREW = 
CC = /home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/share/../native/bin/ccache gcc -m64
CCACHE = /home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/share/../native/bin/ccache
CCDEPMODE = depmode=gcc3
CFLAGS = -pipe -O1 
CLIENT_VERSION_BUILD = 50
CLIENT_VERSION_IS_RELEASE = true
CLIENT_VERSION_MAJOR = 0
CLIENT_VERSION_MINOR = 9
CLIENT_VERSION_REVISION = 9
COPYRIGHT_HOLDERS = The %s developers
COPYRIGHT_HOLDERS_FINAL = The Vds Core developers
COPYRIGHT_HOLDERS_SUBSTITUTION = Vds Core
COPYRIGHT_YEAR = 2019
CPP = gcc -m64 -E
CPPFILT = /usr/bin/c++filt
CPPFLAGS = -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/share/../include/  -DQTUM_BUILD -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS  -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2 -DMULTICORE
CRYPTOPP_CPPFLAGS =  -I$(srcdir)/cryptopp/include
CRYPTOPP_TARGET_FLAGS = 
CRYPTO_CFLAGS = -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include
CRYPTO_LIBS = -L/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/lib -lcrypto -ldl
CXX = /home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/share/../native/bin/ccache g++ -m64 -std=c++11
CXXCPP = g++ -m64 -std=c++11 -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -std=c++11 -pipe -O1 -fwrapv -fno-strict-aliasing -Werror -g  -Wformat -Wformat-security -Wstack-protector -fstack-protector-all -fPIE -fopenmp -fwrapv -fno-strict-aliasing -Wno-builtin-declaration-mismatch
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ERROR_CXXFLAGS = 
EVENT_CFLAGS = -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include
EVENT_LIBS = -L/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/lib -levent
EVENT_PTHREADS_CFLAGS = -pthread -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include
EVENT_PTHREADS_LIBS = -L/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/lib -levent_pthreads -levent
EXEEXT = 
FGREP = /bin/grep -F
GCOV = /usr/bin/gcov
GENHTML = 
GENISOIMAGE = 
GIT = /usr/bin/git
GMPXX_LIBS = -lgmpxx
GMP_LIBS = -lgmp
GREP = /bin/grep
HARDENED_CPPFLAGS =  -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2
HARDENED_CXXFLAGS =  -Wformat -Wformat-security -Wstack-protector -fstack-protector-all -fPIE
HARDENED_LDFLAGS =  -Wl,-z,relro -Wl,-z,now -pie
HAVE_CXX11 = 1
HEXDUMP = /usr/bin/hexdump
IMAGEMAGICK_CONVERT = 
INSTALL = /usr/bin/install -c
INSTALLNAMETOOL = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LCOV = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = -L/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/share/../lib   -Wl,-z,relro -Wl,-z,now -pie
LEVELDB_CPPFLAGS =  $(am__append_23)
LEVELDB_TARGET_FLAGS = -DOS_LINUX
LIBCRYPTOPP = cryptopp/libcryptopp.a $(LIBCRYPTOPP_INT)
LIBLEVELDB =  $(am__append_21)
LIBMEMENV =  $(am__append_22)
LIBOBJS = 
LIBS = -lanl 
LIBSNARK_DEPINST = /home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/share/..
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_APP_LDFLAGS = 
LIBVDS_LIBS = -lgmp -lgmpxx -lboost_system -lcrypto -lsodium -fopenmp ./librustzcash.a -ldl -lz
LIPO = 
LN_S = ln -s
LRELEASE = 
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
LUPDATE = 
MAINT = 
MAKEINFO = ${SHELL} /home/ubuntu/vds/vds-core/build-aux/missing makeinfo
MAKENSIS = 
MANIFEST_TOOL = :
MINIUPNPC_CPPFLAGS = 
MINIUPNPC_LIBS = -lminiupnpc
MKDIR_P = /bin/mkdir -p
MOC = 
MOC_DEFS = -DHAVE_CONFIG_H -I$(srcdir)
NM = nm
NMEDIT = 
OBJCXX = g++ -m64
OBJCXXDEPMODE = depmode=gcc3
OBJCXXFLAGS = -std=c++11 -pipe -O1 -fwrapv -fno-strict-aliasing -Werror -g  -Wformat -Wformat-security -Wstack-protector -fstack-protector-all -fPIE
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = vds
PACKAGE_BUGREPORT = 
PACKAGE_NAME = V-Dimension
PACKAGE_STRING = V-Dimension 0.9.9
PACKAGE_TARNAME = vds
PACKAGE_URL = 
PACKAGE_VERSION = 0.9.9
PATH_SEPARATOR = :
PIC_FLAGS = -fPIC
PIE_FLAGS = 
PKG_CONFIG = /usr/bin/pkg-config --static
PKG_CONFIG_LIBDIR = /home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/share/../lib/pkgconfig
PKG_CONFIG_PATH = /home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/share/../share/pkgconfig
PORT = 
PROTOBUF_CFLAGS = -pthread -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include
PROTOBUF_LIBS = -L/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/lib -lprotobuf -pthread -lpthread -lz
PROTOC = /home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/share/../native/bin/protoc
PROTON_LIBS = 
PTHREAD_CC = gcc -m64
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
PYTHON = /usr/bin/python3.5
QR_CFLAGS = 
QR_LIBS = 
QTPLATFORM_CFLAGS = -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtPlatformSupport -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtGui -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtCore
QTPLATFORM_LIBS = -L/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/lib -lQt5PlatformSupport -lQt5Gui -lqtpng -lqtharfbuzzng -lQt5DBus -lQt5Core -lz -lqtpcre -lm -ldl -lrt -lpthread -lfontconfig -lfreetype -lQt5Gui -lQt5Core -lz -lqtpcre -lm -ldl -lrt -lpthread -lqtpng -lqtharfbuzzng -lz -lQt5Core -lpthread -lz -lqtpcre -lm -ldl -lrt
QTPRINT_CFLAGS = 
QTPRINT_LIBS = 
QTXCBQPA_CFLAGS = -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtXcbQpa -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtPlatformSupport -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtGui -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtCore
QTXCBQPA_LIBS = -L/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/lib -L//home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/lib -L/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/lib -lQt5XcbQpa -lX11 -lX11-xcb -lxcb -lxcb-static -lQt5PlatformSupport -lQt5DBus -lfontconfig -lfreetype -lQt5Gui -lqtpng -lqtharfbuzzng -lQt5Core -lz -lqtpcre -lm -ldl -lrt -lpthread -lfontconfig -lfreetype -lQt5PlatformSupport -lQt5Gui -lqtpng -lqtharfbuzzng -lQt5DBus -lQt5Core -lz -lqtpcre -lm -ldl -lrt -lpthread -lfontconfig -lfreetype -lQt5Gui -lQt5Core -lz -lqtpcre -lm -ldl -lrt -lpthread -lqtpng -lqtharfbuzzng -lz -lQt5Core -lpthread -lz -lqtpcre -lm -ldl -lrt
QT_CFLAGS = -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtNetwork -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtPrintSupport -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtWidgets -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtGui -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtConcurrent -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtCore
QT_DBUS_CFLAGS = -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtDBus -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtCore
QT_DBUS_INCLUDES = -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtDBus -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtCore
QT_DBUS_LIBS = -L/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/lib -lQt5DBus -lQt5Core -lz -lqtpcre -lm -ldl -lrt -lpthread -lQt5Core -lpthread -lz -lqtpcre -lm -ldl -lrt
QT_INCLUDES = -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtNetwork -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtPrintSupport -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtWidgets -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtGui -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtConcurrent -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtCore
QT_LDFLAGS = 
QT_LIBS = -L/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/lib -L//home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/lib -L/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/lib -lQt5XcbQpa -lX11 -lX11-xcb -lxcb -lxcb-static -lQt5PlatformSupport -lQt5DBus -lfontconfig -lfreetype -lQt5Gui -lqtpng -lqtharfbuzzng -lQt5Core -lz -lqtpcre -lm -ldl -lrt -lpthread -lfontconfig -lfreetype -lQt5PlatformSupport -lQt5Gui -lqtpng -lqtharfbuzzng -lQt5DBus -lQt5Core -lz -lqtpcre -lm -ldl -lrt -lpthread -lfontconfig -lfreetype -lQt5Gui -lQt5Core -lz -lqtpcre -lm -ldl -lrt -lpthread -lqtpng -lqtharfbuzzng -lz -lQt5Core -lpthread -lz -lqtpcre -lm -ldl -lrt -L/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/lib -lX11-xcb -lX11 -lpthread -lxcb -lXau -L/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/lib -lQt5PlatformSupport -lQt5Gui -lqtpng -lqtharfbuzzng -lQt5DBus -lQt5Core -lz -lqtpcre -lm -ldl -lrt -lpthread -lfontconfig -lfreetype -lQt5Gui -lQt5Core -lz -lqtpcre -lm -ldl -lrt -lpthread -lqtpng -lqtharfbuzzng -lz -lQt5Core -lpthread -lz -lqtpcre -lm -ldl -lrt -L/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/lib -lQt5Network -lQt5Core -lz -lqtpcre -lm -ldl -lrt -lpthread -lz -lssl -lcrypto -lQt5PrintSupport -lQt5Widgets -lQt5Gui -lqtpng -lqtharfbuzzng -lQt5Core -lz -lqtpcre -lm -ldl -lrt -lpthread -lQt5Widgets -lQt5Gui -lqtpng -lqtharfbuzzng -lQt5Core -lz -lqtpcre -lm -ldl -lrt -lpthread -lQt5Gui -lQt5Core -lz -lqtpcre -lm -ldl -lrt -lpthread -lqtpng -lqtharfbuzzng -lz -lQt5Concurrent -lQt5Core -lz -lqtpcre -lm -ldl -lrt -lpthread -lrt -lQt5Core -lpthread -lz -lqtpcre -lm -ldl -lrt -L/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/share/../plugins/platforms
QT_PIE_FLAGS = 
QT_SELECT = qt5
QT_TEST_CFLAGS = -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtTest -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtCore
QT_TEST_INCLUDES = -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtTest -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/QtCore
QT_TEST_LIBS = -L/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/lib -lQt5Test -lQt5Core -lz -lqtpcre -lm -ldl -lrt -lpthread -lQt5Core -lpthread -lz -lqtpcre -lm -ldl -lrt
QT_TRANSLATION_DIR = /home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/share/../translations
RANLIB = ranlib
RCC = 
READELF = /usr/bin/readelf
RELDFLAGS = 
RSVG_CONVERT = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SOLC = /home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/share/../native/bin/solc
SSE42_CXXFLAGS = 
SSL_CFLAGS = -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include
SSL_LIBS = -L/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/lib -lssl -lcrypto -ldl
STRIP = /usr/bin/strip
TESTDEFS = 
TIFFCP = 
UIC = 
USE_QRCODE = 
USE_UPNP = 
VERSION = 0.9.9
WINDOWS_BITS = 
WINDRES = 
X11XCB_CFLAGS = -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include/xcb-shared -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include
X11XCB_LIBS = -L/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/lib -lX11-xcb -lX11 -lpthread -lxcb -lXau
XGETTEXT = /usr/bin/xgettext
ZMQ_CFLAGS = -I/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/include
ZMQ_LIBS = -L/home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu/lib -lzmq -lstdc++
abs_builddir = /home/ubuntu/vds/vds-core/src
abs_srcdir = /home/ubuntu/vds/vds-core/src
abs_top_builddir = /home/ubuntu/vds/vds-core
abs_top_srcdir = /home/ubuntu/vds/vds-core
ac_ct_AR = 
ac_ct_CC = 
ac_ct_CXX = 
ac_ct_DUMPBIN = 
ac_ct_OBJCXX = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = x86_64-unknown-linux-gnu
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = x86_64-unknown-linux-gnu
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/ubuntu/vds/vds-core/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/ubuntu/vds/vds-core/depends/x86_64-unknown-linux-gnu
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  src/secp256k1 src/snark src/univalue src/bitcoincore
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
DIST_SUBDIRS = secp256k1 snark univalue
AM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS) $(HARDENED_LDFLAGS)
AM_CXXFLAGS = $(HARDENED_CXXFLAGS) $(ERROR_CXXFLAGS) -DETH_FATDB=1 $(PIC_FLAGS)
AM_CPPFLAGS = $(HARDENED_CPPFLAGS) -DQTUM_BUILD $(PIC_FLAGS)
BITCOIN_CONFIG_INCLUDES = -I$(builddir)/config
VDS_INCLUDES = -I$(builddir) -I$(builddir)/obj $(BDB_CPPFLAGS) \
	$(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS) \
	$(SSL_CFLAGS) -I$(srcdir)/cpp-ethereum/utils \
	-I$(srcdir)/secp256k1/include -I$(srcdir)/snark \
	-I$(srcdir)/snark/libsnark -I$(srcdir)/univalue/include \
	-I$(srcdir)/cpp-ethereum $(am__append_3)
LIBVDS_SERVER = libvds_server.a
LIBVDS_WALLET = libvds_wallet.a
LIBVDS_COMMON = libvds_common.a
LIBVDS_SQLITE = libvds_sqlite3.a
LIBVDS_CLI = libvds_cli.a
LIBVDS_UTIL = libvds_util.a
LIBVDS_CONSENSUS = libvds_consensus.a
#LIBVDSCONSENSUS = libvdsconsensus.la
LIBVDS_CRYPTO = crypto/libvds_crypto.a
LIBSECP256K1 = secp256k1/libsecp256k1.la
LIBSNARK = snark/libsnark.a
LIBUNIVALUE = univalue/libunivalue.la
LIBVDS = libvds.a
LIBSNARK_CXXFLAGS = $(AM_CXXFLAGS) $(PIC_FLAGS) -DBINARY_OUTPUT -DNO_PT_COMPRESSION=1 -fstack-protector-all
LIBSNARK_CONFIG_FLAGS = CURVE=ALT_BN128 NO_PROCPS=1 NO_DOCS=1 STATIC=1 \
	NO_SUPERCOP=1 FEATUREFLAGS=-DMONTGOMERY_OUTPUT \
	NO_COPY_DEPINST=1 NO_COMPILE_LIBGTEST=1 $(am__append_1) \
	$(am__append_2)

# Make is not made aware of per-object dependencies to avoid limiting building parallelization
# But to build the less dependent modules first, we manually select their order here:
EXTRA_LIBRARIES = $(LIBVDS_CRYPTO) $(LIBVDS_UTIL) $(LIBVDS_SQLITE) \
	$(LIBVDS_COMMON) $(LIBVDS_SERVER) $(LIBVDS_CLI) \
	$(LIBVDS_CONSENSUS) $(LIBVDS_LIGHTNODE) $(LIBVDS) \
	$(am__append_4) $(am__append_5) $(am__append_6) \
	$(am__append_20) $(LIBCRYPTOPP_INT)
lib_LTLIBRARIES = $(LIBVDSCONSENSUS)
LIBVDS_H = \
  vds/IncrementalMerkleTree.hpp \
  vds/NoteEncryption.hpp \
  vds/Address.hpp \
  vds/JoinSplit.hpp \
  vds/Note.hpp \
  vds/prf.h \
  vds/Proof.hpp \
  vds/util.h \
  vds/Vds.h \
  vds/zip32.h

# bitcoin core #
VDS_CORE_H = \
  addressindex.h \
  spentindex.h \
  addrman.h \
  alert.h \
  amount.h \
  amqp/amqpabstractnotifier.h \
  amqp/amqpconfig.h \
  amqp/amqpnotificationinterface.h \
  amqp/amqppublishnotifier.h \
  amqp/amqpsender.h \
  arith_uint256.h \
  asyncrpcoperation.h \
  asyncrpcqueue.h \
  activemasternode.h \
  masternode.h \
  base58.h \
  bech32.h \
  bip38_key.h \
  bloom.h \
  chain.h \
  chainparams.h \
  chainparamsbase.h \
  chainparamsseeds.h \
  checkpoints.h \
  checkqueue.h \
  clientversion.h \
  clue.h \
  coincontrol.h \
  coins.h \
  compat.h \
  compat/byteswap.h \
  compat/endian.h \
  compat/sanity.h \
  compressor.h \
  consensus/consensus.h \
  consensus/params.h \
  consensus/validation.h \
  contract.h \
  contractabi.h \
  contractman.h \
  core_io.h \
  core_memusage.h \
  crypto/pbkdf2.h \
  fs.h \
  vib.h\
  eccryptoverify.h \
  deprecation.h \
  ecwrapper.h \
  flat-database.h \
  hash.h \
  httprpc.h \
  httpserver.h \
  init.h \
  dsnotificationinterface.h \
  key.h \
  key_io.h \
  keystore.h \
  dbwrapper.h \
  limitedmap.h \
  masternode.h \
  masternode-payments.h \
  masternode-sync.h \
  masternodeman.h \
  masternodeconfig.h \
  masternodestatistic.h\
  memusage.h \
  merkleblock.h \
  messagesigner.h \
  metrics.h \
  mruset.h \
  net.h \
  net_processing.h \
  netaddress.h \
  netbase.h \
  netfulfilledman.h \
  noui.h \
  paymentdisclosure.h \
  paymentdisclosuredb.h \
  policy/fees.h \
  policy/feerate.h \
  policy/policy.h \
  policy/rbf.h \
  pow.h \
  prevector.h \
  primitives/block.h \
  primitives/transaction.h \
  protocol.h \
  pubkey.h \
  random.h \
  reverselock.h \
  rpc/client.h \
  rpc/protocol.h \
  rpc/server.h \
  scheduler.h \
  script/interpreter.h \
  script/script.h \
  script/script_error.h \
  script/sigcache.h \
  script/sign.h \
  script/standard.h \
  serialize.h \
  streams.h \
  support/allocators/secure.h \
  support/allocators/zeroafterfree.h \
  support/cleanse.h \
  support/events.h \
  support/pagelocker.h \
  support/lockedpool.h \
  sync.h \
  threadsafety.h \
  threadinterrupt.h \
  timedata.h \
  tinyformat.h \
  torcontrol.h \
  transaction_builder.h \
  txdb.h \
  txmempool.h \
  cluedb.h \
  txdestinationtool.h \
  addb.h \
  ui_interface.h \
  uint256.h \
  uint252.h \
  undo.h \
  util.h \
  utilmoneystr.h \
  utilstrencodings.h \
  utiltime.h \
  validation.h \
  validationinterface.h \
  version.h \
  versionbits.h \
  sqlitewrapper.h \
  wallet/asyncrpcoperation_sendmany.h \
  wallet/asyncrpcoperation_shieldcoinbase.h \
  wallet/bip39_mnemonic.h \
  wallet/bip39_words_english.h \
  wallet/crypter.h \
  wallet/db.h \
  wallet/feebumper.h \
  wallet/fees.h \
  wallet/rpcwallet.h \
  wallet/wallet.h \
  wallet/wallet_ismine.h \
  wallet/walletdb.h \
  zmq/zmqabstractnotifier.h \
  zmq/zmqconfig.h\
  zmq/zmqnotificationinterface.h \
  zmq/zmqpublishnotifier.h \
  qtum/qtumstate.h \
  qtum/qtumtransaction.h \
  qtum/qtumDGP.h \
  qtum/storageresults.h


#libvds_sqlite3.a
libvds_sqlite3_a_CFLAGS = $(AM_CFLAGS) $(PIC_FLAGS) -D_HAVE_SQLITE_CONFIG_H -DBUILD_sqlite -DNDEBUG  -DSQLITE_THREADSAFE=1 -DSQLITE_OMIT_LOAD_EXTENSION=1   -DSQLITE_TEMP_STORE=1
libvds_sqlite3_a_SOURCES = sqlite3.c

# server: vdsd
libvds_server_a_CPPFLAGS = $(VDS_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS) $(PROTOBUF_CFLAGS) 
LIBVDS_SERVER_A_SOURCES = \
  sendalert.cpp \
  addrman.cpp \
  addrdb.cpp \
  alert.cpp \
  alertkeys.h \
  asyncrpcoperation.cpp \
  asyncrpcqueue.cpp \
  bloom.cpp \
  chain.cpp \
  checkpoints.cpp \
  clue.cpp \
  cluedb.cpp \
  deprecation.cpp \
  httprpc.cpp \
  httpserver.cpp \
  init.cpp \
  dsnotificationinterface.cpp \
  dbwrapper.cpp \
  masternode.cpp \
  masternode-payments.cpp \
  masternode-sync.cpp \
  masternodeconfig.cpp \
  masternodeman.cpp \
  masternodestatistic.cpp\
  merkleblock.cpp \
  metrics.cpp \
  messagesigner.cpp \
  consensus/merkle.cpp \
  net.cpp \
  netfulfilledman.cpp \
  net_processing.cpp \
  noui.cpp \
  policy/fees.cpp \
  policy/feerate.cpp \
  policy/policy.cpp \
  pow.cpp \
  rest.cpp \
  rpc/blockchain.cpp \
  rpc/masternode.cpp \
  rpc/misc.cpp \
  rpc/net.cpp \
  rpc/ad.cpp \
  rpc/masternode.cpp \
  rpc/rawtransaction.cpp \
  rpc/server.cpp \
  script/sigcache.cpp \
  sendalert.cpp \
  tandiadb.cpp \
  timedata.cpp \
  torcontrol.cpp \
  txdb.cpp \
  txdestinationtool.cpp \
  addb.cpp \
  txmempool.cpp \
  ui_interface.cpp \
  validation.cpp \
  validationinterface.cpp \
  versionbits.cpp \
  qtum/qtumstate.cpp \
  qtum/qtumtransaction.cpp \
  qtum/qtumDGP.cpp \
  qtum/storageresults.cpp

libvds_server_a_SOURCES = \
  $(LIBVDS_SERVER_A_SOURCES) \
  $(GENERATED_DEP_FILES) \
  $(VDS_CORE_H) \
  $(LIBVDS_H)

libvds_server_a_LIBADD = $(LIBVDS_SQLITE) $(LIBVDS)
LIBVDS_ZMQ = libvds_zmq.a
libvds_zmq_a_CPPFLAGS = $(VDS_INCLUDES) $(ZMQ_CFLAGS)
libvds_zmq_a_SOURCES = \
  zmq/zmqabstractnotifier.cpp \
  zmq/zmqnotificationinterface.cpp \
  zmq/zmqpublishnotifier.cpp

#LIBVDS_PROTON = libvds_proton.a
#libvds_proton_a_CPPFLAGS = $(VDS_INCLUDES)
#libvds_proton_a_SOURCES = \
#  amqp/amqpabstractnotifier.cpp \
#  amqp/amqpnotificationinterface.cpp \
#  amqp/amqppublishnotifier.cpp


# wallet: vdsd, but only linked when wallet enabled
libvds_wallet_a_CPPFLAGS = $(VDS_INCLUDES)
libvds_wallet_a_SOURCES = \
  ui_interface.cpp \
  zcbenchmarks.cpp \
  zcbenchmarks.h \
  activemasternode.cpp \
  contract.cpp \
  contractabi.cpp \
  contractman.cpp \
  masternode.cpp \
  masternodeman.cpp \
  masternodestatistic.cpp\
  masternodeconfig.cpp \
  masternode-sync.cpp \
  masternode-payments.cpp \
  base58.cpp \
  bip38_key.cpp \
  rpc/blockchain.cpp \
  rpc/misc.cpp \
  rpc/masternode.cpp \
  wallet/asyncrpcoperation_sendmany.cpp \
  wallet/asyncrpcoperation_shieldcoinbase.cpp \
  wallet/bip39_mnemonic.cpp \
  wallet/crypter.cpp \
  wallet/db.cpp \
  wallet/feebumper.cpp \
  wallet/fees.cpp \
  paymentdisclosure.cpp \
  paymentdisclosuredb.cpp \
  wallet/rpcdisclosure.cpp \
  wallet/rpcdump.cpp \
  wallet/rpcwallet.cpp \
  wallet/wallet.cpp \
  wallet/wallet_ismine.cpp \
  wallet/walletdb.cpp \
  $(VDS_CORE_H) \
  $(LIBVDS_H)

libvds_wallet_a_LIBADD = $(LIBVDS)

# crypto primitives library
crypto_libvds_crypto_a_CPPFLAGS = $(BITCOIN_CONFIG_INCLUDES)
crypto_libvds_crypto_a_CXXFLAGS = $(AM_CXXFLAGS)
crypto_libvds_crypto_a_CFLAGS = $(AM_CXXFLAGS)
crypto_libvds_crypto_a_SOURCES = crypto/chacha20.h crypto/chacha20.cpp \
	crypto/common.h crypto/equihash.cpp crypto/equihash.h \
	crypto/equihash.tcc crypto/hmac_sha256.cpp \
	crypto/hmac_sha256.h crypto/hmac_sha512.cpp \
	crypto/hmac_sha512.h crypto/scrypt.cpp crypto/scrypt.h \
	crypto/ripemd160.cpp crypto/ripemd160.h crypto/sha1.cpp \
	crypto/sha1.h crypto/sha256.cpp crypto/sha256.h \
	crypto/sha512.cpp crypto/sha512.h \
	cpp-ethereum/utils/libscrypt/b64.c \
	cpp-ethereum/utils/libscrypt/b64.h \
	cpp-ethereum/utils/libscrypt/crypto-mcf.c \
	cpp-ethereum/utils/libscrypt/crypto_scrypt-check.c \
	cpp-ethereum/utils/libscrypt/crypto_scrypt-hash.c \
	cpp-ethereum/utils/libscrypt/crypto_scrypt-hexconvert.c \
	cpp-ethereum/utils/libscrypt/crypto_scrypt-hexconvert.h \
	cpp-ethereum/utils/libscrypt/crypto_scrypt-nosse.c \
	cpp-ethereum/utils/libscrypt/crypto-scrypt-saltgen.c \
	cpp-ethereum/utils/libscrypt/libscrypt.h \
	cpp-ethereum/utils/libscrypt/sha256.c \
	cpp-ethereum/utils/libscrypt/sha256.h \
	cpp-ethereum/utils/libscrypt/slowequals.c \
	cpp-ethereum/utils/libscrypt/slowequals.h \
	cpp-ethereum/utils/libscrypt/sysendian.h support/cleanse.cpp \
	$(am__append_9)
libvds_consensus_a_CPPFLAGS = $(AM_CPPFLAGS) $(VDS_INCLUDES)
libvds_consensus_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
libvds_consensus_a_SOURCES = \
  crypto/equihash.cpp \
  crypto/hmac_sha512.cpp \
  crypto/ripemd160.cpp \
  crypto/sha1.cpp \
  crypto/sha256.cpp \
  crypto/sha512.cpp \
  eccryptoverify.cpp \
  ecwrapper.cpp \
  hash.cpp \
  primitives/transaction.cpp \
  pubkey.cpp \
  script/vdsconsensus.cpp \
  script/interpreter.cpp \
  script/script.cpp \
  uint256.cpp \
  utilstrencodings.cpp


# common: shared between vdsd and non-server tools
libvds_common_a_CPPFLAGS = $(AM_CPPFLAGS) $(VDS_INCLUDES) -DQTUM_BUILD
libvds_common_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS) $(PIC_FLAGS)
libvds_common_a_LIBADD = $(LIBSECP256K1)
libvds_common_a_CFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS) $(PIC_FLAGS) -std=c99
libvds_common_a_SOURCES = arith_uint256.cpp base58.cpp bech32.cpp \
	chainparams.cpp coins.cpp compressor.cpp core_read.cpp \
	core_write.cpp eccryptoverify.cpp ecwrapper.cpp hash.cpp \
	key.cpp key_io.cpp keystore.cpp netaddress.cpp netbase.cpp \
	primitives/block.cpp primitives/transaction.cpp protocol.cpp \
	pubkey.cpp scheduler.cpp script/interpreter.cpp \
	script/script.cpp script/script_error.cpp script/sign.cpp \
	script/standard.cpp transaction_builder.cpp \
	cpp-ethereum/libdevcore/Base64.cpp \
	cpp-ethereum/libdevcore/Base64.h \
	cpp-ethereum/libdevcore/Common.cpp \
	cpp-ethereum/libdevcore/Common.h \
	cpp-ethereum/libdevcore/CommonData.cpp \
	cpp-ethereum/libdevcore/CommonData.h \
	cpp-ethereum/libdevcore/CommonIO.cpp \
	cpp-ethereum/libdevcore/CommonIO.h \
	cpp-ethereum/libdevcore/CommonJS.cpp \
	cpp-ethereum/libdevcore/CommonJS.h \
	cpp-ethereum/libdevcore/FileSystem.cpp \
	cpp-ethereum/libdevcore/FileSystem.h \
	cpp-ethereum/libdevcore/FixedHash.cpp \
	cpp-ethereum/libdevcore/FixedHash.h \
	cpp-ethereum/libdevcore/Guards.cpp \
	cpp-ethereum/libdevcore/Guards.h \
	cpp-ethereum/libdevcore/Hash.cpp \
	cpp-ethereum/libdevcore/Hash.h cpp-ethereum/libdevcore/Log.cpp \
	cpp-ethereum/libdevcore/Log.h \
	cpp-ethereum/libdevcore/MemoryDB.cpp \
	cpp-ethereum/libdevcore/MemoryDB.h \
	cpp-ethereum/libdevcore/OverlayDB.cpp \
	cpp-ethereum/libdevcore/OverlayDB.h \
	cpp-ethereum/libdevcore/RLP.cpp cpp-ethereum/libdevcore/RLP.h \
	cpp-ethereum/libdevcore/SHA3.cpp \
	cpp-ethereum/libdevcore/SHA3.h \
	cpp-ethereum/libdevcore/TransientDirectory.cpp \
	cpp-ethereum/libdevcore/TransientDirectory.h \
	cpp-ethereum/libdevcore/TrieCommon.cpp \
	cpp-ethereum/libdevcore/TrieCommon.h \
	cpp-ethereum/libdevcore/Worker.cpp \
	cpp-ethereum/libdevcore/Worker.h \
	cpp-ethereum/libevm/ExtVMFace.cpp \
	cpp-ethereum/libevm/ExtVMFace.h cpp-ethereum/libevm/VM.cpp \
	cpp-ethereum/libevm/VM.h cpp-ethereum/libevm/VMOpt.cpp \
	cpp-ethereum/libevm/VMCalls.cpp \
	cpp-ethereum/libevm/VMFactory.cpp \
	cpp-ethereum/libevm/VMFactory.h \
	cpp-ethereum/libevmcore/Instruction.cpp \
	cpp-ethereum/libevmcore/Instruction.h \
	cpp-ethereum/libevmcore/Exceptions.h \
	cpp-ethereum/libevmcore/EVMSchedule.h \
	cpp-ethereum/libethereum/Account.cpp \
	cpp-ethereum/libethereum/Defaults.cpp \
	cpp-ethereum/libethereum/GasPricer.cpp \
	cpp-ethereum/libethereum/State.cpp \
	cpp-ethereum/libethcore/ABI.cpp \
	cpp-ethereum/libethcore/ChainOperationParams.cpp \
	cpp-ethereum/libethcore/Common.cpp \
	cpp-ethereum/libethcore/ICAP.cpp \
	cpp-ethereum/libethcore/Precompiled.cpp \
	cpp-ethereum/libdevcore/TrieDB.cpp \
	cpp-ethereum/libdevcrypto/Common.cpp \
	cpp-ethereum/libdevcrypto/CryptoPP.cpp \
	cpp-ethereum/libdevcrypto/AES.cpp \
	cpp-ethereum/libdevcrypto/ECDHE.cpp \
	cpp-ethereum/libethashseal/GenesisInfo.cpp \
	cpp-ethereum/libethereum/ChainParams.cpp \
	cpp-ethereum/libethcore/Transaction.cpp \
	cpp-ethereum/libethereum/Transaction.cpp \
	cpp-ethereum/libethereum/Executive.cpp \
	cpp-ethereum/libethereum/ExtVM.cpp \
	cpp-ethereum/libethereum/Block.cpp \
	cpp-ethereum/libethereum/BlockChain.cpp \
	cpp-ethereum/libethereum/BlockDetails.cpp \
	cpp-ethereum/libethereum/TransactionQueue.cpp \
	cpp-ethereum/libethereum/BlockQueue.cpp \
	cpp-ethereum/libethcore/BlockHeader.cpp \
	cpp-ethereum/libdevcore/RLP.cpp \
	cpp-ethereum/libethereum/TransactionReceipt.cpp \
	cpp-ethereum/libethcore/SealEngine.cpp \
	cpp-ethereum/libdevcore/TrieHash.cpp \
	cpp-ethereum/libethereum/GenesisInfo.cpp \
	cpp-ethereum/libethashseal/Ethash.cpp \
	cpp-ethereum/libethashseal/EthashCPUMiner.cpp \
	cpp-ethereum/libethashseal/EthashAux.cpp \
	cpp-ethereum/libethashseal/EthashProofOfWork.cpp \
	cpp-ethereum/libethereum/Account.h \
	cpp-ethereum/libethereum/Defaults.h \
	cpp-ethereum/libethereum/GasPricer.h \
	cpp-ethereum/libethereum/State.h cpp-ethereum/libethcore/ABI.h \
	cpp-ethereum/libethcore/ChainOperationParams.h \
	cpp-ethereum/libethcore/Common.h \
	cpp-ethereum/libethcore/ICAP.h \
	cpp-ethereum/libethcore/Precompiled.h \
	cpp-ethereum/libdevcore/TrieDB.h \
	cpp-ethereum/libdevcrypto/Common.h \
	cpp-ethereum/libdevcrypto/CryptoPP.h \
	cpp-ethereum/libdevcrypto/AES.h \
	cpp-ethereum/libdevcrypto/ECDHE.h \
	cpp-ethereum/libethashseal/GenesisInfo.h \
	cpp-ethereum/libethereum/ChainParams.h \
	cpp-ethereum/libethcore/Transaction.h \
	cpp-ethereum/libethcore/Exceptions.h \
	cpp-ethereum/libethereum/Transaction.h \
	cpp-ethereum/libethereum/Executive.h \
	cpp-ethereum/libethereum/ExtVM.h \
	cpp-ethereum/libethereum/Block.h \
	cpp-ethereum/libethereum/BlockChain.h \
	cpp-ethereum/libethereum/BlockDetails.h \
	cpp-ethereum/libethereum/TransactionQueue.h \
	cpp-ethereum/libethereum/BlockQueue.h \
	cpp-ethereum/libethcore/BlockHeader.h \
	cpp-ethereum/libdevcore/RLP.h \
	cpp-ethereum/libethereum/TransactionReceipt.h \
	cpp-ethereum/libethcore/SealEngine.h \
	cpp-ethereum/libdevcore/TrieHash.h \
	cpp-ethereum/libethereum/GenesisInfo.h \
	cpp-ethereum/libethashseal/Ethash.h \
	cpp-ethereum/libethashseal/EthashCPUMiner.h \
	cpp-ethereum/libethashseal/EthashAux.h \
	cpp-ethereum/libethashseal/EthashProofOfWork.h \
	cpp-ethereum/libethash/internal.c cpp-ethereum/libethash/io.c \
	cpp-ethereum/libethash/sha3.c \
	cpp-ethereum/libethash/internal.h cpp-ethereum/libethash/io.h \
	cpp-ethereum/libethash/sha3.h \
	cpp-ethereum/libdevcore/vector_ref.h \
	cpp-ethereum/libdevcore/Exceptions.h \
	cpp-ethereum/libdevcore/db.h \
	cpp-ethereum/libdevcore/concurrent_queue.h \
	cpp-ethereum/libdevcore/Terminal.h \
	cpp-ethereum/libethereum/CodeSizeCache.h \
	cpp-ethereum/libethereum/VerifiedBlock.h \
	cpp-ethereum/libdevcore/Assertions.h \
	cpp-ethereum/libdevcore/debugbreak.h \
	cpp-ethereum/libethereum/GenericMiner.h \
	cpp-ethereum/libevm/VMFace.h \
	cpp-ethereum/libethereum/GenericFarm.h \
	cpp-ethereum/libethereum/Interface.h \
	cpp-ethereum/libethcore/CommonJS.h \
	cpp-ethereum/libdevcore/picosha2.h \
	cpp-ethereum/libevm/VMConfig.h \
	cpp-ethereum/libethereum/LogFilter.h \
	cpp-ethereum/libdevcrypto/Exceptions.h \
	cpp-ethereum/libethashseal/genesis/mainNetwork.cpp \
	cpp-ethereum/libethashseal/genesis/eip150Test.cpp \
	cpp-ethereum/libethashseal/genesis/eip158Test.cpp \
	cpp-ethereum/libethashseal/genesis/frontierTest.cpp \
	cpp-ethereum/libethashseal/genesis/homesteadTest.cpp \
	cpp-ethereum/libethashseal/genesis/mainNetworkTest.cpp \
	cpp-ethereum/libethashseal/genesis/metropolisTest.cpp \
	cpp-ethereum/libethashseal/genesis/qtumMainNetwork.cpp \
	cpp-ethereum/libethashseal/genesis/qtumTestNetwork.cpp \
	cpp-ethereum/libethashseal/genesis/ropsten.cpp \
	cpp-ethereum/libethashseal/genesis/transitionnetTest.cpp \
	cpp-ethereum/libethash/ethash.h \
	cpp-ethereum/libethash/compiler.h \
	cpp-ethereum/libethash/data_sizes.h \
	cpp-ethereum/libethash/fnv.h cpp-ethereum/libethash/mmap.h \
	cpp-ethereum/libethash/endian.h cpp-ethereum/libethash/io.h \
	cpp-ethereum/libethash/ethash.h \
	cpp-ethereum/libethash/internal.h \
	cpp-ethereum/libethash/mmap_win32.c \
	cpp-ethereum/utils/json_spirit/JsonSpiritHeaders.h \
	cpp-ethereum/utils/json_spirit/json_spirit.h \
	cpp-ethereum/utils/json_spirit/json_spirit_error_position.h \
	cpp-ethereum/utils/json_spirit/json_spirit_reader.h \
	cpp-ethereum/utils/json_spirit/json_spirit_reader_template.h \
	cpp-ethereum/utils/json_spirit/json_spirit_stream_reader.h \
	cpp-ethereum/utils/json_spirit/json_spirit_utils.h \
	cpp-ethereum/utils/json_spirit/json_spirit_value.h \
	cpp-ethereum/utils/json_spirit/json_spirit_writer.h \
	cpp-ethereum/utils/json_spirit/json_spirit_writer_template.h \
	$(VDS_CORE_H) $(LIBVDS_H) $(am__append_10) $(am__append_11)

# util: shared between all executables.
# This library *must* be included to make sure that the glibc
# backward-compatibility objects and their sanity checks are linked.
libvds_util_a_CPPFLAGS = $(VDS_INCLUDES)
libvds_util_a_SOURCES = support/pagelocker.cpp support/lockedpool.cpp \
	chainparamsbase.cpp clientversion.cpp compat/glibc_sanity.cpp \
	compat/glibcxx_sanity.cpp compat/strnlen.cpp fs.cpp random.cpp \
	rpc/protocol.cpp support/cleanse.cpp sync.cpp uint256.cpp \
	threadinterrupt.cpp util.cpp utilmoneystr.cpp \
	utilstrencodings.cpp utiltime.cpp $(VDS_CORE_H) $(LIBVDS_H) \
	$(am__append_12)

# cli: vds-cli
libvds_cli_a_CPPFLAGS = $(VDS_INCLUDES)
libvds_cli_a_SOURCES = \
  rpc/client.cpp \
  $(VDS_CORE_H) \
  $(LIBVDS_H)

nodist_libvds_util_a_SOURCES = $(srcdir)/obj/build.h

# bitcoind binary #
vdsd_SOURCES = bitcoind.cpp $(am__append_13)
vdsd_CPPFLAGS = $(VDS_INCLUDES)
vdsd_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
vdsd_LDADD = $(LIBVDS_SERVER) $(LIBVDS_SQLITE) $(am__append_14) \
	$(LIBVDS_COMMON) $(LIBUNIVALUE) $(LIBVDS_UTIL) \
	$(LIBVDS_CONSENSUS) $(LIBVDS_CRYPTO) $(LIBVDS) $(LIBSNARK) \
	$(LIBLEVELDB) $(LIBMEMENV) $(LIBCRYPTOPP) $(LIBSECP256K1) \
	$(am__append_15) $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) \
	$(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) \
	$(EVENT_LIBS) $(LIBVDS_CRYPTO) $(LIBVDS_LIBS) $(PROTOBUF_LIBS) \
	$(am__append_16)

# bitcoin-cli binary #
vds_cli_SOURCES = bitcoin-cli.cpp $(am__append_17)
vds_cli_CPPFLAGS = $(VDS_INCLUDES) $(EVENT_CFLAGS)
vds_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
vds_cli_LDADD = \
  $(LIBVDS_CLI) \
  $(LIBUNIVALUE) \
  $(LIBVDS_UTIL) \
  $(BOOST_LIBS) \
  $(SSL_LIBS) \
  $(CRYPTO_LIBS) \
  $(EVENT_LIBS) \
  $(LIBVDS) \
  $(LIBSNARK) \
  $(LIBVDS_CRYPTO) \
  $(LIBCRYPTOPP) \
  $(LIBVDS_LIBS)

#

# vds-tx binary #
vds_tx_SOURCES = bitcoin-tx.cpp $(am__append_18)
vds_tx_CPPFLAGS = $(VDS_INCLUDES)
vds_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)

# FIXME: Is libvds needed for vds_tx?
vds_tx_LDADD = $(LIBUNIVALUE) $(LIBVDS_COMMON) $(LIBVDS_LIGHTNODE) \
	$(LIBVDS_UTIL) $(LIBSECP256K1) $(LIBVDS_CONSENSUS) $(LIBVDS) \
	$(LIBSNARK) $(LIBCRYPTOPP) $(LIBVDS_CRYPTO) $(LIBVDS_LIBS) \
	$(BOOST_LIBS) $(CRYPTO_LIBS)
#

# vds protocol primitives #
libvds_a_SOURCES = \
  crypto/sha256.cpp \
  crypto/sha256.cpp \
  vds/IncrementalMerkleTree.cpp \
  vds/NoteEncryption.cpp \
  vds/Address.cpp \
  vds/JoinSplit.cpp \
  vds/Proof.cpp \
  vds/Note.cpp \
  vds/prf.cpp \
  vds/util.cpp \
  vds/zip32.cpp \
  vds/util.cpp \
  vds/circuit/commitment.tcc \
  vds/circuit/gadget.tcc \
  vds/circuit/merkle.tcc \
  vds/circuit/note.tcc \
  vds/circuit/prfs.tcc \
  vds/circuit/utils.tcc

#libvds_a_CPPFLAGS += -DBINARY_OUTPUT -DCURVE_ALT_BN128 -DBOOST_SPIRIT_THREADSAFE -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS -fvisibility=default
libvds_a_CPPFLAGS = $(AM_CPPFLAGS) $(VDS_INCLUDES) -DBINARY_OUTPUT \
	-DCURVE_ALT_BN128 -DBOOST_SPIRIT_THREADSAFE -DHAVE_BUILD_INFO \
	-D__STDC_FORMAT_MACROS -DMONTGOMERY_OUTPUT
libvds_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS) $(PIC_FLAGS) $(HARDENED_CXXFLAGS) -fwrapv -fno-strict-aliasing 

# libvds_a_LDFLAGS = $(HARDENED_LDFLAGS)
libvds_a_LIBADD = $(LIBSECP256K1) $(LIBSNARK)

# vdsconsensus library #
#include_HEADERS = script/vdsconsensus.h
#libvdsconsensus_la_SOURCES =  \
#	crypto/equihash.cpp \
#	crypto/hmac_sha512.cpp \
#	crypto/ripemd160.cpp crypto/sha1.cpp \
#	crypto/sha256.cpp crypto/sha512.cpp \
#	hash.cpp primitives/transaction.cpp \
#	pubkey.cpp script/vdsconsensus.cpp \
#	script/interpreter.cpp \
#	script/script.cpp uint256.cpp \
#	utilstrencodings.cpp $(am__append_19)
#libvdsconsensus_la_LDFLAGS = $(AM_LDFLAGS) -no-undefined $(RELDFLAGS)
#libvdsconsensus_la_LIBADD = $(LIBSECP256K1)
#libvdsconsensus_la_CPPFLAGS = $(VDS_INCLUDES) -I$(builddir)/obj -I$(srcdir)/secp256k1/include -DBUILD_BITCOIN_INTERNAL

#
CLEANFILES = leveldb/libleveldb.a leveldb/libmemenv.a *.gcda *.gcno \
	*/*.gcno wallet/*/*.gcno $(EXTRA_LIBRARIES) $(LIBSNARK) \
	$(am__append_33) $(am__append_42)
DISTCLEANFILES = obj/build.h
EXTRA_DIST = leveldb snark $(am__append_37)
LIBLEVELDB_INT = leveldb/libleveldb.a
LIBMEMENV_INT = leveldb/libmemenv.a
LEVELDB_CPPFLAGS_INT = -I$(srcdir)/leveldb \
	$(LEVELDB_TARGET_FLAGS) \
	-DLEVELDB_ATOMIC_PRESENT \
	-D__STDC_LIMIT_MACROS $(am__append_24) \
	$(am__append_25)
leveldb_libleveldb_a_CPPFLAGS = $(AM_CPPFLAGS) $(LEVELDB_CPPFLAGS_INT) $(LEVELDB_CPPFLAGS)
leveldb_libleveldb_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
leveldb_libleveldb_a_SOURCES =  \
	leveldb/port/atomic_pointer.h \
	leveldb/port/port_example.h \
	leveldb/port/port_posix.h \
	leveldb/port/win/stdint.h \
	leveldb/port/port.h \
	leveldb/port/port_win.h \
	leveldb/port/thread_annotations.h \
	leveldb/include/leveldb/db.h \
	leveldb/include/leveldb/options.h \
	leveldb/include/leveldb/comparator.h \
	leveldb/include/leveldb/filter_policy.h \
	leveldb/include/leveldb/slice.h \
	leveldb/include/leveldb/table_builder.h \
	leveldb/include/leveldb/env.h \
	leveldb/include/leveldb/c.h \
	leveldb/include/leveldb/iterator.h \
	leveldb/include/leveldb/cache.h \
	leveldb/include/leveldb/dumpfile.h \
	leveldb/include/leveldb/table.h \
	leveldb/include/leveldb/write_batch.h \
	leveldb/include/leveldb/status.h \
	leveldb/db/log_format.h \
	leveldb/db/memtable.h \
	leveldb/db/version_set.h \
	leveldb/db/write_batch_internal.h \
	leveldb/db/filename.h \
	leveldb/db/version_edit.h \
	leveldb/db/dbformat.h \
	leveldb/db/builder.h \
	leveldb/db/log_writer.h \
	leveldb/db/db_iter.h \
	leveldb/db/skiplist.h \
	leveldb/db/db_impl.h \
	leveldb/db/table_cache.h \
	leveldb/db/snapshot.h \
	leveldb/db/log_reader.h \
	leveldb/table/filter_block.h \
	leveldb/table/block_builder.h \
	leveldb/table/block.h \
	leveldb/table/two_level_iterator.h \
	leveldb/table/merger.h \
	leveldb/table/format.h \
	leveldb/table/iterator_wrapper.h \
	leveldb/util/crc32c.h \
	leveldb/util/arena.h \
	leveldb/util/random.h \
	leveldb/util/posix_logger.h \
	leveldb/util/hash.h \
	leveldb/util/histogram.h \
	leveldb/util/coding.h \
	leveldb/util/testutil.h \
	leveldb/util/mutexlock.h \
	leveldb/util/logging.h \
	leveldb/util/testharness.h \
	leveldb/db/builder.cc leveldb/db/c.cc \
	leveldb/db/dbformat.cc \
	leveldb/db/db_impl.cc \
	leveldb/db/db_iter.cc \
	leveldb/db/dumpfile.cc \
	leveldb/db/filename.cc \
	leveldb/db/log_reader.cc \
	leveldb/db/log_writer.cc \
	leveldb/db/memtable.cc \
	leveldb/db/repair.cc \
	leveldb/db/table_cache.cc \
	leveldb/db/version_edit.cc \
	leveldb/db/version_set.cc \
	leveldb/db/write_batch.cc \
	leveldb/table/block_builder.cc \
	leveldb/table/block.cc \
	leveldb/table/filter_block.cc \
	leveldb/table/format.cc \
	leveldb/table/iterator.cc \
	leveldb/table/merger.cc \
	leveldb/table/table_builder.cc \
	leveldb/table/table.cc \
	leveldb/table/two_level_iterator.cc \
	leveldb/util/arena.cc \
	leveldb/util/bloom.cc \
	leveldb/util/cache.cc \
	leveldb/util/coding.cc \
	leveldb/util/comparator.cc \
	leveldb/util/crc32c.cc \
	leveldb/util/env.cc \
	leveldb/util/env_posix.cc \
	leveldb/util/filter_policy.cc \
	leveldb/util/hash.cc \
	leveldb/util/histogram.cc \
	leveldb/util/logging.cc \
	leveldb/util/options.cc \
	leveldb/util/status.cc $(am__append_26) \
	$(am__append_27)
leveldb_libmemenv_a_CPPFLAGS = $(leveldb_libleveldb_a_CPPFLAGS)
leveldb_libmemenv_a_CXXFLAGS = $(leveldb_libleveldb_a_CXXFLAGS)
leveldb_libmemenv_a_SOURCES =  \
	leveldb/helpers/memenv/memenv.cc \
	leveldb/helpers/memenv/memenv.h
LIBCRYPTOPP_INT = cryptopp/libcryptopp.a
CRYPTOPP_CPPFLAGS_INT = -I$(srcdir)/cryptopp $(CRYPTOPP_TARGET_FLAGS)
cryptopp_libcryptopp_a_CPPFLAGS = $(AM_CPPFLAGS) $(CRYPTOPP_CPPFLAGS_INT) $(CRYPTOPP_CPPFLAGS)
# TODO, don't assume x86
cryptopp_libcryptopp_a_CXXFLAGS = $(AM_CXXFLAGS) -DNDEBUG -fPIC -O2 -g2
cryptopp_libcryptopp_a_SOURCES = cryptopp/cryptlib.cpp \
	cryptopp/cpu.cpp cryptopp/integer.cpp cryptopp/algebra.cpp \
	cryptopp/algparam.cpp cryptopp/asn.cpp cryptopp/basecode.cpp \
	cryptopp/dsa.cpp cryptopp/des.cpp cryptopp/dessp.cpp \
	cryptopp/dll.cpp cryptopp/ec2n.cpp cryptopp/eccrypto.cpp \
	cryptopp/ecp.cpp cryptopp/eprecomp.cpp cryptopp/filters.cpp \
	cryptopp/fips140.cpp cryptopp/gf2n.cpp cryptopp/gfpcrypt.cpp \
	cryptopp/hex.cpp cryptopp/hmac.cpp cryptopp/hrtimer.cpp \
	cryptopp/iterhash.cpp cryptopp/keccak.cpp cryptopp/misc.cpp \
	cryptopp/modes.cpp cryptopp/mqueue.cpp cryptopp/nbtheory.cpp \
	cryptopp/oaep.cpp cryptopp/osrng.cpp cryptopp/polynomi.cpp \
	cryptopp/pubkey.cpp cryptopp/queue.cpp cryptopp/randpool.cpp \
	cryptopp/rdtables.cpp cryptopp/rijndael.cpp cryptopp/rng.cpp \
	cryptopp/sha.cpp cryptopp/strciphr.cpp cryptopp/winpipes.cpp \
	cryptopp/sha3.cpp cryptopp/cryptlib.h cryptopp/cpu.h \
	cryptopp/integer.h cryptopp/algebra.h cryptopp/algparam.h \
	cryptopp/asn.h cryptopp/basecode.h cryptopp/dsa.h \
	cryptopp/des.h cryptopp/dll.h cryptopp/ec2n.h \
	cryptopp/eccrypto.h cryptopp/ecp.h cryptopp/eprecomp.h \
	cryptopp/filters.h cryptopp/fips140.h cryptopp/gf2n.h \
	cryptopp/gfpcrypt.h cryptopp/hex.h cryptopp/hmac.h \
	cryptopp/hrtimer.h cryptopp/iterhash.h cryptopp/keccak.h \
	cryptopp/misc.h cryptopp/modes.h cryptopp/mqueue.h \
	cryptopp/nbtheory.h cryptopp/oaep.h cryptopp/osrng.h \
	cryptopp/polynomi.h cryptopp/pubkey.h cryptopp/queue.h \
	cryptopp/randpool.h cryptopp/rijndael.h cryptopp/rng.h \
	cryptopp/sha.h cryptopp/strciphr.h cryptopp/winpipes.h \
	cryptopp/sha3.h cryptopp/aes.h cryptopp/factory.h \
	cryptopp/config.h cryptopp/dmac.h cryptopp/drbg.h \
	cryptopp/esign.h cryptopp/fhmqv.h cryptopp/hkdf.h \
	cryptopp/hmqv.h cryptopp/lubyrack.h cryptopp/mersenne.h \
	cryptopp/modarith.h cryptopp/modexppc.h cryptopp/nr.h \
	cryptopp/pwdbased.h cryptopp/secblock.h cryptopp/siphash.h \
	cryptopp/trunhash.h cryptopp/validate.h cryptopp/words.h \
	cryptopp/seckey.h cryptopp/stdcpp.h cryptopp/trap.h \
	cryptopp/smartptr.h cryptopp/simple.h cryptopp/argnames.h \
	cryptopp/dh.h cryptopp/mqv.h cryptopp/ecpoint.h \
	cryptopp/fltrimpl.h cryptopp/oids.h cryptopp/ossig.h \
	cryptopp/pch.h cryptopp/cbcmac.h cryptopp/trdlocal.h \
	cryptopp/ccm.h cryptopp/*.h
BENCH_SRCDIR = bench
BENCH_BINARY = bench/bench_bitcoin$(EXEEXT)
RAW_TEST_FILES = \
  bench/data/block413567.raw

RAW_TEST_FILES = test/data/alertTests.raw
GENERATED_TEST_FILES = $(RAW_TEST_FILES:.raw=.raw.h)
GENERATED_TEST_FILES = $(JSON_TEST_FILES:.json=.json.h) $(RAW_TEST_FILES:.raw=.raw.h)
bench_bench_bitcoin_SOURCES =  \
	bench/bench_bitcoin.cpp bench/bench.cpp \
	bench/bench.h bench/checkblock.cpp \
	bench/checkqueue.cpp bench/Examples.cpp \
	bench/rollingbloom.cpp \
	bench/crypto_hash.cpp \
	bench/ccoins_caching.cpp \
	bench/mempool_eviction.cpp \
	bench/verify_script.cpp bench/base58.cpp \
	bench/lockedpool.cpp bench/perf.cpp \
	bench/perf.h bench/prevector_destructor.cpp \
	$(am__append_29)
nodist_bench_bench_bitcoin_SOURCES = $(GENERATED_TEST_FILES)
bench_bench_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(VDS_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/
bench_bench_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
bench_bench_bitcoin_LDADD = $(LIBBITCOIN_SERVER) \
	$(LIBVDS_SERVER) $(LIBVDS_SQLITE) \
	$(am__append_30) $(LIBVDS_CLI) \
	$(LIBVDS_COMMON) $(LIBBITCOIN_COMMON) \
	$(LIBUNIVALUE) $(LIBVDS_LIGHTNODE) \
	$(LIBVDS_UTIL) $(LIBBITCOIN_UTIL) \
	$(LIBBITCOIN_WALLET) $(LIBBITCOIN_ZMQ) \
	$(LIBVDS_CONSENSUS) $(LIBBITCOIN_CONSENSUS) \
	$(LIBVDS_CRYPTO) $(LIBBITCOIN_CRYPTO) \
	$(LIBVDS) $(LIBSNARK) $(LIBLEVELDB) \
	$(LIBMEMENV) $(LIBCRYPTOPP) $(LIBSECP256K1) \
	$(PROTOBUF_LIBS) $(am__append_31) \
	$(am__append_32) $(BOOST_LIBS) $(BDB_LIBS) \
	$(SSL_LIBS) $(CRYPTO_LIBS) \
	$(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) \
	$(EVENT_LIBS) $(LIBVDS) $(LIBSNARK) \
	$(LIBVDS_LIBS)
bench_bench_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno $(GENERATED_TEST_FILES)
TEST_SRCDIR = test
TEST_BINARY = test/test_bitcoin$(EXEEXT)
JSON_TEST_FILES = \
  test/data/script_valid.json \
  test/data/script_tests.json \
  test/data/base58_keys_valid.json \
  test/data/base58_encode_decode.json \
  test/data/base58_keys_invalid.json \
  test/data/script_invalid.json \
  test/data/tx_invalid_checktx.json \
  test/data/tx_invalid_verify.json \
  test/data/tx_valid.json \
  test/data/sighash.json \
  test/data/merkle_roots.json \
  test/data/merkle_roots_empty.json \
  test/data/merkle_serialization.json \
  test/data/merkle_witness_serialization.json \
  test/data/merkle_path.json \
  test/data/merkle_commitments.json \
  test/data/merkle_roots_sapling.json \
  test/data/merkle_roots_empty_sapling.json \
  test/data/merkle_serialization_sapling.json \
  test/data/merkle_witness_serialization_sapling.json \
  test/data/merkle_path_sapling.json \
  test/data/merkle_commitments_sapling.json \
  test/data/g1_compressed.json \
  test/data/g2_compressed.json \
  test/data/sapling_key_components.json

VDS_TESTS = test/arith_uint256_tests.cpp \
	test/bignum.h test/addrman_tests.cpp \
	test/alert_tests.cpp \
	test/allocator_tests.cpp \
	test/base32_tests.cpp test/base58_tests.cpp \
	test/base64_tests.cpp test/bip32_tests.cpp \
	test/bloom_tests.cpp \
	test/checkblock_tests.cpp \
	test/Checkpoints_tests.cpp \
	test/coins_tests.cpp \
	test/compress_tests.cpp \
	test/crypto_tests.cpp test/DoS_tests.cpp \
	test/equihash_tests.cpp \
	test/getarg_tests.cpp test/hash_tests.cpp \
	test/key_tests.cpp test/main_tests.cpp \
	test/mempool_tests.cpp test/miner_tests.cpp \
	test/mruset_tests.cpp \
	test/multisig_tests.cpp \
	test/netbase_tests.cpp test/pmt_tests.cpp \
	test/policyestimator_tests.cpp \
	test/pow_tests.cpp \
	test/raii_event_tests.cpp \
	test/reverselock_tests.cpp \
	test/rpc_tests.cpp test/sanity_tests.cpp \
	test/scheduler_tests.cpp \
	test/script_P2SH_tests.cpp \
	test/script_tests.cpp \
	test/scriptnum_tests.cpp \
	test/serialize_tests.cpp \
	test/sighash_tests.cpp \
	test/sigopcount_tests.cpp \
	test/skiplist_tests.cpp \
	test/test_bitcoin.cpp test/test_bitcoin.h \
	test/timedata_tests.cpp \
	test/torcontrol_tests.cpp \
	test/transaction_tests.cpp \
	test/uint256_tests.cpp \
	test/univalue_tests.cpp test/util_tests.cpp \
	test/sha256compress_tests.cpp \
	$(am__append_38)
test_test_bitcoin_SOURCES = $(VDS_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)
test_test_bitcoin_CPPFLAGS = -fopenmp $(VDS_INCLUDES) -I$(builddir)/test/ $(TESTDEFS) $(EVENT_CFLAGS) $(PROTOBUF_CFLAGS)
test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) \
	$(LIBVDS_SERVER) $(LIBVDS_SQLITE) \
	$(am__append_39) $(LIBVDS_CLI) \
	$(LIBVDS_COMMON) $(LIBBITCOIN_COMMON) \
	$(LIBUNIVALUE) $(LIBVDS_LIGHTNODE) \
	$(LIBVDS_UTIL) $(LIBBITCOIN_UTIL) \
	$(LIBBITCOIN_WALLET) $(LIBBITCOIN_ZMQ) \
	$(LIBVDS_CONSENSUS) $(LIBBITCOIN_CONSENSUS) \
	$(LIBVDS_CRYPTO) $(LIBBITCOIN_CRYPTO) \
	$(LIBVDS) $(LIBSNARK) $(LIBLEVELDB) \
	$(LIBMEMENV) $(LIBCRYPTOPP) $(LIBSECP256K1) \
	$(PROTOBUF_LIBS) $(LIBVDS_CONSENSUS) \
	$(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) \
	$(MINIUPNPC_LIBS) $(LIBVDS) $(LIBSNARK) \
	$(LIBVDS_LIBS) $(am__append_40) \
	$(am__append_41) $(BOOST_LIBS) \
	$(BOOST_UNIT_TEST_FRAMEWORK_LIB) \
	$(LIBSECP256K1) $(EVENT_PTHREADS_LIBS) \
	$(EVENT_LIBS)
test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static

# test_bitcoin_fuzzy binary #
test_test_bitcoin_fuzzy_SOURCES = test/test_bitcoin_fuzzy.cpp
test_test_bitcoin_fuzzy_CPPFLAGS = $(AM_CPPFLAGS) $(VDS_INCLUDES)
test_test_bitcoin_fuzzy_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
test_test_bitcoin_fuzzy_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)
test_test_bitcoin_fuzzy_LDADD = $(LIBUNIVALUE) \
	$(LIBVDS_LIGHTNODE) $(LIBVDS_SERVER) \
	$(LIBVDS_COMMON) $(LIBVDS_UTIL) \
	$(LIBVDS_CONSENSUS) $(LIBVDS_CRYPTO) \
	$(LIBVDS) $(LIBSECP256K1) $(BOOST_LIBS) \
	$(CRYPTO_LIBS) $(LIBSNARK) $(LIBVDS_LIBS)
#
nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)
CLEAN_VDS_TEST = test/*.gcda test/*.gcno $(GENERATED_TEST_FILES)

# tool for generating our public parameters.
# test_checktransaction.cpp MUST be before
# any test that calls SelectParams().
vds_gtest_SOURCES = gtest/main.cpp gtest/utils.cpp \
	gtest/test_checktransaction.cpp \
	gtest/json_test_vectors.cpp \
	gtest/json_test_vectors.h $(am__append_43) \
	gtest/test_tautology.cpp \
	gtest/test_deprecation.cpp \
	gtest/test_equihash.cpp \
	gtest/test_httprpc.cpp gtest/test_keys.cpp \
	gtest/test_keystore.cpp \
	gtest/test_noteencryption.cpp \
	gtest/test_mempool.cpp \
	gtest/test_merkletree.cpp \
	gtest/test_miner.cpp gtest/test_pow.cpp \
	gtest/test_random.cpp gtest/test_rpc.cpp \
	gtest/test_sapling_note.cpp \
	gtest/test_transaction.cpp \
	gtest/test_transaction_builder.cpp \
	gtest/test_validation.cpp \
	gtest/test_circuit.cpp gtest/test_txid.cpp \
	gtest/test_libzcash_utils.cpp \
	gtest/test_proofs.cpp \
	gtest/test_paymentdisclosure.cpp \
	gtest/test_pedersen_hash.cpp \
	gtest/test_checkblock.cpp \
	gtest/test_zip32.cpp $(am__append_44)
vds_gtest_CPPFLAGS = $(AM_CPPFLAGS) -DBINARY_OUTPUT -DCURVE_ALT_BN128 -DSTATIC $(VDS_INCLUDES)
vds_gtest_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)
vds_gtest_LDADD = -lgtest -lgmock \
	$(LIBBITCOIN_SERVER) $(LIBVDS_SERVER) \
	$(LIBVDS_SQLITE) $(LIBVDS_CLI) \
	$(LIBVDS_COMMON) $(LIBBITCOIN_COMMON) \
	$(LIBUNIVALUE) $(LIBVDS_LIGHTNODE) \
	$(LIBVDS_UTIL) $(LIBBITCOIN_UTIL) \
	$(LIBBITCOIN_WALLET) $(LIBBITCOIN_ZMQ) \
	$(LIBVDS_CONSENSUS) $(LIBBITCOIN_CONSENSUS) \
	$(LIBVDS_CRYPTO) $(LIBBITCOIN_CRYPTO) \
	$(LIBVDS) $(LIBSNARK) $(LIBLEVELDB) \
	$(LIBMEMENV) $(LIBCRYPTOPP) $(BOOST_LIBS) \
	$(BOOST_UNIT_TEST_FRAMEWORK_LIB) \
	$(LIBSECP256K1) $(PROTOBUF_LIBS) \
	$(am__append_45) $(am__append_46) \
	$(LIBVDS_CONSENSUS) $(BDB_LIBS) $(SSL_LIBS) \
	$(CRYPTO_LIBS) $(MINIUPNPC_LIBS) \
	$(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) \
	$(LIBVDS) $(LIBSNARK) $(LIBVDS_LIBS) \
	$(BOOST_LIBS) \
	$(BOOST_UNIT_TEST_FRAMEWORK_LIB) \
	$(LIBSECP256K1) $(am__append_47)
vds_gtest_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .cc .cpp .lo .log .mm .o .obj .rc .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/Makefile.leveldb.include $(srcdir)/Makefile.cryptopp.include $(srcdir)/Makefile.bench.include $(srcdir)/Makefile.test.include $(srcdir)/Makefile.gtest.include $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/Makefile.leveldb.include $(srcdir)/Makefile.cryptopp.include $(srcdir)/Makefile.bench.include $(srcdir)/Makefile.test.include $(srcdir)/Makefile.gtest.include $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
crypto/$(am__dirstamp):
	@$(MKDIR_P) crypto
	@: > crypto/$(am__dirstamp)
crypto/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) crypto/$(DEPDIR)
	@: > crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libvds_crypto_a-chacha20.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libvds_crypto_a-equihash.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libvds_crypto_a-hmac_sha256.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libvds_crypto_a-hmac_sha512.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libvds_crypto_a-scrypt.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libvds_crypto_a-ripemd160.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libvds_crypto_a-sha1.$(OBJEXT): crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libvds_crypto_a-sha256.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libvds_crypto_a-sha512.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/utils/libscrypt/$(am__dirstamp):
	@$(MKDIR_P) cpp-ethereum/utils/libscrypt
	@: > cpp-ethereum/utils/libscrypt/$(am__dirstamp)
cpp-ethereum/utils/libscrypt/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) cpp-ethereum/utils/libscrypt/$(DEPDIR)
	@: > cpp-ethereum/utils/libscrypt/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-b64.$(OBJEXT):  \
	cpp-ethereum/utils/libscrypt/$(am__dirstamp) \
	cpp-ethereum/utils/libscrypt/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto-mcf.$(OBJEXT):  \
	cpp-ethereum/utils/libscrypt/$(am__dirstamp) \
	cpp-ethereum/utils/libscrypt/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-check.$(OBJEXT):  \
	cpp-ethereum/utils/libscrypt/$(am__dirstamp) \
	cpp-ethereum/utils/libscrypt/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-hash.$(OBJEXT):  \
	cpp-ethereum/utils/libscrypt/$(am__dirstamp) \
	cpp-ethereum/utils/libscrypt/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-hexconvert.$(OBJEXT):  \
	cpp-ethereum/utils/libscrypt/$(am__dirstamp) \
	cpp-ethereum/utils/libscrypt/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-nosse.$(OBJEXT):  \
	cpp-ethereum/utils/libscrypt/$(am__dirstamp) \
	cpp-ethereum/utils/libscrypt/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto-scrypt-saltgen.$(OBJEXT):  \
	cpp-ethereum/utils/libscrypt/$(am__dirstamp) \
	cpp-ethereum/utils/libscrypt/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-sha256.$(OBJEXT):  \
	cpp-ethereum/utils/libscrypt/$(am__dirstamp) \
	cpp-ethereum/utils/libscrypt/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-slowequals.$(OBJEXT):  \
	cpp-ethereum/utils/libscrypt/$(am__dirstamp) \
	cpp-ethereum/utils/libscrypt/$(DEPDIR)/$(am__dirstamp)
support/$(am__dirstamp):
	@$(MKDIR_P) support
	@: > support/$(am__dirstamp)
support/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) support/$(DEPDIR)
	@: > support/$(DEPDIR)/$(am__dirstamp)
support/crypto_libvds_crypto_a-cleanse.$(OBJEXT):  \
	support/$(am__dirstamp) support/$(DEPDIR)/$(am__dirstamp)
crypto/crypto_libvds_crypto_a-sha256_sse4.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)

crypto/libvds_crypto.a: $(crypto_libvds_crypto_a_OBJECTS) $(crypto_libvds_crypto_a_DEPENDENCIES) $(EXTRA_crypto_libvds_crypto_a_DEPENDENCIES) crypto/$(am__dirstamp)
	$(AM_V_at)-rm -f crypto/libvds_crypto.a
	$(AM_V_AR)$(crypto_libvds_crypto_a_AR) crypto/libvds_crypto.a $(crypto_libvds_crypto_a_OBJECTS) $(crypto_libvds_crypto_a_LIBADD)
	$(AM_V_at)$(RANLIB) crypto/libvds_crypto.a
cryptopp/$(am__dirstamp):
	@$(MKDIR_P) cryptopp
	@: > cryptopp/$(am__dirstamp)
cryptopp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) cryptopp/$(DEPDIR)
	@: > cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-cryptlib.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-cpu.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-integer.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-algebra.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-algparam.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-asn.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-basecode.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-dsa.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-des.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-dessp.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-dll.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-ec2n.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-eccrypto.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-ecp.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-eprecomp.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-filters.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-fips140.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-gf2n.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-gfpcrypt.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-hex.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-hmac.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-hrtimer.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-iterhash.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-keccak.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-misc.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-modes.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-mqueue.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-nbtheory.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-oaep.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-osrng.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-polynomi.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-pubkey.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-queue.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-randpool.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-rdtables.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-rijndael.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-rng.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-sha.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-strciphr.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-winpipes.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)
cryptopp/cryptopp_libcryptopp_a-sha3.$(OBJEXT):  \
	cryptopp/$(am__dirstamp) cryptopp/$(DEPDIR)/$(am__dirstamp)

cryptopp/libcryptopp.a: $(cryptopp_libcryptopp_a_OBJECTS) $(cryptopp_libcryptopp_a_DEPENDENCIES) $(EXTRA_cryptopp_libcryptopp_a_DEPENDENCIES) cryptopp/$(am__dirstamp)
	$(AM_V_at)-rm -f cryptopp/libcryptopp.a
	$(AM_V_AR)$(cryptopp_libcryptopp_a_AR) cryptopp/libcryptopp.a $(cryptopp_libcryptopp_a_OBJECTS) $(cryptopp_libcryptopp_a_LIBADD)
	$(AM_V_at)$(RANLIB) cryptopp/libcryptopp.a
leveldb/db/$(am__dirstamp):
	@$(MKDIR_P) leveldb/db
	@: > leveldb/db/$(am__dirstamp)
leveldb/db/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) leveldb/db/$(DEPDIR)
	@: > leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-builder.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-c.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-dbformat.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-db_impl.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-db_iter.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-dumpfile.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-filename.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-log_reader.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-log_writer.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-memtable.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-repair.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-table_cache.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-version_edit.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-version_set.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/db/leveldb_libleveldb_a-write_batch.$(OBJEXT):  \
	leveldb/db/$(am__dirstamp) \
	leveldb/db/$(DEPDIR)/$(am__dirstamp)
leveldb/table/$(am__dirstamp):
	@$(MKDIR_P) leveldb/table
	@: > leveldb/table/$(am__dirstamp)
leveldb/table/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) leveldb/table/$(DEPDIR)
	@: > leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-block_builder.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-block.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-filter_block.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-format.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-iterator.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-merger.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-table_builder.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-table.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/table/leveldb_libleveldb_a-two_level_iterator.$(OBJEXT):  \
	leveldb/table/$(am__dirstamp) \
	leveldb/table/$(DEPDIR)/$(am__dirstamp)
leveldb/util/$(am__dirstamp):
	@$(MKDIR_P) leveldb/util
	@: > leveldb/util/$(am__dirstamp)
leveldb/util/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) leveldb/util/$(DEPDIR)
	@: > leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-arena.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-bloom.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-cache.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-coding.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-comparator.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-crc32c.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-env.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-env_posix.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-filter_policy.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-hash.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-histogram.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-logging.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-options.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-status.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/util/leveldb_libleveldb_a-env_win.$(OBJEXT):  \
	leveldb/util/$(am__dirstamp) \
	leveldb/util/$(DEPDIR)/$(am__dirstamp)
leveldb/port/$(am__dirstamp):
	@$(MKDIR_P) leveldb/port
	@: > leveldb/port/$(am__dirstamp)
leveldb/port/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) leveldb/port/$(DEPDIR)
	@: > leveldb/port/$(DEPDIR)/$(am__dirstamp)
leveldb/port/leveldb_libleveldb_a-port_win.$(OBJEXT):  \
	leveldb/port/$(am__dirstamp) \
	leveldb/port/$(DEPDIR)/$(am__dirstamp)
leveldb/port/leveldb_libleveldb_a-port_posix.$(OBJEXT):  \
	leveldb/port/$(am__dirstamp) \
	leveldb/port/$(DEPDIR)/$(am__dirstamp)
leveldb/$(am__dirstamp):
	@$(MKDIR_P) leveldb
	@: > leveldb/$(am__dirstamp)

leveldb/libleveldb.a: $(leveldb_libleveldb_a_OBJECTS) $(leveldb_libleveldb_a_DEPENDENCIES) $(EXTRA_leveldb_libleveldb_a_DEPENDENCIES) leveldb/$(am__dirstamp)
	$(AM_V_at)-rm -f leveldb/libleveldb.a
	$(AM_V_AR)$(leveldb_libleveldb_a_AR) leveldb/libleveldb.a $(leveldb_libleveldb_a_OBJECTS) $(leveldb_libleveldb_a_LIBADD)
	$(AM_V_at)$(RANLIB) leveldb/libleveldb.a
leveldb/helpers/memenv/$(am__dirstamp):
	@$(MKDIR_P) leveldb/helpers/memenv
	@: > leveldb/helpers/memenv/$(am__dirstamp)
leveldb/helpers/memenv/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) leveldb/helpers/memenv/$(DEPDIR)
	@: > leveldb/helpers/memenv/$(DEPDIR)/$(am__dirstamp)
leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.$(OBJEXT):  \
	leveldb/helpers/memenv/$(am__dirstamp) \
	leveldb/helpers/memenv/$(DEPDIR)/$(am__dirstamp)

leveldb/libmemenv.a: $(leveldb_libmemenv_a_OBJECTS) $(leveldb_libmemenv_a_DEPENDENCIES) $(EXTRA_leveldb_libmemenv_a_DEPENDENCIES) leveldb/$(am__dirstamp)
	$(AM_V_at)-rm -f leveldb/libmemenv.a
	$(AM_V_AR)$(leveldb_libmemenv_a_AR) leveldb/libmemenv.a $(leveldb_libmemenv_a_OBJECTS) $(leveldb_libmemenv_a_LIBADD)
	$(AM_V_at)$(RANLIB) leveldb/libmemenv.a
crypto/libvds_a-sha256.$(OBJEXT): crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
vds/$(am__dirstamp):
	@$(MKDIR_P) vds
	@: > vds/$(am__dirstamp)
vds/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) vds/$(DEPDIR)
	@: > vds/$(DEPDIR)/$(am__dirstamp)
vds/libvds_a-IncrementalMerkleTree.$(OBJEXT): vds/$(am__dirstamp) \
	vds/$(DEPDIR)/$(am__dirstamp)
vds/libvds_a-NoteEncryption.$(OBJEXT): vds/$(am__dirstamp) \
	vds/$(DEPDIR)/$(am__dirstamp)
vds/libvds_a-Address.$(OBJEXT): vds/$(am__dirstamp) \
	vds/$(DEPDIR)/$(am__dirstamp)
vds/libvds_a-JoinSplit.$(OBJEXT): vds/$(am__dirstamp) \
	vds/$(DEPDIR)/$(am__dirstamp)
vds/libvds_a-Proof.$(OBJEXT): vds/$(am__dirstamp) \
	vds/$(DEPDIR)/$(am__dirstamp)
vds/libvds_a-Note.$(OBJEXT): vds/$(am__dirstamp) \
	vds/$(DEPDIR)/$(am__dirstamp)
vds/libvds_a-prf.$(OBJEXT): vds/$(am__dirstamp) \
	vds/$(DEPDIR)/$(am__dirstamp)
vds/libvds_a-util.$(OBJEXT): vds/$(am__dirstamp) \
	vds/$(DEPDIR)/$(am__dirstamp)
vds/libvds_a-zip32.$(OBJEXT): vds/$(am__dirstamp) \
	vds/$(DEPDIR)/$(am__dirstamp)

libvds.a: $(libvds_a_OBJECTS) $(libvds_a_DEPENDENCIES) $(EXTRA_libvds_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libvds.a
	$(AM_V_AR)$(libvds_a_AR) libvds.a $(libvds_a_OBJECTS) $(libvds_a_LIBADD)
	$(AM_V_at)$(RANLIB) libvds.a
rpc/$(am__dirstamp):
	@$(MKDIR_P) rpc
	@: > rpc/$(am__dirstamp)
rpc/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) rpc/$(DEPDIR)
	@: > rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libvds_cli_a-client.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)

libvds_cli.a: $(libvds_cli_a_OBJECTS) $(libvds_cli_a_DEPENDENCIES) $(EXTRA_libvds_cli_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libvds_cli.a
	$(AM_V_AR)$(libvds_cli_a_AR) libvds_cli.a $(libvds_cli_a_OBJECTS) $(libvds_cli_a_LIBADD)
	$(AM_V_at)$(RANLIB) libvds_cli.a
primitives/$(am__dirstamp):
	@$(MKDIR_P) primitives
	@: > primitives/$(am__dirstamp)
primitives/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) primitives/$(DEPDIR)
	@: > primitives/$(DEPDIR)/$(am__dirstamp)
primitives/libvds_common_a-block.$(OBJEXT):  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
primitives/libvds_common_a-transaction.$(OBJEXT):  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
script/$(am__dirstamp):
	@$(MKDIR_P) script
	@: > script/$(am__dirstamp)
script/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) script/$(DEPDIR)
	@: > script/$(DEPDIR)/$(am__dirstamp)
script/libvds_common_a-interpreter.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libvds_common_a-script.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libvds_common_a-script_error.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libvds_common_a-sign.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libvds_common_a-standard.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcore/$(am__dirstamp):
	@$(MKDIR_P) cpp-ethereum/libdevcore
	@: > cpp-ethereum/libdevcore/$(am__dirstamp)
cpp-ethereum/libdevcore/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) cpp-ethereum/libdevcore/$(DEPDIR)
	@: > cpp-ethereum/libdevcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcore/libvds_common_a-Base64.$(OBJEXT):  \
	cpp-ethereum/libdevcore/$(am__dirstamp) \
	cpp-ethereum/libdevcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcore/libvds_common_a-Common.$(OBJEXT):  \
	cpp-ethereum/libdevcore/$(am__dirstamp) \
	cpp-ethereum/libdevcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcore/libvds_common_a-CommonData.$(OBJEXT):  \
	cpp-ethereum/libdevcore/$(am__dirstamp) \
	cpp-ethereum/libdevcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcore/libvds_common_a-CommonIO.$(OBJEXT):  \
	cpp-ethereum/libdevcore/$(am__dirstamp) \
	cpp-ethereum/libdevcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcore/libvds_common_a-CommonJS.$(OBJEXT):  \
	cpp-ethereum/libdevcore/$(am__dirstamp) \
	cpp-ethereum/libdevcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcore/libvds_common_a-FileSystem.$(OBJEXT):  \
	cpp-ethereum/libdevcore/$(am__dirstamp) \
	cpp-ethereum/libdevcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcore/libvds_common_a-FixedHash.$(OBJEXT):  \
	cpp-ethereum/libdevcore/$(am__dirstamp) \
	cpp-ethereum/libdevcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcore/libvds_common_a-Guards.$(OBJEXT):  \
	cpp-ethereum/libdevcore/$(am__dirstamp) \
	cpp-ethereum/libdevcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcore/libvds_common_a-Hash.$(OBJEXT):  \
	cpp-ethereum/libdevcore/$(am__dirstamp) \
	cpp-ethereum/libdevcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcore/libvds_common_a-Log.$(OBJEXT):  \
	cpp-ethereum/libdevcore/$(am__dirstamp) \
	cpp-ethereum/libdevcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcore/libvds_common_a-MemoryDB.$(OBJEXT):  \
	cpp-ethereum/libdevcore/$(am__dirstamp) \
	cpp-ethereum/libdevcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcore/libvds_common_a-OverlayDB.$(OBJEXT):  \
	cpp-ethereum/libdevcore/$(am__dirstamp) \
	cpp-ethereum/libdevcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcore/libvds_common_a-RLP.$(OBJEXT):  \
	cpp-ethereum/libdevcore/$(am__dirstamp) \
	cpp-ethereum/libdevcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcore/libvds_common_a-SHA3.$(OBJEXT):  \
	cpp-ethereum/libdevcore/$(am__dirstamp) \
	cpp-ethereum/libdevcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcore/libvds_common_a-TransientDirectory.$(OBJEXT):  \
	cpp-ethereum/libdevcore/$(am__dirstamp) \
	cpp-ethereum/libdevcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcore/libvds_common_a-TrieCommon.$(OBJEXT):  \
	cpp-ethereum/libdevcore/$(am__dirstamp) \
	cpp-ethereum/libdevcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcore/libvds_common_a-Worker.$(OBJEXT):  \
	cpp-ethereum/libdevcore/$(am__dirstamp) \
	cpp-ethereum/libdevcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libevm/$(am__dirstamp):
	@$(MKDIR_P) cpp-ethereum/libevm
	@: > cpp-ethereum/libevm/$(am__dirstamp)
cpp-ethereum/libevm/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) cpp-ethereum/libevm/$(DEPDIR)
	@: > cpp-ethereum/libevm/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libevm/libvds_common_a-ExtVMFace.$(OBJEXT):  \
	cpp-ethereum/libevm/$(am__dirstamp) \
	cpp-ethereum/libevm/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libevm/libvds_common_a-VM.$(OBJEXT):  \
	cpp-ethereum/libevm/$(am__dirstamp) \
	cpp-ethereum/libevm/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libevm/libvds_common_a-VMOpt.$(OBJEXT):  \
	cpp-ethereum/libevm/$(am__dirstamp) \
	cpp-ethereum/libevm/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libevm/libvds_common_a-VMCalls.$(OBJEXT):  \
	cpp-ethereum/libevm/$(am__dirstamp) \
	cpp-ethereum/libevm/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libevm/libvds_common_a-VMFactory.$(OBJEXT):  \
	cpp-ethereum/libevm/$(am__dirstamp) \
	cpp-ethereum/libevm/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libevmcore/$(am__dirstamp):
	@$(MKDIR_P) cpp-ethereum/libevmcore
	@: > cpp-ethereum/libevmcore/$(am__dirstamp)
cpp-ethereum/libevmcore/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) cpp-ethereum/libevmcore/$(DEPDIR)
	@: > cpp-ethereum/libevmcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libevmcore/libvds_common_a-Instruction.$(OBJEXT):  \
	cpp-ethereum/libevmcore/$(am__dirstamp) \
	cpp-ethereum/libevmcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethereum/$(am__dirstamp):
	@$(MKDIR_P) cpp-ethereum/libethereum
	@: > cpp-ethereum/libethereum/$(am__dirstamp)
cpp-ethereum/libethereum/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) cpp-ethereum/libethereum/$(DEPDIR)
	@: > cpp-ethereum/libethereum/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethereum/libvds_common_a-Account.$(OBJEXT):  \
	cpp-ethereum/libethereum/$(am__dirstamp) \
	cpp-ethereum/libethereum/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethereum/libvds_common_a-Defaults.$(OBJEXT):  \
	cpp-ethereum/libethereum/$(am__dirstamp) \
	cpp-ethereum/libethereum/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethereum/libvds_common_a-GasPricer.$(OBJEXT):  \
	cpp-ethereum/libethereum/$(am__dirstamp) \
	cpp-ethereum/libethereum/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethereum/libvds_common_a-State.$(OBJEXT):  \
	cpp-ethereum/libethereum/$(am__dirstamp) \
	cpp-ethereum/libethereum/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethcore/$(am__dirstamp):
	@$(MKDIR_P) cpp-ethereum/libethcore
	@: > cpp-ethereum/libethcore/$(am__dirstamp)
cpp-ethereum/libethcore/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) cpp-ethereum/libethcore/$(DEPDIR)
	@: > cpp-ethereum/libethcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethcore/libvds_common_a-ABI.$(OBJEXT):  \
	cpp-ethereum/libethcore/$(am__dirstamp) \
	cpp-ethereum/libethcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethcore/libvds_common_a-ChainOperationParams.$(OBJEXT):  \
	cpp-ethereum/libethcore/$(am__dirstamp) \
	cpp-ethereum/libethcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethcore/libvds_common_a-Common.$(OBJEXT):  \
	cpp-ethereum/libethcore/$(am__dirstamp) \
	cpp-ethereum/libethcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethcore/libvds_common_a-ICAP.$(OBJEXT):  \
	cpp-ethereum/libethcore/$(am__dirstamp) \
	cpp-ethereum/libethcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethcore/libvds_common_a-Precompiled.$(OBJEXT):  \
	cpp-ethereum/libethcore/$(am__dirstamp) \
	cpp-ethereum/libethcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcore/libvds_common_a-TrieDB.$(OBJEXT):  \
	cpp-ethereum/libdevcore/$(am__dirstamp) \
	cpp-ethereum/libdevcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcrypto/$(am__dirstamp):
	@$(MKDIR_P) cpp-ethereum/libdevcrypto
	@: > cpp-ethereum/libdevcrypto/$(am__dirstamp)
cpp-ethereum/libdevcrypto/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) cpp-ethereum/libdevcrypto/$(DEPDIR)
	@: > cpp-ethereum/libdevcrypto/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcrypto/libvds_common_a-Common.$(OBJEXT):  \
	cpp-ethereum/libdevcrypto/$(am__dirstamp) \
	cpp-ethereum/libdevcrypto/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcrypto/libvds_common_a-CryptoPP.$(OBJEXT):  \
	cpp-ethereum/libdevcrypto/$(am__dirstamp) \
	cpp-ethereum/libdevcrypto/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcrypto/libvds_common_a-AES.$(OBJEXT):  \
	cpp-ethereum/libdevcrypto/$(am__dirstamp) \
	cpp-ethereum/libdevcrypto/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcrypto/libvds_common_a-ECDHE.$(OBJEXT):  \
	cpp-ethereum/libdevcrypto/$(am__dirstamp) \
	cpp-ethereum/libdevcrypto/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethashseal/$(am__dirstamp):
	@$(MKDIR_P) cpp-ethereum/libethashseal
	@: > cpp-ethereum/libethashseal/$(am__dirstamp)
cpp-ethereum/libethashseal/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) cpp-ethereum/libethashseal/$(DEPDIR)
	@: > cpp-ethereum/libethashseal/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethashseal/libvds_common_a-GenesisInfo.$(OBJEXT):  \
	cpp-ethereum/libethashseal/$(am__dirstamp) \
	cpp-ethereum/libethashseal/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethereum/libvds_common_a-ChainParams.$(OBJEXT):  \
	cpp-ethereum/libethereum/$(am__dirstamp) \
	cpp-ethereum/libethereum/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethcore/libvds_common_a-Transaction.$(OBJEXT):  \
	cpp-ethereum/libethcore/$(am__dirstamp) \
	cpp-ethereum/libethcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethereum/libvds_common_a-Transaction.$(OBJEXT):  \
	cpp-ethereum/libethereum/$(am__dirstamp) \
	cpp-ethereum/libethereum/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethereum/libvds_common_a-Executive.$(OBJEXT):  \
	cpp-ethereum/libethereum/$(am__dirstamp) \
	cpp-ethereum/libethereum/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethereum/libvds_common_a-ExtVM.$(OBJEXT):  \
	cpp-ethereum/libethereum/$(am__dirstamp) \
	cpp-ethereum/libethereum/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethereum/libvds_common_a-Block.$(OBJEXT):  \
	cpp-ethereum/libethereum/$(am__dirstamp) \
	cpp-ethereum/libethereum/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethereum/libvds_common_a-BlockChain.$(OBJEXT):  \
	cpp-ethereum/libethereum/$(am__dirstamp) \
	cpp-ethereum/libethereum/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethereum/libvds_common_a-BlockDetails.$(OBJEXT):  \
	cpp-ethereum/libethereum/$(am__dirstamp) \
	cpp-ethereum/libethereum/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethereum/libvds_common_a-TransactionQueue.$(OBJEXT):  \
	cpp-ethereum/libethereum/$(am__dirstamp) \
	cpp-ethereum/libethereum/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethereum/libvds_common_a-BlockQueue.$(OBJEXT):  \
	cpp-ethereum/libethereum/$(am__dirstamp) \
	cpp-ethereum/libethereum/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethcore/libvds_common_a-BlockHeader.$(OBJEXT):  \
	cpp-ethereum/libethcore/$(am__dirstamp) \
	cpp-ethereum/libethcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethereum/libvds_common_a-TransactionReceipt.$(OBJEXT):  \
	cpp-ethereum/libethereum/$(am__dirstamp) \
	cpp-ethereum/libethereum/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethcore/libvds_common_a-SealEngine.$(OBJEXT):  \
	cpp-ethereum/libethcore/$(am__dirstamp) \
	cpp-ethereum/libethcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libdevcore/libvds_common_a-TrieHash.$(OBJEXT):  \
	cpp-ethereum/libdevcore/$(am__dirstamp) \
	cpp-ethereum/libdevcore/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethereum/libvds_common_a-GenesisInfo.$(OBJEXT):  \
	cpp-ethereum/libethereum/$(am__dirstamp) \
	cpp-ethereum/libethereum/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethashseal/libvds_common_a-Ethash.$(OBJEXT):  \
	cpp-ethereum/libethashseal/$(am__dirstamp) \
	cpp-ethereum/libethashseal/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethashseal/libvds_common_a-EthashCPUMiner.$(OBJEXT):  \
	cpp-ethereum/libethashseal/$(am__dirstamp) \
	cpp-ethereum/libethashseal/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethashseal/libvds_common_a-EthashAux.$(OBJEXT):  \
	cpp-ethereum/libethashseal/$(am__dirstamp) \
	cpp-ethereum/libethashseal/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethashseal/libvds_common_a-EthashProofOfWork.$(OBJEXT):  \
	cpp-ethereum/libethashseal/$(am__dirstamp) \
	cpp-ethereum/libethashseal/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethash/$(am__dirstamp):
	@$(MKDIR_P) cpp-ethereum/libethash
	@: > cpp-ethereum/libethash/$(am__dirstamp)
cpp-ethereum/libethash/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) cpp-ethereum/libethash/$(DEPDIR)
	@: > cpp-ethereum/libethash/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethash/libvds_common_a-internal.$(OBJEXT):  \
	cpp-ethereum/libethash/$(am__dirstamp) \
	cpp-ethereum/libethash/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethash/libvds_common_a-io.$(OBJEXT):  \
	cpp-ethereum/libethash/$(am__dirstamp) \
	cpp-ethereum/libethash/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethash/libvds_common_a-sha3.$(OBJEXT):  \
	cpp-ethereum/libethash/$(am__dirstamp) \
	cpp-ethereum/libethash/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethashseal/genesis/$(am__dirstamp):
	@$(MKDIR_P) cpp-ethereum/libethashseal/genesis
	@: > cpp-ethereum/libethashseal/genesis/$(am__dirstamp)
cpp-ethereum/libethashseal/genesis/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) cpp-ethereum/libethashseal/genesis/$(DEPDIR)
	@: > cpp-ethereum/libethashseal/genesis/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethashseal/genesis/libvds_common_a-mainNetwork.$(OBJEXT):  \
	cpp-ethereum/libethashseal/genesis/$(am__dirstamp) \
	cpp-ethereum/libethashseal/genesis/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethashseal/genesis/libvds_common_a-eip150Test.$(OBJEXT):  \
	cpp-ethereum/libethashseal/genesis/$(am__dirstamp) \
	cpp-ethereum/libethashseal/genesis/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethashseal/genesis/libvds_common_a-eip158Test.$(OBJEXT):  \
	cpp-ethereum/libethashseal/genesis/$(am__dirstamp) \
	cpp-ethereum/libethashseal/genesis/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethashseal/genesis/libvds_common_a-frontierTest.$(OBJEXT):  \
	cpp-ethereum/libethashseal/genesis/$(am__dirstamp) \
	cpp-ethereum/libethashseal/genesis/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethashseal/genesis/libvds_common_a-homesteadTest.$(OBJEXT):  \
	cpp-ethereum/libethashseal/genesis/$(am__dirstamp) \
	cpp-ethereum/libethashseal/genesis/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethashseal/genesis/libvds_common_a-mainNetworkTest.$(OBJEXT):  \
	cpp-ethereum/libethashseal/genesis/$(am__dirstamp) \
	cpp-ethereum/libethashseal/genesis/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethashseal/genesis/libvds_common_a-metropolisTest.$(OBJEXT):  \
	cpp-ethereum/libethashseal/genesis/$(am__dirstamp) \
	cpp-ethereum/libethashseal/genesis/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethashseal/genesis/libvds_common_a-qtumMainNetwork.$(OBJEXT):  \
	cpp-ethereum/libethashseal/genesis/$(am__dirstamp) \
	cpp-ethereum/libethashseal/genesis/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethashseal/genesis/libvds_common_a-qtumTestNetwork.$(OBJEXT):  \
	cpp-ethereum/libethashseal/genesis/$(am__dirstamp) \
	cpp-ethereum/libethashseal/genesis/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethashseal/genesis/libvds_common_a-ropsten.$(OBJEXT):  \
	cpp-ethereum/libethashseal/genesis/$(am__dirstamp) \
	cpp-ethereum/libethashseal/genesis/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethashseal/genesis/libvds_common_a-transitionnetTest.$(OBJEXT):  \
	cpp-ethereum/libethashseal/genesis/$(am__dirstamp) \
	cpp-ethereum/libethashseal/genesis/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethash/libvds_common_a-mmap_win32.$(OBJEXT):  \
	cpp-ethereum/libethash/$(am__dirstamp) \
	cpp-ethereum/libethash/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethash/libvds_common_a-io_win32.$(OBJEXT):  \
	cpp-ethereum/libethash/$(am__dirstamp) \
	cpp-ethereum/libethash/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethash/libvds_common_a-util_win32.$(OBJEXT):  \
	cpp-ethereum/libethash/$(am__dirstamp) \
	cpp-ethereum/libethash/$(DEPDIR)/$(am__dirstamp)
cpp-ethereum/libethash/libvds_common_a-io_posix.$(OBJEXT):  \
	cpp-ethereum/libethash/$(am__dirstamp) \
	cpp-ethereum/libethash/$(DEPDIR)/$(am__dirstamp)

libvds_common.a: $(libvds_common_a_OBJECTS) $(libvds_common_a_DEPENDENCIES) $(EXTRA_libvds_common_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libvds_common.a
	$(AM_V_AR)$(libvds_common_a_AR) libvds_common.a $(libvds_common_a_OBJECTS) $(libvds_common_a_LIBADD)
	$(AM_V_at)$(RANLIB) libvds_common.a
crypto/libvds_consensus_a-equihash.$(OBJEXT): crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libvds_consensus_a-hmac_sha512.$(OBJEXT):  \
	crypto/$(am__dirstamp) crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libvds_consensus_a-ripemd160.$(OBJEXT): crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libvds_consensus_a-sha1.$(OBJEXT): crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libvds_consensus_a-sha256.$(OBJEXT): crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libvds_consensus_a-sha512.$(OBJEXT): crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
primitives/libvds_consensus_a-transaction.$(OBJEXT):  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
script/libvds_consensus_a-vdsconsensus.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libvds_consensus_a-interpreter.$(OBJEXT):  \
	script/$(am__dirstamp) script/$(DEPDIR)/$(am__dirstamp)
script/libvds_consensus_a-script.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)

libvds_consensus.a: $(libvds_consensus_a_OBJECTS) $(libvds_consensus_a_DEPENDENCIES) $(EXTRA_libvds_consensus_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libvds_consensus.a
	$(AM_V_AR)$(libvds_consensus_a_AR) libvds_consensus.a $(libvds_consensus_a_OBJECTS) $(libvds_consensus_a_LIBADD)
	$(AM_V_at)$(RANLIB) libvds_consensus.a
amqp/$(am__dirstamp):
	@$(MKDIR_P) amqp
	@: > amqp/$(am__dirstamp)
amqp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) amqp/$(DEPDIR)
	@: > amqp/$(DEPDIR)/$(am__dirstamp)
amqp/libvds_proton_a-amqpabstractnotifier.$(OBJEXT):  \
	amqp/$(am__dirstamp) amqp/$(DEPDIR)/$(am__dirstamp)
amqp/libvds_proton_a-amqpnotificationinterface.$(OBJEXT):  \
	amqp/$(am__dirstamp) amqp/$(DEPDIR)/$(am__dirstamp)
amqp/libvds_proton_a-amqppublishnotifier.$(OBJEXT):  \
	amqp/$(am__dirstamp) amqp/$(DEPDIR)/$(am__dirstamp)

libvds_proton.a: $(libvds_proton_a_OBJECTS) $(libvds_proton_a_DEPENDENCIES) $(EXTRA_libvds_proton_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libvds_proton.a
	$(AM_V_AR)$(libvds_proton_a_AR) libvds_proton.a $(libvds_proton_a_OBJECTS) $(libvds_proton_a_LIBADD)
	$(AM_V_at)$(RANLIB) libvds_proton.a
consensus/$(am__dirstamp):
	@$(MKDIR_P) consensus
	@: > consensus/$(am__dirstamp)
consensus/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) consensus/$(DEPDIR)
	@: > consensus/$(DEPDIR)/$(am__dirstamp)
consensus/libvds_server_a-merkle.$(OBJEXT): consensus/$(am__dirstamp) \
	consensus/$(DEPDIR)/$(am__dirstamp)
policy/$(am__dirstamp):
	@$(MKDIR_P) policy
	@: > policy/$(am__dirstamp)
policy/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) policy/$(DEPDIR)
	@: > policy/$(DEPDIR)/$(am__dirstamp)
policy/libvds_server_a-fees.$(OBJEXT): policy/$(am__dirstamp) \
	policy/$(DEPDIR)/$(am__dirstamp)
policy/libvds_server_a-feerate.$(OBJEXT): policy/$(am__dirstamp) \
	policy/$(DEPDIR)/$(am__dirstamp)
policy/libvds_server_a-policy.$(OBJEXT): policy/$(am__dirstamp) \
	policy/$(DEPDIR)/$(am__dirstamp)
rpc/libvds_server_a-blockchain.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libvds_server_a-masternode.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libvds_server_a-misc.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libvds_server_a-net.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libvds_server_a-ad.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libvds_server_a-rawtransaction.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libvds_server_a-server.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
script/libvds_server_a-sigcache.$(OBJEXT): script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
qtum/$(am__dirstamp):
	@$(MKDIR_P) qtum
	@: > qtum/$(am__dirstamp)
qtum/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) qtum/$(DEPDIR)
	@: > qtum/$(DEPDIR)/$(am__dirstamp)
qtum/libvds_server_a-qtumstate.$(OBJEXT): qtum/$(am__dirstamp) \
	qtum/$(DEPDIR)/$(am__dirstamp)
qtum/libvds_server_a-qtumtransaction.$(OBJEXT): qtum/$(am__dirstamp) \
	qtum/$(DEPDIR)/$(am__dirstamp)
qtum/libvds_server_a-qtumDGP.$(OBJEXT): qtum/$(am__dirstamp) \
	qtum/$(DEPDIR)/$(am__dirstamp)
qtum/libvds_server_a-storageresults.$(OBJEXT): qtum/$(am__dirstamp) \
	qtum/$(DEPDIR)/$(am__dirstamp)

libvds_server.a: $(libvds_server_a_OBJECTS) $(libvds_server_a_DEPENDENCIES) $(EXTRA_libvds_server_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libvds_server.a
	$(AM_V_AR)$(libvds_server_a_AR) libvds_server.a $(libvds_server_a_OBJECTS) $(libvds_server_a_LIBADD)
	$(AM_V_at)$(RANLIB) libvds_server.a

libvds_sqlite3.a: $(libvds_sqlite3_a_OBJECTS) $(libvds_sqlite3_a_DEPENDENCIES) $(EXTRA_libvds_sqlite3_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libvds_sqlite3.a
	$(AM_V_AR)$(libvds_sqlite3_a_AR) libvds_sqlite3.a $(libvds_sqlite3_a_OBJECTS) $(libvds_sqlite3_a_LIBADD)
	$(AM_V_at)$(RANLIB) libvds_sqlite3.a
support/libvds_util_a-pagelocker.$(OBJEXT): support/$(am__dirstamp) \
	support/$(DEPDIR)/$(am__dirstamp)
support/libvds_util_a-lockedpool.$(OBJEXT): support/$(am__dirstamp) \
	support/$(DEPDIR)/$(am__dirstamp)
compat/$(am__dirstamp):
	@$(MKDIR_P) compat
	@: > compat/$(am__dirstamp)
compat/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) compat/$(DEPDIR)
	@: > compat/$(DEPDIR)/$(am__dirstamp)
compat/libvds_util_a-glibc_sanity.$(OBJEXT): compat/$(am__dirstamp) \
	compat/$(DEPDIR)/$(am__dirstamp)
compat/libvds_util_a-glibcxx_sanity.$(OBJEXT): compat/$(am__dirstamp) \
	compat/$(DEPDIR)/$(am__dirstamp)
compat/libvds_util_a-strnlen.$(OBJEXT): compat/$(am__dirstamp) \
	compat/$(DEPDIR)/$(am__dirstamp)
rpc/libvds_util_a-protocol.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
support/libvds_util_a-cleanse.$(OBJEXT): support/$(am__dirstamp) \
	support/$(DEPDIR)/$(am__dirstamp)
compat/libvds_util_a-glibc_compat.$(OBJEXT): compat/$(am__dirstamp) \
	compat/$(DEPDIR)/$(am__dirstamp)

libvds_util.a: $(libvds_util_a_OBJECTS) $(libvds_util_a_DEPENDENCIES) $(EXTRA_libvds_util_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libvds_util.a
	$(AM_V_AR)$(libvds_util_a_AR) libvds_util.a $(libvds_util_a_OBJECTS) $(libvds_util_a_LIBADD)
	$(AM_V_at)$(RANLIB) libvds_util.a
rpc/libvds_wallet_a-blockchain.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libvds_wallet_a-misc.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
rpc/libvds_wallet_a-masternode.$(OBJEXT): rpc/$(am__dirstamp) \
	rpc/$(DEPDIR)/$(am__dirstamp)
wallet/$(am__dirstamp):
	@$(MKDIR_P) wallet
	@: > wallet/$(am__dirstamp)
wallet/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) wallet/$(DEPDIR)
	@: > wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libvds_wallet_a-asyncrpcoperation_sendmany.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libvds_wallet_a-asyncrpcoperation_shieldcoinbase.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libvds_wallet_a-bip39_mnemonic.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libvds_wallet_a-crypter.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libvds_wallet_a-db.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libvds_wallet_a-feebumper.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libvds_wallet_a-fees.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libvds_wallet_a-rpcdisclosure.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libvds_wallet_a-rpcdump.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libvds_wallet_a-rpcwallet.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libvds_wallet_a-wallet.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libvds_wallet_a-wallet_ismine.$(OBJEXT):  \
	wallet/$(am__dirstamp) wallet/$(DEPDIR)/$(am__dirstamp)
wallet/libvds_wallet_a-walletdb.$(OBJEXT): wallet/$(am__dirstamp) \
	wallet/$(DEPDIR)/$(am__dirstamp)

libvds_wallet.a: $(libvds_wallet_a_OBJECTS) $(libvds_wallet_a_DEPENDENCIES) $(EXTRA_libvds_wallet_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libvds_wallet.a
	$(AM_V_AR)$(libvds_wallet_a_AR) libvds_wallet.a $(libvds_wallet_a_OBJECTS) $(libvds_wallet_a_LIBADD)
	$(AM_V_at)$(RANLIB) libvds_wallet.a
zmq/$(am__dirstamp):
	@$(MKDIR_P) zmq
	@: > zmq/$(am__dirstamp)
zmq/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) zmq/$(DEPDIR)
	@: > zmq/$(DEPDIR)/$(am__dirstamp)
zmq/libvds_zmq_a-zmqabstractnotifier.$(OBJEXT): zmq/$(am__dirstamp) \
	zmq/$(DEPDIR)/$(am__dirstamp)
zmq/libvds_zmq_a-zmqnotificationinterface.$(OBJEXT):  \
	zmq/$(am__dirstamp) zmq/$(DEPDIR)/$(am__dirstamp)
zmq/libvds_zmq_a-zmqpublishnotifier.$(OBJEXT): zmq/$(am__dirstamp) \
	zmq/$(DEPDIR)/$(am__dirstamp)

libvds_zmq.a: $(libvds_zmq_a_OBJECTS) $(libvds_zmq_a_DEPENDENCIES) $(EXTRA_libvds_zmq_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libvds_zmq.a
	$(AM_V_AR)$(libvds_zmq_a_AR) libvds_zmq.a $(libvds_zmq_a_OBJECTS) $(libvds_zmq_a_LIBADD)
	$(AM_V_at)$(RANLIB) libvds_zmq.a

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
crypto/libvdsconsensus_la-equihash.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libvdsconsensus_la-hmac_sha512.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libvdsconsensus_la-ripemd160.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libvdsconsensus_la-sha1.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libvdsconsensus_la-sha256.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
crypto/libvdsconsensus_la-sha512.lo: crypto/$(am__dirstamp) \
	crypto/$(DEPDIR)/$(am__dirstamp)
primitives/libvdsconsensus_la-transaction.lo:  \
	primitives/$(am__dirstamp) \
	primitives/$(DEPDIR)/$(am__dirstamp)
script/libvdsconsensus_la-vdsconsensus.lo: script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libvdsconsensus_la-interpreter.lo: script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
script/libvdsconsensus_la-script.lo: script/$(am__dirstamp) \
	script/$(DEPDIR)/$(am__dirstamp)
compat/libvdsconsensus_la-glibc_compat.lo: compat/$(am__dirstamp) \
	compat/$(DEPDIR)/$(am__dirstamp)

libvdsconsensus.la: $(libvdsconsensus_la_OBJECTS) $(libvdsconsensus_la_DEPENDENCIES) $(EXTRA_libvdsconsensus_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libvdsconsensus_la_LINK) $(am_libvdsconsensus_la_rpath) $(libvdsconsensus_la_OBJECTS) $(libvdsconsensus_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
bench/$(am__dirstamp):
	@$(MKDIR_P) bench
	@: > bench/$(am__dirstamp)
bench/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) bench/$(DEPDIR)
	@: > bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-bench_bitcoin.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-bench.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-checkblock.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-checkqueue.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-Examples.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-rollingbloom.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-crypto_hash.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-ccoins_caching.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-mempool_eviction.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-verify_script.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-base58.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-lockedpool.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-perf.$(OBJEXT): bench/$(am__dirstamp) \
	bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-prevector_destructor.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)
bench/bench_bench_bitcoin-coin_selection.$(OBJEXT):  \
	bench/$(am__dirstamp) bench/$(DEPDIR)/$(am__dirstamp)

bench/bench_bitcoin$(EXEEXT): $(bench_bench_bitcoin_OBJECTS) $(bench_bench_bitcoin_DEPENDENCIES) $(EXTRA_bench_bench_bitcoin_DEPENDENCIES) bench/$(am__dirstamp)
	@rm -f bench/bench_bitcoin$(EXEEXT)
	$(AM_V_CXXLD)$(bench_bench_bitcoin_LINK) $(bench_bench_bitcoin_OBJECTS) $(bench_bench_bitcoin_LDADD) $(LIBS)
test/$(am__dirstamp):
	@$(MKDIR_P) test
	@: > test/$(am__dirstamp)
test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) test/$(DEPDIR)
	@: > test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-arith_uint256_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-addrman_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-alert_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-allocator_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-base32_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-base58_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-base64_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-bip32_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-bloom_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-checkblock_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-Checkpoints_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-coins_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-compress_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-crypto_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-DoS_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-equihash_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-getarg_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-hash_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-key_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-main_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-mempool_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-miner_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-mruset_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-multisig_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-netbase_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-pmt_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-policyestimator_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-pow_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-raii_event_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-reverselock_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-rpc_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-sanity_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-scheduler_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-script_P2SH_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-script_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-scriptnum_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-serialize_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-sighash_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-sigopcount_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-skiplist_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-test_bitcoin.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-timedata_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-torcontrol_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-transaction_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-uint256_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-univalue_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-util_tests.$(OBJEXT): test/$(am__dirstamp) \
	test/$(DEPDIR)/$(am__dirstamp)
test/test_test_bitcoin-sha256compress_tests.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)
wallet/test/$(am__dirstamp):
	@$(MKDIR_P) wallet/test
	@: > wallet/test/$(am__dirstamp)
wallet/test/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) wallet/test/$(DEPDIR)
	@: > wallet/test/$(DEPDIR)/$(am__dirstamp)
wallet/test/test_test_bitcoin-wallet_tests.$(OBJEXT):  \
	wallet/test/$(am__dirstamp) \
	wallet/test/$(DEPDIR)/$(am__dirstamp)

test/test_bitcoin$(EXEEXT): $(test_test_bitcoin_OBJECTS) $(test_test_bitcoin_DEPENDENCIES) $(EXTRA_test_test_bitcoin_DEPENDENCIES) test/$(am__dirstamp)
	@rm -f test/test_bitcoin$(EXEEXT)
	$(AM_V_CXXLD)$(test_test_bitcoin_LINK) $(test_test_bitcoin_OBJECTS) $(test_test_bitcoin_LDADD) $(LIBS)
test/test_test_bitcoin_fuzzy-test_bitcoin_fuzzy.$(OBJEXT):  \
	test/$(am__dirstamp) test/$(DEPDIR)/$(am__dirstamp)

test/test_bitcoin_fuzzy$(EXEEXT): $(test_test_bitcoin_fuzzy_OBJECTS) $(test_test_bitcoin_fuzzy_DEPENDENCIES) $(EXTRA_test_test_bitcoin_fuzzy_DEPENDENCIES) test/$(am__dirstamp)
	@rm -f test/test_bitcoin_fuzzy$(EXEEXT)
	$(AM_V_CXXLD)$(test_test_bitcoin_fuzzy_LINK) $(test_test_bitcoin_fuzzy_OBJECTS) $(test_test_bitcoin_fuzzy_LDADD) $(LIBS)

vds-cli$(EXEEXT): $(vds_cli_OBJECTS) $(vds_cli_DEPENDENCIES) $(EXTRA_vds_cli_DEPENDENCIES) 
	@rm -f vds-cli$(EXEEXT)
	$(AM_V_CXXLD)$(vds_cli_LINK) $(vds_cli_OBJECTS) $(vds_cli_LDADD) $(LIBS)
gtest/$(am__dirstamp):
	@$(MKDIR_P) gtest
	@: > gtest/$(am__dirstamp)
gtest/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) gtest/$(DEPDIR)
	@: > gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-main.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-utils.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_checktransaction.$(OBJEXT):  \
	gtest/$(am__dirstamp) gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-json_test_vectors.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
wallet/gtest/$(am__dirstamp):
	@$(MKDIR_P) wallet/gtest
	@: > wallet/gtest/$(am__dirstamp)
wallet/gtest/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) wallet/gtest/$(DEPDIR)
	@: > wallet/gtest/$(DEPDIR)/$(am__dirstamp)
wallet/gtest/vds_gtest-test_wallet_zkeys.$(OBJEXT):  \
	wallet/gtest/$(am__dirstamp) \
	wallet/gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_tautology.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_deprecation.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_equihash.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_httprpc.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_keys.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_keystore.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_noteencryption.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_mempool.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_merkletree.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_miner.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_pow.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_random.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_rpc.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_sapling_note.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_transaction.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_transaction_builder.$(OBJEXT):  \
	gtest/$(am__dirstamp) gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_validation.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_circuit.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_txid.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_libzcash_utils.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_proofs.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_paymentdisclosure.$(OBJEXT):  \
	gtest/$(am__dirstamp) gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_pedersen_hash.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_checkblock.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
gtest/vds_gtest-test_zip32.$(OBJEXT): gtest/$(am__dirstamp) \
	gtest/$(DEPDIR)/$(am__dirstamp)
wallet/gtest/vds_gtest-test_wallet.$(OBJEXT):  \
	wallet/gtest/$(am__dirstamp) \
	wallet/gtest/$(DEPDIR)/$(am__dirstamp)

vds-gtest$(EXEEXT): $(vds_gtest_OBJECTS) $(vds_gtest_DEPENDENCIES) $(EXTRA_vds_gtest_DEPENDENCIES) 
	@rm -f vds-gtest$(EXEEXT)
	$(AM_V_CXXLD)$(vds_gtest_LINK) $(vds_gtest_OBJECTS) $(vds_gtest_LDADD) $(LIBS)

vds-tx$(EXEEXT): $(vds_tx_OBJECTS) $(vds_tx_DEPENDENCIES) $(EXTRA_vds_tx_DEPENDENCIES) 
	@rm -f vds-tx$(EXEEXT)
	$(AM_V_CXXLD)$(vds_tx_LINK) $(vds_tx_OBJECTS) $(vds_tx_LDADD) $(LIBS)

vdsd$(EXEEXT): $(vdsd_OBJECTS) $(vdsd_DEPENDENCIES) $(EXTRA_vdsd_DEPENDENCIES) 
	@rm -f vdsd$(EXEEXT)
	$(AM_V_CXXLD)$(vdsd_LINK) $(vdsd_OBJECTS) $(vdsd_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f amqp/*.$(OBJEXT)
	-rm -f bench/*.$(OBJEXT)
	-rm -f compat/*.$(OBJEXT)
	-rm -f compat/*.lo
	-rm -f consensus/*.$(OBJEXT)
	-rm -f cpp-ethereum/libdevcore/*.$(OBJEXT)
	-rm -f cpp-ethereum/libdevcrypto/*.$(OBJEXT)
	-rm -f cpp-ethereum/libethash/*.$(OBJEXT)
	-rm -f cpp-ethereum/libethashseal/*.$(OBJEXT)
	-rm -f cpp-ethereum/libethashseal/genesis/*.$(OBJEXT)
	-rm -f cpp-ethereum/libethcore/*.$(OBJEXT)
	-rm -f cpp-ethereum/libethereum/*.$(OBJEXT)
	-rm -f cpp-ethereum/libevm/*.$(OBJEXT)
	-rm -f cpp-ethereum/libevmcore/*.$(OBJEXT)
	-rm -f cpp-ethereum/utils/libscrypt/*.$(OBJEXT)
	-rm -f crypto/*.$(OBJEXT)
	-rm -f crypto/*.lo
	-rm -f cryptopp/*.$(OBJEXT)
	-rm -f gtest/*.$(OBJEXT)
	-rm -f leveldb/db/*.$(OBJEXT)
	-rm -f leveldb/helpers/memenv/*.$(OBJEXT)
	-rm -f leveldb/port/*.$(OBJEXT)
	-rm -f leveldb/table/*.$(OBJEXT)
	-rm -f leveldb/util/*.$(OBJEXT)
	-rm -f policy/*.$(OBJEXT)
	-rm -f primitives/*.$(OBJEXT)
	-rm -f primitives/*.lo
	-rm -f qtum/*.$(OBJEXT)
	-rm -f rpc/*.$(OBJEXT)
	-rm -f script/*.$(OBJEXT)
	-rm -f script/*.lo
	-rm -f support/*.$(OBJEXT)
	-rm -f test/*.$(OBJEXT)
	-rm -f vds/*.$(OBJEXT)
	-rm -f wallet/*.$(OBJEXT)
	-rm -f wallet/gtest/*.$(OBJEXT)
	-rm -f wallet/test/*.$(OBJEXT)
	-rm -f zmq/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/libvds_common_a-arith_uint256.Po
include ./$(DEPDIR)/libvds_common_a-base58.Po
include ./$(DEPDIR)/libvds_common_a-bech32.Po
include ./$(DEPDIR)/libvds_common_a-chainparams.Po
include ./$(DEPDIR)/libvds_common_a-coins.Po
include ./$(DEPDIR)/libvds_common_a-compressor.Po
include ./$(DEPDIR)/libvds_common_a-core_read.Po
include ./$(DEPDIR)/libvds_common_a-core_write.Po
include ./$(DEPDIR)/libvds_common_a-eccryptoverify.Po
include ./$(DEPDIR)/libvds_common_a-ecwrapper.Po
include ./$(DEPDIR)/libvds_common_a-hash.Po
include ./$(DEPDIR)/libvds_common_a-key.Po
include ./$(DEPDIR)/libvds_common_a-key_io.Po
include ./$(DEPDIR)/libvds_common_a-keystore.Po
include ./$(DEPDIR)/libvds_common_a-netaddress.Po
include ./$(DEPDIR)/libvds_common_a-netbase.Po
include ./$(DEPDIR)/libvds_common_a-protocol.Po
include ./$(DEPDIR)/libvds_common_a-pubkey.Po
include ./$(DEPDIR)/libvds_common_a-scheduler.Po
include ./$(DEPDIR)/libvds_common_a-transaction_builder.Po
include ./$(DEPDIR)/libvds_consensus_a-eccryptoverify.Po
include ./$(DEPDIR)/libvds_consensus_a-ecwrapper.Po
include ./$(DEPDIR)/libvds_consensus_a-hash.Po
include ./$(DEPDIR)/libvds_consensus_a-pubkey.Po
include ./$(DEPDIR)/libvds_consensus_a-uint256.Po
include ./$(DEPDIR)/libvds_consensus_a-utilstrencodings.Po
include ./$(DEPDIR)/libvds_server_a-addb.Po
include ./$(DEPDIR)/libvds_server_a-addrdb.Po
include ./$(DEPDIR)/libvds_server_a-addrman.Po
include ./$(DEPDIR)/libvds_server_a-alert.Po
include ./$(DEPDIR)/libvds_server_a-asyncrpcoperation.Po
include ./$(DEPDIR)/libvds_server_a-asyncrpcqueue.Po
include ./$(DEPDIR)/libvds_server_a-bloom.Po
include ./$(DEPDIR)/libvds_server_a-chain.Po
include ./$(DEPDIR)/libvds_server_a-checkpoints.Po
include ./$(DEPDIR)/libvds_server_a-clue.Po
include ./$(DEPDIR)/libvds_server_a-cluedb.Po
include ./$(DEPDIR)/libvds_server_a-dbwrapper.Po
include ./$(DEPDIR)/libvds_server_a-deprecation.Po
include ./$(DEPDIR)/libvds_server_a-dsnotificationinterface.Po
include ./$(DEPDIR)/libvds_server_a-httprpc.Po
include ./$(DEPDIR)/libvds_server_a-httpserver.Po
include ./$(DEPDIR)/libvds_server_a-init.Po
include ./$(DEPDIR)/libvds_server_a-masternode-payments.Po
include ./$(DEPDIR)/libvds_server_a-masternode-sync.Po
include ./$(DEPDIR)/libvds_server_a-masternode.Po
include ./$(DEPDIR)/libvds_server_a-masternodeconfig.Po
include ./$(DEPDIR)/libvds_server_a-masternodeman.Po
include ./$(DEPDIR)/libvds_server_a-masternodestatistic.Po
include ./$(DEPDIR)/libvds_server_a-merkleblock.Po
include ./$(DEPDIR)/libvds_server_a-messagesigner.Po
include ./$(DEPDIR)/libvds_server_a-metrics.Po
include ./$(DEPDIR)/libvds_server_a-net.Po
include ./$(DEPDIR)/libvds_server_a-net_processing.Po
include ./$(DEPDIR)/libvds_server_a-netfulfilledman.Po
include ./$(DEPDIR)/libvds_server_a-noui.Po
include ./$(DEPDIR)/libvds_server_a-pow.Po
include ./$(DEPDIR)/libvds_server_a-rest.Po
include ./$(DEPDIR)/libvds_server_a-sendalert.Po
include ./$(DEPDIR)/libvds_server_a-tandiadb.Po
include ./$(DEPDIR)/libvds_server_a-timedata.Po
include ./$(DEPDIR)/libvds_server_a-torcontrol.Po
include ./$(DEPDIR)/libvds_server_a-txdb.Po
include ./$(DEPDIR)/libvds_server_a-txdestinationtool.Po
include ./$(DEPDIR)/libvds_server_a-txmempool.Po
include ./$(DEPDIR)/libvds_server_a-ui_interface.Po
include ./$(DEPDIR)/libvds_server_a-validation.Po
include ./$(DEPDIR)/libvds_server_a-validationinterface.Po
include ./$(DEPDIR)/libvds_server_a-versionbits.Po
include ./$(DEPDIR)/libvds_sqlite3_a-sqlite3.Po
include ./$(DEPDIR)/libvds_util_a-chainparamsbase.Po
include ./$(DEPDIR)/libvds_util_a-clientversion.Po
include ./$(DEPDIR)/libvds_util_a-fs.Po
include ./$(DEPDIR)/libvds_util_a-random.Po
include ./$(DEPDIR)/libvds_util_a-sync.Po
include ./$(DEPDIR)/libvds_util_a-threadinterrupt.Po
include ./$(DEPDIR)/libvds_util_a-uint256.Po
include ./$(DEPDIR)/libvds_util_a-util.Po
include ./$(DEPDIR)/libvds_util_a-utilmoneystr.Po
include ./$(DEPDIR)/libvds_util_a-utilstrencodings.Po
include ./$(DEPDIR)/libvds_util_a-utiltime.Po
include ./$(DEPDIR)/libvds_wallet_a-activemasternode.Po
include ./$(DEPDIR)/libvds_wallet_a-base58.Po
include ./$(DEPDIR)/libvds_wallet_a-bip38_key.Po
include ./$(DEPDIR)/libvds_wallet_a-contract.Po
include ./$(DEPDIR)/libvds_wallet_a-contractabi.Po
include ./$(DEPDIR)/libvds_wallet_a-contractman.Po
include ./$(DEPDIR)/libvds_wallet_a-masternode-payments.Po
include ./$(DEPDIR)/libvds_wallet_a-masternode-sync.Po
include ./$(DEPDIR)/libvds_wallet_a-masternode.Po
include ./$(DEPDIR)/libvds_wallet_a-masternodeconfig.Po
include ./$(DEPDIR)/libvds_wallet_a-masternodeman.Po
include ./$(DEPDIR)/libvds_wallet_a-masternodestatistic.Po
include ./$(DEPDIR)/libvds_wallet_a-paymentdisclosure.Po
include ./$(DEPDIR)/libvds_wallet_a-paymentdisclosuredb.Po
include ./$(DEPDIR)/libvds_wallet_a-ui_interface.Po
include ./$(DEPDIR)/libvds_wallet_a-zcbenchmarks.Po
include ./$(DEPDIR)/libvdsconsensus_la-hash.Plo
include ./$(DEPDIR)/libvdsconsensus_la-pubkey.Plo
include ./$(DEPDIR)/libvdsconsensus_la-uint256.Plo
include ./$(DEPDIR)/libvdsconsensus_la-utilstrencodings.Plo
include ./$(DEPDIR)/vds_cli-bitcoin-cli.Po
include ./$(DEPDIR)/vds_tx-bitcoin-tx.Po
include ./$(DEPDIR)/vdsd-bitcoind.Po
include amqp/$(DEPDIR)/libvds_proton_a-amqpabstractnotifier.Po
include amqp/$(DEPDIR)/libvds_proton_a-amqpnotificationinterface.Po
include amqp/$(DEPDIR)/libvds_proton_a-amqppublishnotifier.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-Examples.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-base58.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-bench.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-bench_bitcoin.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-ccoins_caching.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-checkblock.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-checkqueue.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-coin_selection.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-crypto_hash.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-lockedpool.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-mempool_eviction.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-perf.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-prevector_destructor.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-rollingbloom.Po
include bench/$(DEPDIR)/bench_bench_bitcoin-verify_script.Po
include compat/$(DEPDIR)/libvds_util_a-glibc_compat.Po
include compat/$(DEPDIR)/libvds_util_a-glibc_sanity.Po
include compat/$(DEPDIR)/libvds_util_a-glibcxx_sanity.Po
include compat/$(DEPDIR)/libvds_util_a-strnlen.Po
include compat/$(DEPDIR)/libvdsconsensus_la-glibc_compat.Plo
include consensus/$(DEPDIR)/libvds_server_a-merkle.Po
include cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Base64.Po
include cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Common.Po
include cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-CommonData.Po
include cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-CommonIO.Po
include cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-CommonJS.Po
include cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-FileSystem.Po
include cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-FixedHash.Po
include cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Guards.Po
include cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Hash.Po
include cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Log.Po
include cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-MemoryDB.Po
include cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-OverlayDB.Po
include cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-RLP.Po
include cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-SHA3.Po
include cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TransientDirectory.Po
include cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TrieCommon.Po
include cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TrieDB.Po
include cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TrieHash.Po
include cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Worker.Po
include cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-AES.Po
include cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-Common.Po
include cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-CryptoPP.Po
include cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-ECDHE.Po
include cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-internal.Po
include cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-io.Po
include cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-io_posix.Po
include cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-io_win32.Po
include cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-mmap_win32.Po
include cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-sha3.Po
include cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-util_win32.Po
include cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-Ethash.Po
include cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-EthashAux.Po
include cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-EthashCPUMiner.Po
include cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-EthashProofOfWork.Po
include cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-GenesisInfo.Po
include cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-eip150Test.Po
include cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-eip158Test.Po
include cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-frontierTest.Po
include cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-homesteadTest.Po
include cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-mainNetwork.Po
include cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-mainNetworkTest.Po
include cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-metropolisTest.Po
include cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-qtumMainNetwork.Po
include cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-qtumTestNetwork.Po
include cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-ropsten.Po
include cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-transitionnetTest.Po
include cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-ABI.Po
include cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-BlockHeader.Po
include cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-ChainOperationParams.Po
include cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-Common.Po
include cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-ICAP.Po
include cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-Precompiled.Po
include cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-SealEngine.Po
include cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-Transaction.Po
include cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Account.Po
include cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Block.Po
include cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-BlockChain.Po
include cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-BlockDetails.Po
include cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-BlockQueue.Po
include cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-ChainParams.Po
include cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Defaults.Po
include cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Executive.Po
include cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-ExtVM.Po
include cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-GasPricer.Po
include cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-GenesisInfo.Po
include cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-State.Po
include cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Transaction.Po
include cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-TransactionQueue.Po
include cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-TransactionReceipt.Po
include cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-ExtVMFace.Po
include cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VM.Po
include cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VMCalls.Po
include cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VMFactory.Po
include cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VMOpt.Po
include cpp-ethereum/libevmcore/$(DEPDIR)/libvds_common_a-Instruction.Po
include cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-b64.Po
include cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto-mcf.Po
include cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto-scrypt-saltgen.Po
include cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-check.Po
include cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-hash.Po
include cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-hexconvert.Po
include cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-nosse.Po
include cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-sha256.Po
include cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-slowequals.Po
include crypto/$(DEPDIR)/crypto_libvds_crypto_a-chacha20.Po
include crypto/$(DEPDIR)/crypto_libvds_crypto_a-equihash.Po
include crypto/$(DEPDIR)/crypto_libvds_crypto_a-hmac_sha256.Po
include crypto/$(DEPDIR)/crypto_libvds_crypto_a-hmac_sha512.Po
include crypto/$(DEPDIR)/crypto_libvds_crypto_a-ripemd160.Po
include crypto/$(DEPDIR)/crypto_libvds_crypto_a-scrypt.Po
include crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha1.Po
include crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha256.Po
include crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha256_sse4.Po
include crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha512.Po
include crypto/$(DEPDIR)/libvds_a-sha256.Po
include crypto/$(DEPDIR)/libvds_consensus_a-equihash.Po
include crypto/$(DEPDIR)/libvds_consensus_a-hmac_sha512.Po
include crypto/$(DEPDIR)/libvds_consensus_a-ripemd160.Po
include crypto/$(DEPDIR)/libvds_consensus_a-sha1.Po
include crypto/$(DEPDIR)/libvds_consensus_a-sha256.Po
include crypto/$(DEPDIR)/libvds_consensus_a-sha512.Po
include crypto/$(DEPDIR)/libvdsconsensus_la-equihash.Plo
include crypto/$(DEPDIR)/libvdsconsensus_la-hmac_sha512.Plo
include crypto/$(DEPDIR)/libvdsconsensus_la-ripemd160.Plo
include crypto/$(DEPDIR)/libvdsconsensus_la-sha1.Plo
include crypto/$(DEPDIR)/libvdsconsensus_la-sha256.Plo
include crypto/$(DEPDIR)/libvdsconsensus_la-sha512.Plo
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-algebra.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-algparam.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-asn.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-basecode.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-cpu.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-cryptlib.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-des.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-dessp.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-dll.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-dsa.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-ec2n.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-eccrypto.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-ecp.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-eprecomp.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-filters.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-fips140.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-gf2n.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-gfpcrypt.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-hex.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-hmac.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-hrtimer.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-integer.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-iterhash.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-keccak.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-misc.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-modes.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-mqueue.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-nbtheory.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-oaep.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-osrng.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-polynomi.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-pubkey.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-queue.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-randpool.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-rdtables.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-rijndael.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-rng.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-sha.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-sha3.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-strciphr.Po
include cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-winpipes.Po
include gtest/$(DEPDIR)/vds_gtest-json_test_vectors.Po
include gtest/$(DEPDIR)/vds_gtest-main.Po
include gtest/$(DEPDIR)/vds_gtest-test_checkblock.Po
include gtest/$(DEPDIR)/vds_gtest-test_checktransaction.Po
include gtest/$(DEPDIR)/vds_gtest-test_circuit.Po
include gtest/$(DEPDIR)/vds_gtest-test_deprecation.Po
include gtest/$(DEPDIR)/vds_gtest-test_equihash.Po
include gtest/$(DEPDIR)/vds_gtest-test_httprpc.Po
include gtest/$(DEPDIR)/vds_gtest-test_keys.Po
include gtest/$(DEPDIR)/vds_gtest-test_keystore.Po
include gtest/$(DEPDIR)/vds_gtest-test_libzcash_utils.Po
include gtest/$(DEPDIR)/vds_gtest-test_mempool.Po
include gtest/$(DEPDIR)/vds_gtest-test_merkletree.Po
include gtest/$(DEPDIR)/vds_gtest-test_miner.Po
include gtest/$(DEPDIR)/vds_gtest-test_noteencryption.Po
include gtest/$(DEPDIR)/vds_gtest-test_paymentdisclosure.Po
include gtest/$(DEPDIR)/vds_gtest-test_pedersen_hash.Po
include gtest/$(DEPDIR)/vds_gtest-test_pow.Po
include gtest/$(DEPDIR)/vds_gtest-test_proofs.Po
include gtest/$(DEPDIR)/vds_gtest-test_random.Po
include gtest/$(DEPDIR)/vds_gtest-test_rpc.Po
include gtest/$(DEPDIR)/vds_gtest-test_sapling_note.Po
include gtest/$(DEPDIR)/vds_gtest-test_tautology.Po
include gtest/$(DEPDIR)/vds_gtest-test_transaction.Po
include gtest/$(DEPDIR)/vds_gtest-test_transaction_builder.Po
include gtest/$(DEPDIR)/vds_gtest-test_txid.Po
include gtest/$(DEPDIR)/vds_gtest-test_validation.Po
include gtest/$(DEPDIR)/vds_gtest-test_zip32.Po
include gtest/$(DEPDIR)/vds_gtest-utils.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-builder.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-c.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_impl.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_iter.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dbformat.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dumpfile.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-filename.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_reader.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_writer.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-memtable.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-repair.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-table_cache.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_edit.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_set.Po
include leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-write_batch.Po
include leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_a-memenv.Po
include leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_posix.Po
include leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_win.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block_builder.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-filter_block.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-format.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-iterator.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-merger.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table_builder.Po
include leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-two_level_iterator.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-arena.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-bloom.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-cache.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-coding.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-comparator.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-crc32c.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_posix.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_win.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-filter_policy.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-hash.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-histogram.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-logging.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-options.Po
include leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-status.Po
include policy/$(DEPDIR)/libvds_server_a-feerate.Po
include policy/$(DEPDIR)/libvds_server_a-fees.Po
include policy/$(DEPDIR)/libvds_server_a-policy.Po
include primitives/$(DEPDIR)/libvds_common_a-block.Po
include primitives/$(DEPDIR)/libvds_common_a-transaction.Po
include primitives/$(DEPDIR)/libvds_consensus_a-transaction.Po
include primitives/$(DEPDIR)/libvdsconsensus_la-transaction.Plo
include qtum/$(DEPDIR)/libvds_server_a-qtumDGP.Po
include qtum/$(DEPDIR)/libvds_server_a-qtumstate.Po
include qtum/$(DEPDIR)/libvds_server_a-qtumtransaction.Po
include qtum/$(DEPDIR)/libvds_server_a-storageresults.Po
include rpc/$(DEPDIR)/libvds_cli_a-client.Po
include rpc/$(DEPDIR)/libvds_server_a-ad.Po
include rpc/$(DEPDIR)/libvds_server_a-blockchain.Po
include rpc/$(DEPDIR)/libvds_server_a-masternode.Po
include rpc/$(DEPDIR)/libvds_server_a-misc.Po
include rpc/$(DEPDIR)/libvds_server_a-net.Po
include rpc/$(DEPDIR)/libvds_server_a-rawtransaction.Po
include rpc/$(DEPDIR)/libvds_server_a-server.Po
include rpc/$(DEPDIR)/libvds_util_a-protocol.Po
include rpc/$(DEPDIR)/libvds_wallet_a-blockchain.Po
include rpc/$(DEPDIR)/libvds_wallet_a-masternode.Po
include rpc/$(DEPDIR)/libvds_wallet_a-misc.Po
include script/$(DEPDIR)/libvds_common_a-interpreter.Po
include script/$(DEPDIR)/libvds_common_a-script.Po
include script/$(DEPDIR)/libvds_common_a-script_error.Po
include script/$(DEPDIR)/libvds_common_a-sign.Po
include script/$(DEPDIR)/libvds_common_a-standard.Po
include script/$(DEPDIR)/libvds_consensus_a-interpreter.Po
include script/$(DEPDIR)/libvds_consensus_a-script.Po
include script/$(DEPDIR)/libvds_consensus_a-vdsconsensus.Po
include script/$(DEPDIR)/libvds_server_a-sigcache.Po
include script/$(DEPDIR)/libvdsconsensus_la-interpreter.Plo
include script/$(DEPDIR)/libvdsconsensus_la-script.Plo
include script/$(DEPDIR)/libvdsconsensus_la-vdsconsensus.Plo
include support/$(DEPDIR)/crypto_libvds_crypto_a-cleanse.Po
include support/$(DEPDIR)/libvds_util_a-cleanse.Po
include support/$(DEPDIR)/libvds_util_a-lockedpool.Po
include support/$(DEPDIR)/libvds_util_a-pagelocker.Po
include test/$(DEPDIR)/test_test_bitcoin-Checkpoints_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-DoS_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-addrman_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-alert_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-allocator_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-arith_uint256_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-base32_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-base58_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-base64_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-bip32_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-bloom_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-checkblock_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-coins_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-compress_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-crypto_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-equihash_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-getarg_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-hash_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-key_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-main_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-mempool_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-miner_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-mruset_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-multisig_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-netbase_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-pmt_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-policyestimator_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-pow_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-raii_event_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-reverselock_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-rpc_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-sanity_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-scheduler_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-script_P2SH_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-script_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-scriptnum_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-serialize_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-sha256compress_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-sighash_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-sigopcount_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-skiplist_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-test_bitcoin.Po
include test/$(DEPDIR)/test_test_bitcoin-timedata_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-torcontrol_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-transaction_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-uint256_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-univalue_tests.Po
include test/$(DEPDIR)/test_test_bitcoin-util_tests.Po
include test/$(DEPDIR)/test_test_bitcoin_fuzzy-test_bitcoin_fuzzy.Po
include vds/$(DEPDIR)/libvds_a-Address.Po
include vds/$(DEPDIR)/libvds_a-IncrementalMerkleTree.Po
include vds/$(DEPDIR)/libvds_a-JoinSplit.Po
include vds/$(DEPDIR)/libvds_a-Note.Po
include vds/$(DEPDIR)/libvds_a-NoteEncryption.Po
include vds/$(DEPDIR)/libvds_a-Proof.Po
include vds/$(DEPDIR)/libvds_a-prf.Po
include vds/$(DEPDIR)/libvds_a-util.Po
include vds/$(DEPDIR)/libvds_a-zip32.Po
include wallet/$(DEPDIR)/libvds_wallet_a-asyncrpcoperation_sendmany.Po
include wallet/$(DEPDIR)/libvds_wallet_a-asyncrpcoperation_shieldcoinbase.Po
include wallet/$(DEPDIR)/libvds_wallet_a-bip39_mnemonic.Po
include wallet/$(DEPDIR)/libvds_wallet_a-crypter.Po
include wallet/$(DEPDIR)/libvds_wallet_a-db.Po
include wallet/$(DEPDIR)/libvds_wallet_a-feebumper.Po
include wallet/$(DEPDIR)/libvds_wallet_a-fees.Po
include wallet/$(DEPDIR)/libvds_wallet_a-rpcdisclosure.Po
include wallet/$(DEPDIR)/libvds_wallet_a-rpcdump.Po
include wallet/$(DEPDIR)/libvds_wallet_a-rpcwallet.Po
include wallet/$(DEPDIR)/libvds_wallet_a-wallet.Po
include wallet/$(DEPDIR)/libvds_wallet_a-wallet_ismine.Po
include wallet/$(DEPDIR)/libvds_wallet_a-walletdb.Po
include wallet/gtest/$(DEPDIR)/vds_gtest-test_wallet.Po
include wallet/gtest/$(DEPDIR)/vds_gtest-test_wallet_zkeys.Po
include wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_tests.Po
include zmq/$(DEPDIR)/libvds_zmq_a-zmqabstractnotifier.Po
include zmq/$(DEPDIR)/libvds_zmq_a-zmqnotificationinterface.Po
include zmq/$(DEPDIR)/libvds_zmq_a-zmqpublishnotifier.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-b64.o: cpp-ethereum/utils/libscrypt/b64.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-b64.o -MD -MP -MF cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-b64.Tpo -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-b64.o `test -f 'cpp-ethereum/utils/libscrypt/b64.c' || echo '$(srcdir)/'`cpp-ethereum/utils/libscrypt/b64.c
	$(AM_V_at)$(am__mv) cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-b64.Tpo cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-b64.Po
#	$(AM_V_CC)source='cpp-ethereum/utils/libscrypt/b64.c' object='cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-b64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-b64.o `test -f 'cpp-ethereum/utils/libscrypt/b64.c' || echo '$(srcdir)/'`cpp-ethereum/utils/libscrypt/b64.c

cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-b64.obj: cpp-ethereum/utils/libscrypt/b64.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-b64.obj -MD -MP -MF cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-b64.Tpo -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-b64.obj `if test -f 'cpp-ethereum/utils/libscrypt/b64.c'; then $(CYGPATH_W) 'cpp-ethereum/utils/libscrypt/b64.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/utils/libscrypt/b64.c'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-b64.Tpo cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-b64.Po
#	$(AM_V_CC)source='cpp-ethereum/utils/libscrypt/b64.c' object='cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-b64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-b64.obj `if test -f 'cpp-ethereum/utils/libscrypt/b64.c'; then $(CYGPATH_W) 'cpp-ethereum/utils/libscrypt/b64.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/utils/libscrypt/b64.c'; fi`

cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto-mcf.o: cpp-ethereum/utils/libscrypt/crypto-mcf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto-mcf.o -MD -MP -MF cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto-mcf.Tpo -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto-mcf.o `test -f 'cpp-ethereum/utils/libscrypt/crypto-mcf.c' || echo '$(srcdir)/'`cpp-ethereum/utils/libscrypt/crypto-mcf.c
	$(AM_V_at)$(am__mv) cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto-mcf.Tpo cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto-mcf.Po
#	$(AM_V_CC)source='cpp-ethereum/utils/libscrypt/crypto-mcf.c' object='cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto-mcf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto-mcf.o `test -f 'cpp-ethereum/utils/libscrypt/crypto-mcf.c' || echo '$(srcdir)/'`cpp-ethereum/utils/libscrypt/crypto-mcf.c

cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto-mcf.obj: cpp-ethereum/utils/libscrypt/crypto-mcf.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto-mcf.obj -MD -MP -MF cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto-mcf.Tpo -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto-mcf.obj `if test -f 'cpp-ethereum/utils/libscrypt/crypto-mcf.c'; then $(CYGPATH_W) 'cpp-ethereum/utils/libscrypt/crypto-mcf.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/utils/libscrypt/crypto-mcf.c'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto-mcf.Tpo cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto-mcf.Po
#	$(AM_V_CC)source='cpp-ethereum/utils/libscrypt/crypto-mcf.c' object='cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto-mcf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto-mcf.obj `if test -f 'cpp-ethereum/utils/libscrypt/crypto-mcf.c'; then $(CYGPATH_W) 'cpp-ethereum/utils/libscrypt/crypto-mcf.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/utils/libscrypt/crypto-mcf.c'; fi`

cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-check.o: cpp-ethereum/utils/libscrypt/crypto_scrypt-check.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-check.o -MD -MP -MF cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-check.Tpo -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-check.o `test -f 'cpp-ethereum/utils/libscrypt/crypto_scrypt-check.c' || echo '$(srcdir)/'`cpp-ethereum/utils/libscrypt/crypto_scrypt-check.c
	$(AM_V_at)$(am__mv) cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-check.Tpo cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-check.Po
#	$(AM_V_CC)source='cpp-ethereum/utils/libscrypt/crypto_scrypt-check.c' object='cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-check.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-check.o `test -f 'cpp-ethereum/utils/libscrypt/crypto_scrypt-check.c' || echo '$(srcdir)/'`cpp-ethereum/utils/libscrypt/crypto_scrypt-check.c

cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-check.obj: cpp-ethereum/utils/libscrypt/crypto_scrypt-check.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-check.obj -MD -MP -MF cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-check.Tpo -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-check.obj `if test -f 'cpp-ethereum/utils/libscrypt/crypto_scrypt-check.c'; then $(CYGPATH_W) 'cpp-ethereum/utils/libscrypt/crypto_scrypt-check.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/utils/libscrypt/crypto_scrypt-check.c'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-check.Tpo cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-check.Po
#	$(AM_V_CC)source='cpp-ethereum/utils/libscrypt/crypto_scrypt-check.c' object='cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-check.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-check.obj `if test -f 'cpp-ethereum/utils/libscrypt/crypto_scrypt-check.c'; then $(CYGPATH_W) 'cpp-ethereum/utils/libscrypt/crypto_scrypt-check.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/utils/libscrypt/crypto_scrypt-check.c'; fi`

cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-hash.o: cpp-ethereum/utils/libscrypt/crypto_scrypt-hash.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-hash.o -MD -MP -MF cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-hash.Tpo -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-hash.o `test -f 'cpp-ethereum/utils/libscrypt/crypto_scrypt-hash.c' || echo '$(srcdir)/'`cpp-ethereum/utils/libscrypt/crypto_scrypt-hash.c
	$(AM_V_at)$(am__mv) cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-hash.Tpo cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-hash.Po
#	$(AM_V_CC)source='cpp-ethereum/utils/libscrypt/crypto_scrypt-hash.c' object='cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-hash.o `test -f 'cpp-ethereum/utils/libscrypt/crypto_scrypt-hash.c' || echo '$(srcdir)/'`cpp-ethereum/utils/libscrypt/crypto_scrypt-hash.c

cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-hash.obj: cpp-ethereum/utils/libscrypt/crypto_scrypt-hash.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-hash.obj -MD -MP -MF cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-hash.Tpo -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-hash.obj `if test -f 'cpp-ethereum/utils/libscrypt/crypto_scrypt-hash.c'; then $(CYGPATH_W) 'cpp-ethereum/utils/libscrypt/crypto_scrypt-hash.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/utils/libscrypt/crypto_scrypt-hash.c'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-hash.Tpo cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-hash.Po
#	$(AM_V_CC)source='cpp-ethereum/utils/libscrypt/crypto_scrypt-hash.c' object='cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-hash.obj `if test -f 'cpp-ethereum/utils/libscrypt/crypto_scrypt-hash.c'; then $(CYGPATH_W) 'cpp-ethereum/utils/libscrypt/crypto_scrypt-hash.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/utils/libscrypt/crypto_scrypt-hash.c'; fi`

cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-hexconvert.o: cpp-ethereum/utils/libscrypt/crypto_scrypt-hexconvert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-hexconvert.o -MD -MP -MF cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-hexconvert.Tpo -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-hexconvert.o `test -f 'cpp-ethereum/utils/libscrypt/crypto_scrypt-hexconvert.c' || echo '$(srcdir)/'`cpp-ethereum/utils/libscrypt/crypto_scrypt-hexconvert.c
	$(AM_V_at)$(am__mv) cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-hexconvert.Tpo cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-hexconvert.Po
#	$(AM_V_CC)source='cpp-ethereum/utils/libscrypt/crypto_scrypt-hexconvert.c' object='cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-hexconvert.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-hexconvert.o `test -f 'cpp-ethereum/utils/libscrypt/crypto_scrypt-hexconvert.c' || echo '$(srcdir)/'`cpp-ethereum/utils/libscrypt/crypto_scrypt-hexconvert.c

cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-hexconvert.obj: cpp-ethereum/utils/libscrypt/crypto_scrypt-hexconvert.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-hexconvert.obj -MD -MP -MF cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-hexconvert.Tpo -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-hexconvert.obj `if test -f 'cpp-ethereum/utils/libscrypt/crypto_scrypt-hexconvert.c'; then $(CYGPATH_W) 'cpp-ethereum/utils/libscrypt/crypto_scrypt-hexconvert.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/utils/libscrypt/crypto_scrypt-hexconvert.c'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-hexconvert.Tpo cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-hexconvert.Po
#	$(AM_V_CC)source='cpp-ethereum/utils/libscrypt/crypto_scrypt-hexconvert.c' object='cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-hexconvert.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-hexconvert.obj `if test -f 'cpp-ethereum/utils/libscrypt/crypto_scrypt-hexconvert.c'; then $(CYGPATH_W) 'cpp-ethereum/utils/libscrypt/crypto_scrypt-hexconvert.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/utils/libscrypt/crypto_scrypt-hexconvert.c'; fi`

cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-nosse.o: cpp-ethereum/utils/libscrypt/crypto_scrypt-nosse.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-nosse.o -MD -MP -MF cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-nosse.Tpo -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-nosse.o `test -f 'cpp-ethereum/utils/libscrypt/crypto_scrypt-nosse.c' || echo '$(srcdir)/'`cpp-ethereum/utils/libscrypt/crypto_scrypt-nosse.c
	$(AM_V_at)$(am__mv) cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-nosse.Tpo cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-nosse.Po
#	$(AM_V_CC)source='cpp-ethereum/utils/libscrypt/crypto_scrypt-nosse.c' object='cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-nosse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-nosse.o `test -f 'cpp-ethereum/utils/libscrypt/crypto_scrypt-nosse.c' || echo '$(srcdir)/'`cpp-ethereum/utils/libscrypt/crypto_scrypt-nosse.c

cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-nosse.obj: cpp-ethereum/utils/libscrypt/crypto_scrypt-nosse.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-nosse.obj -MD -MP -MF cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-nosse.Tpo -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-nosse.obj `if test -f 'cpp-ethereum/utils/libscrypt/crypto_scrypt-nosse.c'; then $(CYGPATH_W) 'cpp-ethereum/utils/libscrypt/crypto_scrypt-nosse.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/utils/libscrypt/crypto_scrypt-nosse.c'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-nosse.Tpo cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto_scrypt-nosse.Po
#	$(AM_V_CC)source='cpp-ethereum/utils/libscrypt/crypto_scrypt-nosse.c' object='cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-nosse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto_scrypt-nosse.obj `if test -f 'cpp-ethereum/utils/libscrypt/crypto_scrypt-nosse.c'; then $(CYGPATH_W) 'cpp-ethereum/utils/libscrypt/crypto_scrypt-nosse.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/utils/libscrypt/crypto_scrypt-nosse.c'; fi`

cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto-scrypt-saltgen.o: cpp-ethereum/utils/libscrypt/crypto-scrypt-saltgen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto-scrypt-saltgen.o -MD -MP -MF cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto-scrypt-saltgen.Tpo -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto-scrypt-saltgen.o `test -f 'cpp-ethereum/utils/libscrypt/crypto-scrypt-saltgen.c' || echo '$(srcdir)/'`cpp-ethereum/utils/libscrypt/crypto-scrypt-saltgen.c
	$(AM_V_at)$(am__mv) cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto-scrypt-saltgen.Tpo cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto-scrypt-saltgen.Po
#	$(AM_V_CC)source='cpp-ethereum/utils/libscrypt/crypto-scrypt-saltgen.c' object='cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto-scrypt-saltgen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto-scrypt-saltgen.o `test -f 'cpp-ethereum/utils/libscrypt/crypto-scrypt-saltgen.c' || echo '$(srcdir)/'`cpp-ethereum/utils/libscrypt/crypto-scrypt-saltgen.c

cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto-scrypt-saltgen.obj: cpp-ethereum/utils/libscrypt/crypto-scrypt-saltgen.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto-scrypt-saltgen.obj -MD -MP -MF cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto-scrypt-saltgen.Tpo -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto-scrypt-saltgen.obj `if test -f 'cpp-ethereum/utils/libscrypt/crypto-scrypt-saltgen.c'; then $(CYGPATH_W) 'cpp-ethereum/utils/libscrypt/crypto-scrypt-saltgen.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/utils/libscrypt/crypto-scrypt-saltgen.c'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto-scrypt-saltgen.Tpo cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-crypto-scrypt-saltgen.Po
#	$(AM_V_CC)source='cpp-ethereum/utils/libscrypt/crypto-scrypt-saltgen.c' object='cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto-scrypt-saltgen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-crypto-scrypt-saltgen.obj `if test -f 'cpp-ethereum/utils/libscrypt/crypto-scrypt-saltgen.c'; then $(CYGPATH_W) 'cpp-ethereum/utils/libscrypt/crypto-scrypt-saltgen.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/utils/libscrypt/crypto-scrypt-saltgen.c'; fi`

cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-sha256.o: cpp-ethereum/utils/libscrypt/sha256.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-sha256.o -MD -MP -MF cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-sha256.Tpo -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-sha256.o `test -f 'cpp-ethereum/utils/libscrypt/sha256.c' || echo '$(srcdir)/'`cpp-ethereum/utils/libscrypt/sha256.c
	$(AM_V_at)$(am__mv) cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-sha256.Tpo cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-sha256.Po
#	$(AM_V_CC)source='cpp-ethereum/utils/libscrypt/sha256.c' object='cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-sha256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-sha256.o `test -f 'cpp-ethereum/utils/libscrypt/sha256.c' || echo '$(srcdir)/'`cpp-ethereum/utils/libscrypt/sha256.c

cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-sha256.obj: cpp-ethereum/utils/libscrypt/sha256.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-sha256.obj -MD -MP -MF cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-sha256.Tpo -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-sha256.obj `if test -f 'cpp-ethereum/utils/libscrypt/sha256.c'; then $(CYGPATH_W) 'cpp-ethereum/utils/libscrypt/sha256.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/utils/libscrypt/sha256.c'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-sha256.Tpo cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-sha256.Po
#	$(AM_V_CC)source='cpp-ethereum/utils/libscrypt/sha256.c' object='cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-sha256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-sha256.obj `if test -f 'cpp-ethereum/utils/libscrypt/sha256.c'; then $(CYGPATH_W) 'cpp-ethereum/utils/libscrypt/sha256.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/utils/libscrypt/sha256.c'; fi`

cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-slowequals.o: cpp-ethereum/utils/libscrypt/slowequals.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-slowequals.o -MD -MP -MF cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-slowequals.Tpo -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-slowequals.o `test -f 'cpp-ethereum/utils/libscrypt/slowequals.c' || echo '$(srcdir)/'`cpp-ethereum/utils/libscrypt/slowequals.c
	$(AM_V_at)$(am__mv) cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-slowequals.Tpo cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-slowequals.Po
#	$(AM_V_CC)source='cpp-ethereum/utils/libscrypt/slowequals.c' object='cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-slowequals.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-slowequals.o `test -f 'cpp-ethereum/utils/libscrypt/slowequals.c' || echo '$(srcdir)/'`cpp-ethereum/utils/libscrypt/slowequals.c

cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-slowequals.obj: cpp-ethereum/utils/libscrypt/slowequals.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-slowequals.obj -MD -MP -MF cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-slowequals.Tpo -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-slowequals.obj `if test -f 'cpp-ethereum/utils/libscrypt/slowequals.c'; then $(CYGPATH_W) 'cpp-ethereum/utils/libscrypt/slowequals.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/utils/libscrypt/slowequals.c'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-slowequals.Tpo cpp-ethereum/utils/libscrypt/$(DEPDIR)/crypto_libvds_crypto_a-slowequals.Po
#	$(AM_V_CC)source='cpp-ethereum/utils/libscrypt/slowequals.c' object='cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-slowequals.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/utils/libscrypt/crypto_libvds_crypto_a-slowequals.obj `if test -f 'cpp-ethereum/utils/libscrypt/slowequals.c'; then $(CYGPATH_W) 'cpp-ethereum/utils/libscrypt/slowequals.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/utils/libscrypt/slowequals.c'; fi`

cpp-ethereum/libethash/libvds_common_a-internal.o: cpp-ethereum/libethash/internal.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/libethash/libvds_common_a-internal.o -MD -MP -MF cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-internal.Tpo -c -o cpp-ethereum/libethash/libvds_common_a-internal.o `test -f 'cpp-ethereum/libethash/internal.c' || echo '$(srcdir)/'`cpp-ethereum/libethash/internal.c
	$(AM_V_at)$(am__mv) cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-internal.Tpo cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-internal.Po
#	$(AM_V_CC)source='cpp-ethereum/libethash/internal.c' object='cpp-ethereum/libethash/libvds_common_a-internal.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/libethash/libvds_common_a-internal.o `test -f 'cpp-ethereum/libethash/internal.c' || echo '$(srcdir)/'`cpp-ethereum/libethash/internal.c

cpp-ethereum/libethash/libvds_common_a-internal.obj: cpp-ethereum/libethash/internal.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/libethash/libvds_common_a-internal.obj -MD -MP -MF cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-internal.Tpo -c -o cpp-ethereum/libethash/libvds_common_a-internal.obj `if test -f 'cpp-ethereum/libethash/internal.c'; then $(CYGPATH_W) 'cpp-ethereum/libethash/internal.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethash/internal.c'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-internal.Tpo cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-internal.Po
#	$(AM_V_CC)source='cpp-ethereum/libethash/internal.c' object='cpp-ethereum/libethash/libvds_common_a-internal.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/libethash/libvds_common_a-internal.obj `if test -f 'cpp-ethereum/libethash/internal.c'; then $(CYGPATH_W) 'cpp-ethereum/libethash/internal.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethash/internal.c'; fi`

cpp-ethereum/libethash/libvds_common_a-io.o: cpp-ethereum/libethash/io.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/libethash/libvds_common_a-io.o -MD -MP -MF cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-io.Tpo -c -o cpp-ethereum/libethash/libvds_common_a-io.o `test -f 'cpp-ethereum/libethash/io.c' || echo '$(srcdir)/'`cpp-ethereum/libethash/io.c
	$(AM_V_at)$(am__mv) cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-io.Tpo cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-io.Po
#	$(AM_V_CC)source='cpp-ethereum/libethash/io.c' object='cpp-ethereum/libethash/libvds_common_a-io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/libethash/libvds_common_a-io.o `test -f 'cpp-ethereum/libethash/io.c' || echo '$(srcdir)/'`cpp-ethereum/libethash/io.c

cpp-ethereum/libethash/libvds_common_a-io.obj: cpp-ethereum/libethash/io.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/libethash/libvds_common_a-io.obj -MD -MP -MF cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-io.Tpo -c -o cpp-ethereum/libethash/libvds_common_a-io.obj `if test -f 'cpp-ethereum/libethash/io.c'; then $(CYGPATH_W) 'cpp-ethereum/libethash/io.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethash/io.c'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-io.Tpo cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-io.Po
#	$(AM_V_CC)source='cpp-ethereum/libethash/io.c' object='cpp-ethereum/libethash/libvds_common_a-io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/libethash/libvds_common_a-io.obj `if test -f 'cpp-ethereum/libethash/io.c'; then $(CYGPATH_W) 'cpp-ethereum/libethash/io.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethash/io.c'; fi`

cpp-ethereum/libethash/libvds_common_a-sha3.o: cpp-ethereum/libethash/sha3.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/libethash/libvds_common_a-sha3.o -MD -MP -MF cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-sha3.Tpo -c -o cpp-ethereum/libethash/libvds_common_a-sha3.o `test -f 'cpp-ethereum/libethash/sha3.c' || echo '$(srcdir)/'`cpp-ethereum/libethash/sha3.c
	$(AM_V_at)$(am__mv) cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-sha3.Tpo cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-sha3.Po
#	$(AM_V_CC)source='cpp-ethereum/libethash/sha3.c' object='cpp-ethereum/libethash/libvds_common_a-sha3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/libethash/libvds_common_a-sha3.o `test -f 'cpp-ethereum/libethash/sha3.c' || echo '$(srcdir)/'`cpp-ethereum/libethash/sha3.c

cpp-ethereum/libethash/libvds_common_a-sha3.obj: cpp-ethereum/libethash/sha3.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/libethash/libvds_common_a-sha3.obj -MD -MP -MF cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-sha3.Tpo -c -o cpp-ethereum/libethash/libvds_common_a-sha3.obj `if test -f 'cpp-ethereum/libethash/sha3.c'; then $(CYGPATH_W) 'cpp-ethereum/libethash/sha3.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethash/sha3.c'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-sha3.Tpo cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-sha3.Po
#	$(AM_V_CC)source='cpp-ethereum/libethash/sha3.c' object='cpp-ethereum/libethash/libvds_common_a-sha3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/libethash/libvds_common_a-sha3.obj `if test -f 'cpp-ethereum/libethash/sha3.c'; then $(CYGPATH_W) 'cpp-ethereum/libethash/sha3.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethash/sha3.c'; fi`

cpp-ethereum/libethash/libvds_common_a-mmap_win32.o: cpp-ethereum/libethash/mmap_win32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/libethash/libvds_common_a-mmap_win32.o -MD -MP -MF cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-mmap_win32.Tpo -c -o cpp-ethereum/libethash/libvds_common_a-mmap_win32.o `test -f 'cpp-ethereum/libethash/mmap_win32.c' || echo '$(srcdir)/'`cpp-ethereum/libethash/mmap_win32.c
	$(AM_V_at)$(am__mv) cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-mmap_win32.Tpo cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-mmap_win32.Po
#	$(AM_V_CC)source='cpp-ethereum/libethash/mmap_win32.c' object='cpp-ethereum/libethash/libvds_common_a-mmap_win32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/libethash/libvds_common_a-mmap_win32.o `test -f 'cpp-ethereum/libethash/mmap_win32.c' || echo '$(srcdir)/'`cpp-ethereum/libethash/mmap_win32.c

cpp-ethereum/libethash/libvds_common_a-mmap_win32.obj: cpp-ethereum/libethash/mmap_win32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/libethash/libvds_common_a-mmap_win32.obj -MD -MP -MF cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-mmap_win32.Tpo -c -o cpp-ethereum/libethash/libvds_common_a-mmap_win32.obj `if test -f 'cpp-ethereum/libethash/mmap_win32.c'; then $(CYGPATH_W) 'cpp-ethereum/libethash/mmap_win32.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethash/mmap_win32.c'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-mmap_win32.Tpo cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-mmap_win32.Po
#	$(AM_V_CC)source='cpp-ethereum/libethash/mmap_win32.c' object='cpp-ethereum/libethash/libvds_common_a-mmap_win32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/libethash/libvds_common_a-mmap_win32.obj `if test -f 'cpp-ethereum/libethash/mmap_win32.c'; then $(CYGPATH_W) 'cpp-ethereum/libethash/mmap_win32.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethash/mmap_win32.c'; fi`

cpp-ethereum/libethash/libvds_common_a-io_win32.o: cpp-ethereum/libethash/io_win32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/libethash/libvds_common_a-io_win32.o -MD -MP -MF cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-io_win32.Tpo -c -o cpp-ethereum/libethash/libvds_common_a-io_win32.o `test -f 'cpp-ethereum/libethash/io_win32.c' || echo '$(srcdir)/'`cpp-ethereum/libethash/io_win32.c
	$(AM_V_at)$(am__mv) cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-io_win32.Tpo cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-io_win32.Po
#	$(AM_V_CC)source='cpp-ethereum/libethash/io_win32.c' object='cpp-ethereum/libethash/libvds_common_a-io_win32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/libethash/libvds_common_a-io_win32.o `test -f 'cpp-ethereum/libethash/io_win32.c' || echo '$(srcdir)/'`cpp-ethereum/libethash/io_win32.c

cpp-ethereum/libethash/libvds_common_a-io_win32.obj: cpp-ethereum/libethash/io_win32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/libethash/libvds_common_a-io_win32.obj -MD -MP -MF cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-io_win32.Tpo -c -o cpp-ethereum/libethash/libvds_common_a-io_win32.obj `if test -f 'cpp-ethereum/libethash/io_win32.c'; then $(CYGPATH_W) 'cpp-ethereum/libethash/io_win32.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethash/io_win32.c'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-io_win32.Tpo cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-io_win32.Po
#	$(AM_V_CC)source='cpp-ethereum/libethash/io_win32.c' object='cpp-ethereum/libethash/libvds_common_a-io_win32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/libethash/libvds_common_a-io_win32.obj `if test -f 'cpp-ethereum/libethash/io_win32.c'; then $(CYGPATH_W) 'cpp-ethereum/libethash/io_win32.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethash/io_win32.c'; fi`

cpp-ethereum/libethash/libvds_common_a-util_win32.o: cpp-ethereum/libethash/util_win32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/libethash/libvds_common_a-util_win32.o -MD -MP -MF cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-util_win32.Tpo -c -o cpp-ethereum/libethash/libvds_common_a-util_win32.o `test -f 'cpp-ethereum/libethash/util_win32.c' || echo '$(srcdir)/'`cpp-ethereum/libethash/util_win32.c
	$(AM_V_at)$(am__mv) cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-util_win32.Tpo cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-util_win32.Po
#	$(AM_V_CC)source='cpp-ethereum/libethash/util_win32.c' object='cpp-ethereum/libethash/libvds_common_a-util_win32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/libethash/libvds_common_a-util_win32.o `test -f 'cpp-ethereum/libethash/util_win32.c' || echo '$(srcdir)/'`cpp-ethereum/libethash/util_win32.c

cpp-ethereum/libethash/libvds_common_a-util_win32.obj: cpp-ethereum/libethash/util_win32.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/libethash/libvds_common_a-util_win32.obj -MD -MP -MF cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-util_win32.Tpo -c -o cpp-ethereum/libethash/libvds_common_a-util_win32.obj `if test -f 'cpp-ethereum/libethash/util_win32.c'; then $(CYGPATH_W) 'cpp-ethereum/libethash/util_win32.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethash/util_win32.c'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-util_win32.Tpo cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-util_win32.Po
#	$(AM_V_CC)source='cpp-ethereum/libethash/util_win32.c' object='cpp-ethereum/libethash/libvds_common_a-util_win32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/libethash/libvds_common_a-util_win32.obj `if test -f 'cpp-ethereum/libethash/util_win32.c'; then $(CYGPATH_W) 'cpp-ethereum/libethash/util_win32.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethash/util_win32.c'; fi`

cpp-ethereum/libethash/libvds_common_a-io_posix.o: cpp-ethereum/libethash/io_posix.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/libethash/libvds_common_a-io_posix.o -MD -MP -MF cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-io_posix.Tpo -c -o cpp-ethereum/libethash/libvds_common_a-io_posix.o `test -f 'cpp-ethereum/libethash/io_posix.c' || echo '$(srcdir)/'`cpp-ethereum/libethash/io_posix.c
	$(AM_V_at)$(am__mv) cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-io_posix.Tpo cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-io_posix.Po
#	$(AM_V_CC)source='cpp-ethereum/libethash/io_posix.c' object='cpp-ethereum/libethash/libvds_common_a-io_posix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/libethash/libvds_common_a-io_posix.o `test -f 'cpp-ethereum/libethash/io_posix.c' || echo '$(srcdir)/'`cpp-ethereum/libethash/io_posix.c

cpp-ethereum/libethash/libvds_common_a-io_posix.obj: cpp-ethereum/libethash/io_posix.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -MT cpp-ethereum/libethash/libvds_common_a-io_posix.obj -MD -MP -MF cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-io_posix.Tpo -c -o cpp-ethereum/libethash/libvds_common_a-io_posix.obj `if test -f 'cpp-ethereum/libethash/io_posix.c'; then $(CYGPATH_W) 'cpp-ethereum/libethash/io_posix.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethash/io_posix.c'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-io_posix.Tpo cpp-ethereum/libethash/$(DEPDIR)/libvds_common_a-io_posix.Po
#	$(AM_V_CC)source='cpp-ethereum/libethash/io_posix.c' object='cpp-ethereum/libethash/libvds_common_a-io_posix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CFLAGS) $(CFLAGS) -c -o cpp-ethereum/libethash/libvds_common_a-io_posix.obj `if test -f 'cpp-ethereum/libethash/io_posix.c'; then $(CYGPATH_W) 'cpp-ethereum/libethash/io_posix.c'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethash/io_posix.c'; fi`

libvds_sqlite3_a-sqlite3.o: sqlite3.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvds_sqlite3_a_CFLAGS) $(CFLAGS) -MT libvds_sqlite3_a-sqlite3.o -MD -MP -MF $(DEPDIR)/libvds_sqlite3_a-sqlite3.Tpo -c -o libvds_sqlite3_a-sqlite3.o `test -f 'sqlite3.c' || echo '$(srcdir)/'`sqlite3.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_sqlite3_a-sqlite3.Tpo $(DEPDIR)/libvds_sqlite3_a-sqlite3.Po
#	$(AM_V_CC)source='sqlite3.c' object='libvds_sqlite3_a-sqlite3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvds_sqlite3_a_CFLAGS) $(CFLAGS) -c -o libvds_sqlite3_a-sqlite3.o `test -f 'sqlite3.c' || echo '$(srcdir)/'`sqlite3.c

libvds_sqlite3_a-sqlite3.obj: sqlite3.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvds_sqlite3_a_CFLAGS) $(CFLAGS) -MT libvds_sqlite3_a-sqlite3.obj -MD -MP -MF $(DEPDIR)/libvds_sqlite3_a-sqlite3.Tpo -c -o libvds_sqlite3_a-sqlite3.obj `if test -f 'sqlite3.c'; then $(CYGPATH_W) 'sqlite3.c'; else $(CYGPATH_W) '$(srcdir)/sqlite3.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_sqlite3_a-sqlite3.Tpo $(DEPDIR)/libvds_sqlite3_a-sqlite3.Po
#	$(AM_V_CC)source='sqlite3.c' object='libvds_sqlite3_a-sqlite3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libvds_sqlite3_a_CFLAGS) $(CFLAGS) -c -o libvds_sqlite3_a-sqlite3.obj `if test -f 'sqlite3.c'; then $(CYGPATH_W) 'sqlite3.c'; else $(CYGPATH_W) '$(srcdir)/sqlite3.c'; fi`

.cc.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

crypto/crypto_libvds_crypto_a-chacha20.o: crypto/chacha20.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libvds_crypto_a-chacha20.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libvds_crypto_a-chacha20.Tpo -c -o crypto/crypto_libvds_crypto_a-chacha20.o `test -f 'crypto/chacha20.cpp' || echo '$(srcdir)/'`crypto/chacha20.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libvds_crypto_a-chacha20.Tpo crypto/$(DEPDIR)/crypto_libvds_crypto_a-chacha20.Po
#	$(AM_V_CXX)source='crypto/chacha20.cpp' object='crypto/crypto_libvds_crypto_a-chacha20.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libvds_crypto_a-chacha20.o `test -f 'crypto/chacha20.cpp' || echo '$(srcdir)/'`crypto/chacha20.cpp

crypto/crypto_libvds_crypto_a-chacha20.obj: crypto/chacha20.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libvds_crypto_a-chacha20.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libvds_crypto_a-chacha20.Tpo -c -o crypto/crypto_libvds_crypto_a-chacha20.obj `if test -f 'crypto/chacha20.cpp'; then $(CYGPATH_W) 'crypto/chacha20.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/chacha20.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libvds_crypto_a-chacha20.Tpo crypto/$(DEPDIR)/crypto_libvds_crypto_a-chacha20.Po
#	$(AM_V_CXX)source='crypto/chacha20.cpp' object='crypto/crypto_libvds_crypto_a-chacha20.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libvds_crypto_a-chacha20.obj `if test -f 'crypto/chacha20.cpp'; then $(CYGPATH_W) 'crypto/chacha20.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/chacha20.cpp'; fi`

crypto/crypto_libvds_crypto_a-equihash.o: crypto/equihash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libvds_crypto_a-equihash.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libvds_crypto_a-equihash.Tpo -c -o crypto/crypto_libvds_crypto_a-equihash.o `test -f 'crypto/equihash.cpp' || echo '$(srcdir)/'`crypto/equihash.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libvds_crypto_a-equihash.Tpo crypto/$(DEPDIR)/crypto_libvds_crypto_a-equihash.Po
#	$(AM_V_CXX)source='crypto/equihash.cpp' object='crypto/crypto_libvds_crypto_a-equihash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libvds_crypto_a-equihash.o `test -f 'crypto/equihash.cpp' || echo '$(srcdir)/'`crypto/equihash.cpp

crypto/crypto_libvds_crypto_a-equihash.obj: crypto/equihash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libvds_crypto_a-equihash.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libvds_crypto_a-equihash.Tpo -c -o crypto/crypto_libvds_crypto_a-equihash.obj `if test -f 'crypto/equihash.cpp'; then $(CYGPATH_W) 'crypto/equihash.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/equihash.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libvds_crypto_a-equihash.Tpo crypto/$(DEPDIR)/crypto_libvds_crypto_a-equihash.Po
#	$(AM_V_CXX)source='crypto/equihash.cpp' object='crypto/crypto_libvds_crypto_a-equihash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libvds_crypto_a-equihash.obj `if test -f 'crypto/equihash.cpp'; then $(CYGPATH_W) 'crypto/equihash.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/equihash.cpp'; fi`

crypto/crypto_libvds_crypto_a-hmac_sha256.o: crypto/hmac_sha256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libvds_crypto_a-hmac_sha256.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libvds_crypto_a-hmac_sha256.Tpo -c -o crypto/crypto_libvds_crypto_a-hmac_sha256.o `test -f 'crypto/hmac_sha256.cpp' || echo '$(srcdir)/'`crypto/hmac_sha256.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libvds_crypto_a-hmac_sha256.Tpo crypto/$(DEPDIR)/crypto_libvds_crypto_a-hmac_sha256.Po
#	$(AM_V_CXX)source='crypto/hmac_sha256.cpp' object='crypto/crypto_libvds_crypto_a-hmac_sha256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libvds_crypto_a-hmac_sha256.o `test -f 'crypto/hmac_sha256.cpp' || echo '$(srcdir)/'`crypto/hmac_sha256.cpp

crypto/crypto_libvds_crypto_a-hmac_sha256.obj: crypto/hmac_sha256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libvds_crypto_a-hmac_sha256.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libvds_crypto_a-hmac_sha256.Tpo -c -o crypto/crypto_libvds_crypto_a-hmac_sha256.obj `if test -f 'crypto/hmac_sha256.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha256.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libvds_crypto_a-hmac_sha256.Tpo crypto/$(DEPDIR)/crypto_libvds_crypto_a-hmac_sha256.Po
#	$(AM_V_CXX)source='crypto/hmac_sha256.cpp' object='crypto/crypto_libvds_crypto_a-hmac_sha256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libvds_crypto_a-hmac_sha256.obj `if test -f 'crypto/hmac_sha256.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha256.cpp'; fi`

crypto/crypto_libvds_crypto_a-hmac_sha512.o: crypto/hmac_sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libvds_crypto_a-hmac_sha512.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libvds_crypto_a-hmac_sha512.Tpo -c -o crypto/crypto_libvds_crypto_a-hmac_sha512.o `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libvds_crypto_a-hmac_sha512.Tpo crypto/$(DEPDIR)/crypto_libvds_crypto_a-hmac_sha512.Po
#	$(AM_V_CXX)source='crypto/hmac_sha512.cpp' object='crypto/crypto_libvds_crypto_a-hmac_sha512.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libvds_crypto_a-hmac_sha512.o `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp

crypto/crypto_libvds_crypto_a-hmac_sha512.obj: crypto/hmac_sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libvds_crypto_a-hmac_sha512.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libvds_crypto_a-hmac_sha512.Tpo -c -o crypto/crypto_libvds_crypto_a-hmac_sha512.obj `if test -f 'crypto/hmac_sha512.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha512.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libvds_crypto_a-hmac_sha512.Tpo crypto/$(DEPDIR)/crypto_libvds_crypto_a-hmac_sha512.Po
#	$(AM_V_CXX)source='crypto/hmac_sha512.cpp' object='crypto/crypto_libvds_crypto_a-hmac_sha512.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libvds_crypto_a-hmac_sha512.obj `if test -f 'crypto/hmac_sha512.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha512.cpp'; fi`

crypto/crypto_libvds_crypto_a-scrypt.o: crypto/scrypt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libvds_crypto_a-scrypt.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libvds_crypto_a-scrypt.Tpo -c -o crypto/crypto_libvds_crypto_a-scrypt.o `test -f 'crypto/scrypt.cpp' || echo '$(srcdir)/'`crypto/scrypt.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libvds_crypto_a-scrypt.Tpo crypto/$(DEPDIR)/crypto_libvds_crypto_a-scrypt.Po
#	$(AM_V_CXX)source='crypto/scrypt.cpp' object='crypto/crypto_libvds_crypto_a-scrypt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libvds_crypto_a-scrypt.o `test -f 'crypto/scrypt.cpp' || echo '$(srcdir)/'`crypto/scrypt.cpp

crypto/crypto_libvds_crypto_a-scrypt.obj: crypto/scrypt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libvds_crypto_a-scrypt.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libvds_crypto_a-scrypt.Tpo -c -o crypto/crypto_libvds_crypto_a-scrypt.obj `if test -f 'crypto/scrypt.cpp'; then $(CYGPATH_W) 'crypto/scrypt.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/scrypt.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libvds_crypto_a-scrypt.Tpo crypto/$(DEPDIR)/crypto_libvds_crypto_a-scrypt.Po
#	$(AM_V_CXX)source='crypto/scrypt.cpp' object='crypto/crypto_libvds_crypto_a-scrypt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libvds_crypto_a-scrypt.obj `if test -f 'crypto/scrypt.cpp'; then $(CYGPATH_W) 'crypto/scrypt.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/scrypt.cpp'; fi`

crypto/crypto_libvds_crypto_a-ripemd160.o: crypto/ripemd160.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libvds_crypto_a-ripemd160.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libvds_crypto_a-ripemd160.Tpo -c -o crypto/crypto_libvds_crypto_a-ripemd160.o `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libvds_crypto_a-ripemd160.Tpo crypto/$(DEPDIR)/crypto_libvds_crypto_a-ripemd160.Po
#	$(AM_V_CXX)source='crypto/ripemd160.cpp' object='crypto/crypto_libvds_crypto_a-ripemd160.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libvds_crypto_a-ripemd160.o `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp

crypto/crypto_libvds_crypto_a-ripemd160.obj: crypto/ripemd160.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libvds_crypto_a-ripemd160.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libvds_crypto_a-ripemd160.Tpo -c -o crypto/crypto_libvds_crypto_a-ripemd160.obj `if test -f 'crypto/ripemd160.cpp'; then $(CYGPATH_W) 'crypto/ripemd160.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/ripemd160.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libvds_crypto_a-ripemd160.Tpo crypto/$(DEPDIR)/crypto_libvds_crypto_a-ripemd160.Po
#	$(AM_V_CXX)source='crypto/ripemd160.cpp' object='crypto/crypto_libvds_crypto_a-ripemd160.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libvds_crypto_a-ripemd160.obj `if test -f 'crypto/ripemd160.cpp'; then $(CYGPATH_W) 'crypto/ripemd160.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/ripemd160.cpp'; fi`

crypto/crypto_libvds_crypto_a-sha1.o: crypto/sha1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libvds_crypto_a-sha1.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha1.Tpo -c -o crypto/crypto_libvds_crypto_a-sha1.o `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha1.Tpo crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha1.Po
#	$(AM_V_CXX)source='crypto/sha1.cpp' object='crypto/crypto_libvds_crypto_a-sha1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libvds_crypto_a-sha1.o `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp

crypto/crypto_libvds_crypto_a-sha1.obj: crypto/sha1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libvds_crypto_a-sha1.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha1.Tpo -c -o crypto/crypto_libvds_crypto_a-sha1.obj `if test -f 'crypto/sha1.cpp'; then $(CYGPATH_W) 'crypto/sha1.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha1.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha1.Tpo crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha1.Po
#	$(AM_V_CXX)source='crypto/sha1.cpp' object='crypto/crypto_libvds_crypto_a-sha1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libvds_crypto_a-sha1.obj `if test -f 'crypto/sha1.cpp'; then $(CYGPATH_W) 'crypto/sha1.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha1.cpp'; fi`

crypto/crypto_libvds_crypto_a-sha256.o: crypto/sha256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libvds_crypto_a-sha256.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha256.Tpo -c -o crypto/crypto_libvds_crypto_a-sha256.o `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha256.Tpo crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha256.Po
#	$(AM_V_CXX)source='crypto/sha256.cpp' object='crypto/crypto_libvds_crypto_a-sha256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libvds_crypto_a-sha256.o `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp

crypto/crypto_libvds_crypto_a-sha256.obj: crypto/sha256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libvds_crypto_a-sha256.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha256.Tpo -c -o crypto/crypto_libvds_crypto_a-sha256.obj `if test -f 'crypto/sha256.cpp'; then $(CYGPATH_W) 'crypto/sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha256.Tpo crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha256.Po
#	$(AM_V_CXX)source='crypto/sha256.cpp' object='crypto/crypto_libvds_crypto_a-sha256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libvds_crypto_a-sha256.obj `if test -f 'crypto/sha256.cpp'; then $(CYGPATH_W) 'crypto/sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256.cpp'; fi`

crypto/crypto_libvds_crypto_a-sha512.o: crypto/sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libvds_crypto_a-sha512.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha512.Tpo -c -o crypto/crypto_libvds_crypto_a-sha512.o `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha512.Tpo crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha512.Po
#	$(AM_V_CXX)source='crypto/sha512.cpp' object='crypto/crypto_libvds_crypto_a-sha512.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libvds_crypto_a-sha512.o `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp

crypto/crypto_libvds_crypto_a-sha512.obj: crypto/sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libvds_crypto_a-sha512.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha512.Tpo -c -o crypto/crypto_libvds_crypto_a-sha512.obj `if test -f 'crypto/sha512.cpp'; then $(CYGPATH_W) 'crypto/sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha512.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha512.Tpo crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha512.Po
#	$(AM_V_CXX)source='crypto/sha512.cpp' object='crypto/crypto_libvds_crypto_a-sha512.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libvds_crypto_a-sha512.obj `if test -f 'crypto/sha512.cpp'; then $(CYGPATH_W) 'crypto/sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha512.cpp'; fi`

support/crypto_libvds_crypto_a-cleanse.o: support/cleanse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT support/crypto_libvds_crypto_a-cleanse.o -MD -MP -MF support/$(DEPDIR)/crypto_libvds_crypto_a-cleanse.Tpo -c -o support/crypto_libvds_crypto_a-cleanse.o `test -f 'support/cleanse.cpp' || echo '$(srcdir)/'`support/cleanse.cpp
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/crypto_libvds_crypto_a-cleanse.Tpo support/$(DEPDIR)/crypto_libvds_crypto_a-cleanse.Po
#	$(AM_V_CXX)source='support/cleanse.cpp' object='support/crypto_libvds_crypto_a-cleanse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o support/crypto_libvds_crypto_a-cleanse.o `test -f 'support/cleanse.cpp' || echo '$(srcdir)/'`support/cleanse.cpp

support/crypto_libvds_crypto_a-cleanse.obj: support/cleanse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT support/crypto_libvds_crypto_a-cleanse.obj -MD -MP -MF support/$(DEPDIR)/crypto_libvds_crypto_a-cleanse.Tpo -c -o support/crypto_libvds_crypto_a-cleanse.obj `if test -f 'support/cleanse.cpp'; then $(CYGPATH_W) 'support/cleanse.cpp'; else $(CYGPATH_W) '$(srcdir)/support/cleanse.cpp'; fi`
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/crypto_libvds_crypto_a-cleanse.Tpo support/$(DEPDIR)/crypto_libvds_crypto_a-cleanse.Po
#	$(AM_V_CXX)source='support/cleanse.cpp' object='support/crypto_libvds_crypto_a-cleanse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o support/crypto_libvds_crypto_a-cleanse.obj `if test -f 'support/cleanse.cpp'; then $(CYGPATH_W) 'support/cleanse.cpp'; else $(CYGPATH_W) '$(srcdir)/support/cleanse.cpp'; fi`

crypto/crypto_libvds_crypto_a-sha256_sse4.o: crypto/sha256_sse4.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libvds_crypto_a-sha256_sse4.o -MD -MP -MF crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha256_sse4.Tpo -c -o crypto/crypto_libvds_crypto_a-sha256_sse4.o `test -f 'crypto/sha256_sse4.cpp' || echo '$(srcdir)/'`crypto/sha256_sse4.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha256_sse4.Tpo crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha256_sse4.Po
#	$(AM_V_CXX)source='crypto/sha256_sse4.cpp' object='crypto/crypto_libvds_crypto_a-sha256_sse4.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libvds_crypto_a-sha256_sse4.o `test -f 'crypto/sha256_sse4.cpp' || echo '$(srcdir)/'`crypto/sha256_sse4.cpp

crypto/crypto_libvds_crypto_a-sha256_sse4.obj: crypto/sha256_sse4.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/crypto_libvds_crypto_a-sha256_sse4.obj -MD -MP -MF crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha256_sse4.Tpo -c -o crypto/crypto_libvds_crypto_a-sha256_sse4.obj `if test -f 'crypto/sha256_sse4.cpp'; then $(CYGPATH_W) 'crypto/sha256_sse4.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256_sse4.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha256_sse4.Tpo crypto/$(DEPDIR)/crypto_libvds_crypto_a-sha256_sse4.Po
#	$(AM_V_CXX)source='crypto/sha256_sse4.cpp' object='crypto/crypto_libvds_crypto_a-sha256_sse4.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(crypto_libvds_crypto_a_CPPFLAGS) $(CPPFLAGS) $(crypto_libvds_crypto_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/crypto_libvds_crypto_a-sha256_sse4.obj `if test -f 'crypto/sha256_sse4.cpp'; then $(CYGPATH_W) 'crypto/sha256_sse4.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256_sse4.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-cryptlib.o: cryptopp/cryptlib.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-cryptlib.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-cryptlib.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-cryptlib.o `test -f 'cryptopp/cryptlib.cpp' || echo '$(srcdir)/'`cryptopp/cryptlib.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-cryptlib.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-cryptlib.Po
#	$(AM_V_CXX)source='cryptopp/cryptlib.cpp' object='cryptopp/cryptopp_libcryptopp_a-cryptlib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-cryptlib.o `test -f 'cryptopp/cryptlib.cpp' || echo '$(srcdir)/'`cryptopp/cryptlib.cpp

cryptopp/cryptopp_libcryptopp_a-cryptlib.obj: cryptopp/cryptlib.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-cryptlib.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-cryptlib.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-cryptlib.obj `if test -f 'cryptopp/cryptlib.cpp'; then $(CYGPATH_W) 'cryptopp/cryptlib.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/cryptlib.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-cryptlib.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-cryptlib.Po
#	$(AM_V_CXX)source='cryptopp/cryptlib.cpp' object='cryptopp/cryptopp_libcryptopp_a-cryptlib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-cryptlib.obj `if test -f 'cryptopp/cryptlib.cpp'; then $(CYGPATH_W) 'cryptopp/cryptlib.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/cryptlib.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-cpu.o: cryptopp/cpu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-cpu.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-cpu.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-cpu.o `test -f 'cryptopp/cpu.cpp' || echo '$(srcdir)/'`cryptopp/cpu.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-cpu.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-cpu.Po
#	$(AM_V_CXX)source='cryptopp/cpu.cpp' object='cryptopp/cryptopp_libcryptopp_a-cpu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-cpu.o `test -f 'cryptopp/cpu.cpp' || echo '$(srcdir)/'`cryptopp/cpu.cpp

cryptopp/cryptopp_libcryptopp_a-cpu.obj: cryptopp/cpu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-cpu.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-cpu.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-cpu.obj `if test -f 'cryptopp/cpu.cpp'; then $(CYGPATH_W) 'cryptopp/cpu.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/cpu.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-cpu.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-cpu.Po
#	$(AM_V_CXX)source='cryptopp/cpu.cpp' object='cryptopp/cryptopp_libcryptopp_a-cpu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-cpu.obj `if test -f 'cryptopp/cpu.cpp'; then $(CYGPATH_W) 'cryptopp/cpu.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/cpu.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-integer.o: cryptopp/integer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-integer.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-integer.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-integer.o `test -f 'cryptopp/integer.cpp' || echo '$(srcdir)/'`cryptopp/integer.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-integer.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-integer.Po
#	$(AM_V_CXX)source='cryptopp/integer.cpp' object='cryptopp/cryptopp_libcryptopp_a-integer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-integer.o `test -f 'cryptopp/integer.cpp' || echo '$(srcdir)/'`cryptopp/integer.cpp

cryptopp/cryptopp_libcryptopp_a-integer.obj: cryptopp/integer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-integer.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-integer.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-integer.obj `if test -f 'cryptopp/integer.cpp'; then $(CYGPATH_W) 'cryptopp/integer.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/integer.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-integer.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-integer.Po
#	$(AM_V_CXX)source='cryptopp/integer.cpp' object='cryptopp/cryptopp_libcryptopp_a-integer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-integer.obj `if test -f 'cryptopp/integer.cpp'; then $(CYGPATH_W) 'cryptopp/integer.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/integer.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-algebra.o: cryptopp/algebra.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-algebra.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-algebra.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-algebra.o `test -f 'cryptopp/algebra.cpp' || echo '$(srcdir)/'`cryptopp/algebra.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-algebra.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-algebra.Po
#	$(AM_V_CXX)source='cryptopp/algebra.cpp' object='cryptopp/cryptopp_libcryptopp_a-algebra.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-algebra.o `test -f 'cryptopp/algebra.cpp' || echo '$(srcdir)/'`cryptopp/algebra.cpp

cryptopp/cryptopp_libcryptopp_a-algebra.obj: cryptopp/algebra.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-algebra.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-algebra.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-algebra.obj `if test -f 'cryptopp/algebra.cpp'; then $(CYGPATH_W) 'cryptopp/algebra.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/algebra.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-algebra.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-algebra.Po
#	$(AM_V_CXX)source='cryptopp/algebra.cpp' object='cryptopp/cryptopp_libcryptopp_a-algebra.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-algebra.obj `if test -f 'cryptopp/algebra.cpp'; then $(CYGPATH_W) 'cryptopp/algebra.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/algebra.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-algparam.o: cryptopp/algparam.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-algparam.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-algparam.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-algparam.o `test -f 'cryptopp/algparam.cpp' || echo '$(srcdir)/'`cryptopp/algparam.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-algparam.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-algparam.Po
#	$(AM_V_CXX)source='cryptopp/algparam.cpp' object='cryptopp/cryptopp_libcryptopp_a-algparam.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-algparam.o `test -f 'cryptopp/algparam.cpp' || echo '$(srcdir)/'`cryptopp/algparam.cpp

cryptopp/cryptopp_libcryptopp_a-algparam.obj: cryptopp/algparam.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-algparam.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-algparam.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-algparam.obj `if test -f 'cryptopp/algparam.cpp'; then $(CYGPATH_W) 'cryptopp/algparam.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/algparam.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-algparam.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-algparam.Po
#	$(AM_V_CXX)source='cryptopp/algparam.cpp' object='cryptopp/cryptopp_libcryptopp_a-algparam.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-algparam.obj `if test -f 'cryptopp/algparam.cpp'; then $(CYGPATH_W) 'cryptopp/algparam.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/algparam.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-asn.o: cryptopp/asn.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-asn.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-asn.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-asn.o `test -f 'cryptopp/asn.cpp' || echo '$(srcdir)/'`cryptopp/asn.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-asn.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-asn.Po
#	$(AM_V_CXX)source='cryptopp/asn.cpp' object='cryptopp/cryptopp_libcryptopp_a-asn.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-asn.o `test -f 'cryptopp/asn.cpp' || echo '$(srcdir)/'`cryptopp/asn.cpp

cryptopp/cryptopp_libcryptopp_a-asn.obj: cryptopp/asn.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-asn.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-asn.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-asn.obj `if test -f 'cryptopp/asn.cpp'; then $(CYGPATH_W) 'cryptopp/asn.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/asn.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-asn.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-asn.Po
#	$(AM_V_CXX)source='cryptopp/asn.cpp' object='cryptopp/cryptopp_libcryptopp_a-asn.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-asn.obj `if test -f 'cryptopp/asn.cpp'; then $(CYGPATH_W) 'cryptopp/asn.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/asn.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-basecode.o: cryptopp/basecode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-basecode.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-basecode.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-basecode.o `test -f 'cryptopp/basecode.cpp' || echo '$(srcdir)/'`cryptopp/basecode.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-basecode.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-basecode.Po
#	$(AM_V_CXX)source='cryptopp/basecode.cpp' object='cryptopp/cryptopp_libcryptopp_a-basecode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-basecode.o `test -f 'cryptopp/basecode.cpp' || echo '$(srcdir)/'`cryptopp/basecode.cpp

cryptopp/cryptopp_libcryptopp_a-basecode.obj: cryptopp/basecode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-basecode.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-basecode.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-basecode.obj `if test -f 'cryptopp/basecode.cpp'; then $(CYGPATH_W) 'cryptopp/basecode.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/basecode.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-basecode.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-basecode.Po
#	$(AM_V_CXX)source='cryptopp/basecode.cpp' object='cryptopp/cryptopp_libcryptopp_a-basecode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-basecode.obj `if test -f 'cryptopp/basecode.cpp'; then $(CYGPATH_W) 'cryptopp/basecode.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/basecode.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-dsa.o: cryptopp/dsa.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-dsa.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-dsa.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-dsa.o `test -f 'cryptopp/dsa.cpp' || echo '$(srcdir)/'`cryptopp/dsa.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-dsa.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-dsa.Po
#	$(AM_V_CXX)source='cryptopp/dsa.cpp' object='cryptopp/cryptopp_libcryptopp_a-dsa.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-dsa.o `test -f 'cryptopp/dsa.cpp' || echo '$(srcdir)/'`cryptopp/dsa.cpp

cryptopp/cryptopp_libcryptopp_a-dsa.obj: cryptopp/dsa.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-dsa.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-dsa.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-dsa.obj `if test -f 'cryptopp/dsa.cpp'; then $(CYGPATH_W) 'cryptopp/dsa.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/dsa.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-dsa.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-dsa.Po
#	$(AM_V_CXX)source='cryptopp/dsa.cpp' object='cryptopp/cryptopp_libcryptopp_a-dsa.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-dsa.obj `if test -f 'cryptopp/dsa.cpp'; then $(CYGPATH_W) 'cryptopp/dsa.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/dsa.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-des.o: cryptopp/des.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-des.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-des.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-des.o `test -f 'cryptopp/des.cpp' || echo '$(srcdir)/'`cryptopp/des.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-des.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-des.Po
#	$(AM_V_CXX)source='cryptopp/des.cpp' object='cryptopp/cryptopp_libcryptopp_a-des.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-des.o `test -f 'cryptopp/des.cpp' || echo '$(srcdir)/'`cryptopp/des.cpp

cryptopp/cryptopp_libcryptopp_a-des.obj: cryptopp/des.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-des.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-des.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-des.obj `if test -f 'cryptopp/des.cpp'; then $(CYGPATH_W) 'cryptopp/des.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/des.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-des.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-des.Po
#	$(AM_V_CXX)source='cryptopp/des.cpp' object='cryptopp/cryptopp_libcryptopp_a-des.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-des.obj `if test -f 'cryptopp/des.cpp'; then $(CYGPATH_W) 'cryptopp/des.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/des.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-dessp.o: cryptopp/dessp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-dessp.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-dessp.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-dessp.o `test -f 'cryptopp/dessp.cpp' || echo '$(srcdir)/'`cryptopp/dessp.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-dessp.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-dessp.Po
#	$(AM_V_CXX)source='cryptopp/dessp.cpp' object='cryptopp/cryptopp_libcryptopp_a-dessp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-dessp.o `test -f 'cryptopp/dessp.cpp' || echo '$(srcdir)/'`cryptopp/dessp.cpp

cryptopp/cryptopp_libcryptopp_a-dessp.obj: cryptopp/dessp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-dessp.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-dessp.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-dessp.obj `if test -f 'cryptopp/dessp.cpp'; then $(CYGPATH_W) 'cryptopp/dessp.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/dessp.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-dessp.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-dessp.Po
#	$(AM_V_CXX)source='cryptopp/dessp.cpp' object='cryptopp/cryptopp_libcryptopp_a-dessp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-dessp.obj `if test -f 'cryptopp/dessp.cpp'; then $(CYGPATH_W) 'cryptopp/dessp.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/dessp.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-dll.o: cryptopp/dll.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-dll.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-dll.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-dll.o `test -f 'cryptopp/dll.cpp' || echo '$(srcdir)/'`cryptopp/dll.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-dll.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-dll.Po
#	$(AM_V_CXX)source='cryptopp/dll.cpp' object='cryptopp/cryptopp_libcryptopp_a-dll.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-dll.o `test -f 'cryptopp/dll.cpp' || echo '$(srcdir)/'`cryptopp/dll.cpp

cryptopp/cryptopp_libcryptopp_a-dll.obj: cryptopp/dll.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-dll.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-dll.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-dll.obj `if test -f 'cryptopp/dll.cpp'; then $(CYGPATH_W) 'cryptopp/dll.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/dll.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-dll.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-dll.Po
#	$(AM_V_CXX)source='cryptopp/dll.cpp' object='cryptopp/cryptopp_libcryptopp_a-dll.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-dll.obj `if test -f 'cryptopp/dll.cpp'; then $(CYGPATH_W) 'cryptopp/dll.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/dll.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-ec2n.o: cryptopp/ec2n.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-ec2n.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-ec2n.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-ec2n.o `test -f 'cryptopp/ec2n.cpp' || echo '$(srcdir)/'`cryptopp/ec2n.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-ec2n.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-ec2n.Po
#	$(AM_V_CXX)source='cryptopp/ec2n.cpp' object='cryptopp/cryptopp_libcryptopp_a-ec2n.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-ec2n.o `test -f 'cryptopp/ec2n.cpp' || echo '$(srcdir)/'`cryptopp/ec2n.cpp

cryptopp/cryptopp_libcryptopp_a-ec2n.obj: cryptopp/ec2n.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-ec2n.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-ec2n.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-ec2n.obj `if test -f 'cryptopp/ec2n.cpp'; then $(CYGPATH_W) 'cryptopp/ec2n.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/ec2n.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-ec2n.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-ec2n.Po
#	$(AM_V_CXX)source='cryptopp/ec2n.cpp' object='cryptopp/cryptopp_libcryptopp_a-ec2n.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-ec2n.obj `if test -f 'cryptopp/ec2n.cpp'; then $(CYGPATH_W) 'cryptopp/ec2n.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/ec2n.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-eccrypto.o: cryptopp/eccrypto.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-eccrypto.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-eccrypto.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-eccrypto.o `test -f 'cryptopp/eccrypto.cpp' || echo '$(srcdir)/'`cryptopp/eccrypto.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-eccrypto.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-eccrypto.Po
#	$(AM_V_CXX)source='cryptopp/eccrypto.cpp' object='cryptopp/cryptopp_libcryptopp_a-eccrypto.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-eccrypto.o `test -f 'cryptopp/eccrypto.cpp' || echo '$(srcdir)/'`cryptopp/eccrypto.cpp

cryptopp/cryptopp_libcryptopp_a-eccrypto.obj: cryptopp/eccrypto.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-eccrypto.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-eccrypto.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-eccrypto.obj `if test -f 'cryptopp/eccrypto.cpp'; then $(CYGPATH_W) 'cryptopp/eccrypto.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/eccrypto.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-eccrypto.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-eccrypto.Po
#	$(AM_V_CXX)source='cryptopp/eccrypto.cpp' object='cryptopp/cryptopp_libcryptopp_a-eccrypto.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-eccrypto.obj `if test -f 'cryptopp/eccrypto.cpp'; then $(CYGPATH_W) 'cryptopp/eccrypto.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/eccrypto.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-ecp.o: cryptopp/ecp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-ecp.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-ecp.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-ecp.o `test -f 'cryptopp/ecp.cpp' || echo '$(srcdir)/'`cryptopp/ecp.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-ecp.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-ecp.Po
#	$(AM_V_CXX)source='cryptopp/ecp.cpp' object='cryptopp/cryptopp_libcryptopp_a-ecp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-ecp.o `test -f 'cryptopp/ecp.cpp' || echo '$(srcdir)/'`cryptopp/ecp.cpp

cryptopp/cryptopp_libcryptopp_a-ecp.obj: cryptopp/ecp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-ecp.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-ecp.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-ecp.obj `if test -f 'cryptopp/ecp.cpp'; then $(CYGPATH_W) 'cryptopp/ecp.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/ecp.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-ecp.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-ecp.Po
#	$(AM_V_CXX)source='cryptopp/ecp.cpp' object='cryptopp/cryptopp_libcryptopp_a-ecp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-ecp.obj `if test -f 'cryptopp/ecp.cpp'; then $(CYGPATH_W) 'cryptopp/ecp.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/ecp.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-eprecomp.o: cryptopp/eprecomp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-eprecomp.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-eprecomp.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-eprecomp.o `test -f 'cryptopp/eprecomp.cpp' || echo '$(srcdir)/'`cryptopp/eprecomp.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-eprecomp.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-eprecomp.Po
#	$(AM_V_CXX)source='cryptopp/eprecomp.cpp' object='cryptopp/cryptopp_libcryptopp_a-eprecomp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-eprecomp.o `test -f 'cryptopp/eprecomp.cpp' || echo '$(srcdir)/'`cryptopp/eprecomp.cpp

cryptopp/cryptopp_libcryptopp_a-eprecomp.obj: cryptopp/eprecomp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-eprecomp.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-eprecomp.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-eprecomp.obj `if test -f 'cryptopp/eprecomp.cpp'; then $(CYGPATH_W) 'cryptopp/eprecomp.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/eprecomp.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-eprecomp.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-eprecomp.Po
#	$(AM_V_CXX)source='cryptopp/eprecomp.cpp' object='cryptopp/cryptopp_libcryptopp_a-eprecomp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-eprecomp.obj `if test -f 'cryptopp/eprecomp.cpp'; then $(CYGPATH_W) 'cryptopp/eprecomp.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/eprecomp.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-filters.o: cryptopp/filters.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-filters.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-filters.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-filters.o `test -f 'cryptopp/filters.cpp' || echo '$(srcdir)/'`cryptopp/filters.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-filters.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-filters.Po
#	$(AM_V_CXX)source='cryptopp/filters.cpp' object='cryptopp/cryptopp_libcryptopp_a-filters.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-filters.o `test -f 'cryptopp/filters.cpp' || echo '$(srcdir)/'`cryptopp/filters.cpp

cryptopp/cryptopp_libcryptopp_a-filters.obj: cryptopp/filters.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-filters.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-filters.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-filters.obj `if test -f 'cryptopp/filters.cpp'; then $(CYGPATH_W) 'cryptopp/filters.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/filters.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-filters.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-filters.Po
#	$(AM_V_CXX)source='cryptopp/filters.cpp' object='cryptopp/cryptopp_libcryptopp_a-filters.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-filters.obj `if test -f 'cryptopp/filters.cpp'; then $(CYGPATH_W) 'cryptopp/filters.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/filters.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-fips140.o: cryptopp/fips140.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-fips140.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-fips140.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-fips140.o `test -f 'cryptopp/fips140.cpp' || echo '$(srcdir)/'`cryptopp/fips140.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-fips140.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-fips140.Po
#	$(AM_V_CXX)source='cryptopp/fips140.cpp' object='cryptopp/cryptopp_libcryptopp_a-fips140.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-fips140.o `test -f 'cryptopp/fips140.cpp' || echo '$(srcdir)/'`cryptopp/fips140.cpp

cryptopp/cryptopp_libcryptopp_a-fips140.obj: cryptopp/fips140.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-fips140.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-fips140.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-fips140.obj `if test -f 'cryptopp/fips140.cpp'; then $(CYGPATH_W) 'cryptopp/fips140.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/fips140.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-fips140.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-fips140.Po
#	$(AM_V_CXX)source='cryptopp/fips140.cpp' object='cryptopp/cryptopp_libcryptopp_a-fips140.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-fips140.obj `if test -f 'cryptopp/fips140.cpp'; then $(CYGPATH_W) 'cryptopp/fips140.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/fips140.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-gf2n.o: cryptopp/gf2n.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-gf2n.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-gf2n.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-gf2n.o `test -f 'cryptopp/gf2n.cpp' || echo '$(srcdir)/'`cryptopp/gf2n.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-gf2n.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-gf2n.Po
#	$(AM_V_CXX)source='cryptopp/gf2n.cpp' object='cryptopp/cryptopp_libcryptopp_a-gf2n.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-gf2n.o `test -f 'cryptopp/gf2n.cpp' || echo '$(srcdir)/'`cryptopp/gf2n.cpp

cryptopp/cryptopp_libcryptopp_a-gf2n.obj: cryptopp/gf2n.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-gf2n.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-gf2n.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-gf2n.obj `if test -f 'cryptopp/gf2n.cpp'; then $(CYGPATH_W) 'cryptopp/gf2n.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/gf2n.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-gf2n.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-gf2n.Po
#	$(AM_V_CXX)source='cryptopp/gf2n.cpp' object='cryptopp/cryptopp_libcryptopp_a-gf2n.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-gf2n.obj `if test -f 'cryptopp/gf2n.cpp'; then $(CYGPATH_W) 'cryptopp/gf2n.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/gf2n.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-gfpcrypt.o: cryptopp/gfpcrypt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-gfpcrypt.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-gfpcrypt.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-gfpcrypt.o `test -f 'cryptopp/gfpcrypt.cpp' || echo '$(srcdir)/'`cryptopp/gfpcrypt.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-gfpcrypt.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-gfpcrypt.Po
#	$(AM_V_CXX)source='cryptopp/gfpcrypt.cpp' object='cryptopp/cryptopp_libcryptopp_a-gfpcrypt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-gfpcrypt.o `test -f 'cryptopp/gfpcrypt.cpp' || echo '$(srcdir)/'`cryptopp/gfpcrypt.cpp

cryptopp/cryptopp_libcryptopp_a-gfpcrypt.obj: cryptopp/gfpcrypt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-gfpcrypt.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-gfpcrypt.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-gfpcrypt.obj `if test -f 'cryptopp/gfpcrypt.cpp'; then $(CYGPATH_W) 'cryptopp/gfpcrypt.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/gfpcrypt.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-gfpcrypt.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-gfpcrypt.Po
#	$(AM_V_CXX)source='cryptopp/gfpcrypt.cpp' object='cryptopp/cryptopp_libcryptopp_a-gfpcrypt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-gfpcrypt.obj `if test -f 'cryptopp/gfpcrypt.cpp'; then $(CYGPATH_W) 'cryptopp/gfpcrypt.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/gfpcrypt.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-hex.o: cryptopp/hex.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-hex.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-hex.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-hex.o `test -f 'cryptopp/hex.cpp' || echo '$(srcdir)/'`cryptopp/hex.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-hex.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-hex.Po
#	$(AM_V_CXX)source='cryptopp/hex.cpp' object='cryptopp/cryptopp_libcryptopp_a-hex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-hex.o `test -f 'cryptopp/hex.cpp' || echo '$(srcdir)/'`cryptopp/hex.cpp

cryptopp/cryptopp_libcryptopp_a-hex.obj: cryptopp/hex.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-hex.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-hex.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-hex.obj `if test -f 'cryptopp/hex.cpp'; then $(CYGPATH_W) 'cryptopp/hex.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/hex.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-hex.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-hex.Po
#	$(AM_V_CXX)source='cryptopp/hex.cpp' object='cryptopp/cryptopp_libcryptopp_a-hex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-hex.obj `if test -f 'cryptopp/hex.cpp'; then $(CYGPATH_W) 'cryptopp/hex.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/hex.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-hmac.o: cryptopp/hmac.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-hmac.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-hmac.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-hmac.o `test -f 'cryptopp/hmac.cpp' || echo '$(srcdir)/'`cryptopp/hmac.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-hmac.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-hmac.Po
#	$(AM_V_CXX)source='cryptopp/hmac.cpp' object='cryptopp/cryptopp_libcryptopp_a-hmac.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-hmac.o `test -f 'cryptopp/hmac.cpp' || echo '$(srcdir)/'`cryptopp/hmac.cpp

cryptopp/cryptopp_libcryptopp_a-hmac.obj: cryptopp/hmac.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-hmac.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-hmac.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-hmac.obj `if test -f 'cryptopp/hmac.cpp'; then $(CYGPATH_W) 'cryptopp/hmac.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/hmac.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-hmac.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-hmac.Po
#	$(AM_V_CXX)source='cryptopp/hmac.cpp' object='cryptopp/cryptopp_libcryptopp_a-hmac.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-hmac.obj `if test -f 'cryptopp/hmac.cpp'; then $(CYGPATH_W) 'cryptopp/hmac.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/hmac.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-hrtimer.o: cryptopp/hrtimer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-hrtimer.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-hrtimer.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-hrtimer.o `test -f 'cryptopp/hrtimer.cpp' || echo '$(srcdir)/'`cryptopp/hrtimer.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-hrtimer.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-hrtimer.Po
#	$(AM_V_CXX)source='cryptopp/hrtimer.cpp' object='cryptopp/cryptopp_libcryptopp_a-hrtimer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-hrtimer.o `test -f 'cryptopp/hrtimer.cpp' || echo '$(srcdir)/'`cryptopp/hrtimer.cpp

cryptopp/cryptopp_libcryptopp_a-hrtimer.obj: cryptopp/hrtimer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-hrtimer.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-hrtimer.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-hrtimer.obj `if test -f 'cryptopp/hrtimer.cpp'; then $(CYGPATH_W) 'cryptopp/hrtimer.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/hrtimer.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-hrtimer.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-hrtimer.Po
#	$(AM_V_CXX)source='cryptopp/hrtimer.cpp' object='cryptopp/cryptopp_libcryptopp_a-hrtimer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-hrtimer.obj `if test -f 'cryptopp/hrtimer.cpp'; then $(CYGPATH_W) 'cryptopp/hrtimer.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/hrtimer.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-iterhash.o: cryptopp/iterhash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-iterhash.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-iterhash.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-iterhash.o `test -f 'cryptopp/iterhash.cpp' || echo '$(srcdir)/'`cryptopp/iterhash.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-iterhash.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-iterhash.Po
#	$(AM_V_CXX)source='cryptopp/iterhash.cpp' object='cryptopp/cryptopp_libcryptopp_a-iterhash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-iterhash.o `test -f 'cryptopp/iterhash.cpp' || echo '$(srcdir)/'`cryptopp/iterhash.cpp

cryptopp/cryptopp_libcryptopp_a-iterhash.obj: cryptopp/iterhash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-iterhash.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-iterhash.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-iterhash.obj `if test -f 'cryptopp/iterhash.cpp'; then $(CYGPATH_W) 'cryptopp/iterhash.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/iterhash.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-iterhash.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-iterhash.Po
#	$(AM_V_CXX)source='cryptopp/iterhash.cpp' object='cryptopp/cryptopp_libcryptopp_a-iterhash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-iterhash.obj `if test -f 'cryptopp/iterhash.cpp'; then $(CYGPATH_W) 'cryptopp/iterhash.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/iterhash.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-keccak.o: cryptopp/keccak.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-keccak.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-keccak.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-keccak.o `test -f 'cryptopp/keccak.cpp' || echo '$(srcdir)/'`cryptopp/keccak.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-keccak.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-keccak.Po
#	$(AM_V_CXX)source='cryptopp/keccak.cpp' object='cryptopp/cryptopp_libcryptopp_a-keccak.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-keccak.o `test -f 'cryptopp/keccak.cpp' || echo '$(srcdir)/'`cryptopp/keccak.cpp

cryptopp/cryptopp_libcryptopp_a-keccak.obj: cryptopp/keccak.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-keccak.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-keccak.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-keccak.obj `if test -f 'cryptopp/keccak.cpp'; then $(CYGPATH_W) 'cryptopp/keccak.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/keccak.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-keccak.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-keccak.Po
#	$(AM_V_CXX)source='cryptopp/keccak.cpp' object='cryptopp/cryptopp_libcryptopp_a-keccak.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-keccak.obj `if test -f 'cryptopp/keccak.cpp'; then $(CYGPATH_W) 'cryptopp/keccak.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/keccak.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-misc.o: cryptopp/misc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-misc.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-misc.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-misc.o `test -f 'cryptopp/misc.cpp' || echo '$(srcdir)/'`cryptopp/misc.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-misc.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-misc.Po
#	$(AM_V_CXX)source='cryptopp/misc.cpp' object='cryptopp/cryptopp_libcryptopp_a-misc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-misc.o `test -f 'cryptopp/misc.cpp' || echo '$(srcdir)/'`cryptopp/misc.cpp

cryptopp/cryptopp_libcryptopp_a-misc.obj: cryptopp/misc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-misc.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-misc.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-misc.obj `if test -f 'cryptopp/misc.cpp'; then $(CYGPATH_W) 'cryptopp/misc.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/misc.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-misc.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-misc.Po
#	$(AM_V_CXX)source='cryptopp/misc.cpp' object='cryptopp/cryptopp_libcryptopp_a-misc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-misc.obj `if test -f 'cryptopp/misc.cpp'; then $(CYGPATH_W) 'cryptopp/misc.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/misc.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-modes.o: cryptopp/modes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-modes.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-modes.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-modes.o `test -f 'cryptopp/modes.cpp' || echo '$(srcdir)/'`cryptopp/modes.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-modes.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-modes.Po
#	$(AM_V_CXX)source='cryptopp/modes.cpp' object='cryptopp/cryptopp_libcryptopp_a-modes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-modes.o `test -f 'cryptopp/modes.cpp' || echo '$(srcdir)/'`cryptopp/modes.cpp

cryptopp/cryptopp_libcryptopp_a-modes.obj: cryptopp/modes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-modes.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-modes.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-modes.obj `if test -f 'cryptopp/modes.cpp'; then $(CYGPATH_W) 'cryptopp/modes.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/modes.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-modes.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-modes.Po
#	$(AM_V_CXX)source='cryptopp/modes.cpp' object='cryptopp/cryptopp_libcryptopp_a-modes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-modes.obj `if test -f 'cryptopp/modes.cpp'; then $(CYGPATH_W) 'cryptopp/modes.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/modes.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-mqueue.o: cryptopp/mqueue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-mqueue.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-mqueue.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-mqueue.o `test -f 'cryptopp/mqueue.cpp' || echo '$(srcdir)/'`cryptopp/mqueue.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-mqueue.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-mqueue.Po
#	$(AM_V_CXX)source='cryptopp/mqueue.cpp' object='cryptopp/cryptopp_libcryptopp_a-mqueue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-mqueue.o `test -f 'cryptopp/mqueue.cpp' || echo '$(srcdir)/'`cryptopp/mqueue.cpp

cryptopp/cryptopp_libcryptopp_a-mqueue.obj: cryptopp/mqueue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-mqueue.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-mqueue.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-mqueue.obj `if test -f 'cryptopp/mqueue.cpp'; then $(CYGPATH_W) 'cryptopp/mqueue.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/mqueue.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-mqueue.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-mqueue.Po
#	$(AM_V_CXX)source='cryptopp/mqueue.cpp' object='cryptopp/cryptopp_libcryptopp_a-mqueue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-mqueue.obj `if test -f 'cryptopp/mqueue.cpp'; then $(CYGPATH_W) 'cryptopp/mqueue.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/mqueue.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-nbtheory.o: cryptopp/nbtheory.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-nbtheory.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-nbtheory.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-nbtheory.o `test -f 'cryptopp/nbtheory.cpp' || echo '$(srcdir)/'`cryptopp/nbtheory.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-nbtheory.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-nbtheory.Po
#	$(AM_V_CXX)source='cryptopp/nbtheory.cpp' object='cryptopp/cryptopp_libcryptopp_a-nbtheory.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-nbtheory.o `test -f 'cryptopp/nbtheory.cpp' || echo '$(srcdir)/'`cryptopp/nbtheory.cpp

cryptopp/cryptopp_libcryptopp_a-nbtheory.obj: cryptopp/nbtheory.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-nbtheory.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-nbtheory.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-nbtheory.obj `if test -f 'cryptopp/nbtheory.cpp'; then $(CYGPATH_W) 'cryptopp/nbtheory.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/nbtheory.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-nbtheory.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-nbtheory.Po
#	$(AM_V_CXX)source='cryptopp/nbtheory.cpp' object='cryptopp/cryptopp_libcryptopp_a-nbtheory.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-nbtheory.obj `if test -f 'cryptopp/nbtheory.cpp'; then $(CYGPATH_W) 'cryptopp/nbtheory.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/nbtheory.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-oaep.o: cryptopp/oaep.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-oaep.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-oaep.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-oaep.o `test -f 'cryptopp/oaep.cpp' || echo '$(srcdir)/'`cryptopp/oaep.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-oaep.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-oaep.Po
#	$(AM_V_CXX)source='cryptopp/oaep.cpp' object='cryptopp/cryptopp_libcryptopp_a-oaep.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-oaep.o `test -f 'cryptopp/oaep.cpp' || echo '$(srcdir)/'`cryptopp/oaep.cpp

cryptopp/cryptopp_libcryptopp_a-oaep.obj: cryptopp/oaep.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-oaep.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-oaep.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-oaep.obj `if test -f 'cryptopp/oaep.cpp'; then $(CYGPATH_W) 'cryptopp/oaep.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/oaep.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-oaep.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-oaep.Po
#	$(AM_V_CXX)source='cryptopp/oaep.cpp' object='cryptopp/cryptopp_libcryptopp_a-oaep.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-oaep.obj `if test -f 'cryptopp/oaep.cpp'; then $(CYGPATH_W) 'cryptopp/oaep.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/oaep.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-osrng.o: cryptopp/osrng.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-osrng.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-osrng.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-osrng.o `test -f 'cryptopp/osrng.cpp' || echo '$(srcdir)/'`cryptopp/osrng.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-osrng.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-osrng.Po
#	$(AM_V_CXX)source='cryptopp/osrng.cpp' object='cryptopp/cryptopp_libcryptopp_a-osrng.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-osrng.o `test -f 'cryptopp/osrng.cpp' || echo '$(srcdir)/'`cryptopp/osrng.cpp

cryptopp/cryptopp_libcryptopp_a-osrng.obj: cryptopp/osrng.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-osrng.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-osrng.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-osrng.obj `if test -f 'cryptopp/osrng.cpp'; then $(CYGPATH_W) 'cryptopp/osrng.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/osrng.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-osrng.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-osrng.Po
#	$(AM_V_CXX)source='cryptopp/osrng.cpp' object='cryptopp/cryptopp_libcryptopp_a-osrng.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-osrng.obj `if test -f 'cryptopp/osrng.cpp'; then $(CYGPATH_W) 'cryptopp/osrng.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/osrng.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-polynomi.o: cryptopp/polynomi.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-polynomi.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-polynomi.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-polynomi.o `test -f 'cryptopp/polynomi.cpp' || echo '$(srcdir)/'`cryptopp/polynomi.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-polynomi.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-polynomi.Po
#	$(AM_V_CXX)source='cryptopp/polynomi.cpp' object='cryptopp/cryptopp_libcryptopp_a-polynomi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-polynomi.o `test -f 'cryptopp/polynomi.cpp' || echo '$(srcdir)/'`cryptopp/polynomi.cpp

cryptopp/cryptopp_libcryptopp_a-polynomi.obj: cryptopp/polynomi.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-polynomi.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-polynomi.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-polynomi.obj `if test -f 'cryptopp/polynomi.cpp'; then $(CYGPATH_W) 'cryptopp/polynomi.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/polynomi.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-polynomi.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-polynomi.Po
#	$(AM_V_CXX)source='cryptopp/polynomi.cpp' object='cryptopp/cryptopp_libcryptopp_a-polynomi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-polynomi.obj `if test -f 'cryptopp/polynomi.cpp'; then $(CYGPATH_W) 'cryptopp/polynomi.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/polynomi.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-pubkey.o: cryptopp/pubkey.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-pubkey.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-pubkey.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-pubkey.o `test -f 'cryptopp/pubkey.cpp' || echo '$(srcdir)/'`cryptopp/pubkey.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-pubkey.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-pubkey.Po
#	$(AM_V_CXX)source='cryptopp/pubkey.cpp' object='cryptopp/cryptopp_libcryptopp_a-pubkey.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-pubkey.o `test -f 'cryptopp/pubkey.cpp' || echo '$(srcdir)/'`cryptopp/pubkey.cpp

cryptopp/cryptopp_libcryptopp_a-pubkey.obj: cryptopp/pubkey.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-pubkey.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-pubkey.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-pubkey.obj `if test -f 'cryptopp/pubkey.cpp'; then $(CYGPATH_W) 'cryptopp/pubkey.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/pubkey.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-pubkey.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-pubkey.Po
#	$(AM_V_CXX)source='cryptopp/pubkey.cpp' object='cryptopp/cryptopp_libcryptopp_a-pubkey.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-pubkey.obj `if test -f 'cryptopp/pubkey.cpp'; then $(CYGPATH_W) 'cryptopp/pubkey.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/pubkey.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-queue.o: cryptopp/queue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-queue.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-queue.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-queue.o `test -f 'cryptopp/queue.cpp' || echo '$(srcdir)/'`cryptopp/queue.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-queue.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-queue.Po
#	$(AM_V_CXX)source='cryptopp/queue.cpp' object='cryptopp/cryptopp_libcryptopp_a-queue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-queue.o `test -f 'cryptopp/queue.cpp' || echo '$(srcdir)/'`cryptopp/queue.cpp

cryptopp/cryptopp_libcryptopp_a-queue.obj: cryptopp/queue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-queue.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-queue.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-queue.obj `if test -f 'cryptopp/queue.cpp'; then $(CYGPATH_W) 'cryptopp/queue.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/queue.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-queue.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-queue.Po
#	$(AM_V_CXX)source='cryptopp/queue.cpp' object='cryptopp/cryptopp_libcryptopp_a-queue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-queue.obj `if test -f 'cryptopp/queue.cpp'; then $(CYGPATH_W) 'cryptopp/queue.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/queue.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-randpool.o: cryptopp/randpool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-randpool.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-randpool.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-randpool.o `test -f 'cryptopp/randpool.cpp' || echo '$(srcdir)/'`cryptopp/randpool.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-randpool.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-randpool.Po
#	$(AM_V_CXX)source='cryptopp/randpool.cpp' object='cryptopp/cryptopp_libcryptopp_a-randpool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-randpool.o `test -f 'cryptopp/randpool.cpp' || echo '$(srcdir)/'`cryptopp/randpool.cpp

cryptopp/cryptopp_libcryptopp_a-randpool.obj: cryptopp/randpool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-randpool.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-randpool.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-randpool.obj `if test -f 'cryptopp/randpool.cpp'; then $(CYGPATH_W) 'cryptopp/randpool.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/randpool.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-randpool.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-randpool.Po
#	$(AM_V_CXX)source='cryptopp/randpool.cpp' object='cryptopp/cryptopp_libcryptopp_a-randpool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-randpool.obj `if test -f 'cryptopp/randpool.cpp'; then $(CYGPATH_W) 'cryptopp/randpool.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/randpool.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-rdtables.o: cryptopp/rdtables.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-rdtables.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-rdtables.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-rdtables.o `test -f 'cryptopp/rdtables.cpp' || echo '$(srcdir)/'`cryptopp/rdtables.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-rdtables.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-rdtables.Po
#	$(AM_V_CXX)source='cryptopp/rdtables.cpp' object='cryptopp/cryptopp_libcryptopp_a-rdtables.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-rdtables.o `test -f 'cryptopp/rdtables.cpp' || echo '$(srcdir)/'`cryptopp/rdtables.cpp

cryptopp/cryptopp_libcryptopp_a-rdtables.obj: cryptopp/rdtables.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-rdtables.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-rdtables.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-rdtables.obj `if test -f 'cryptopp/rdtables.cpp'; then $(CYGPATH_W) 'cryptopp/rdtables.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/rdtables.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-rdtables.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-rdtables.Po
#	$(AM_V_CXX)source='cryptopp/rdtables.cpp' object='cryptopp/cryptopp_libcryptopp_a-rdtables.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-rdtables.obj `if test -f 'cryptopp/rdtables.cpp'; then $(CYGPATH_W) 'cryptopp/rdtables.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/rdtables.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-rijndael.o: cryptopp/rijndael.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-rijndael.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-rijndael.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-rijndael.o `test -f 'cryptopp/rijndael.cpp' || echo '$(srcdir)/'`cryptopp/rijndael.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-rijndael.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-rijndael.Po
#	$(AM_V_CXX)source='cryptopp/rijndael.cpp' object='cryptopp/cryptopp_libcryptopp_a-rijndael.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-rijndael.o `test -f 'cryptopp/rijndael.cpp' || echo '$(srcdir)/'`cryptopp/rijndael.cpp

cryptopp/cryptopp_libcryptopp_a-rijndael.obj: cryptopp/rijndael.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-rijndael.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-rijndael.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-rijndael.obj `if test -f 'cryptopp/rijndael.cpp'; then $(CYGPATH_W) 'cryptopp/rijndael.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/rijndael.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-rijndael.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-rijndael.Po
#	$(AM_V_CXX)source='cryptopp/rijndael.cpp' object='cryptopp/cryptopp_libcryptopp_a-rijndael.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-rijndael.obj `if test -f 'cryptopp/rijndael.cpp'; then $(CYGPATH_W) 'cryptopp/rijndael.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/rijndael.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-rng.o: cryptopp/rng.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-rng.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-rng.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-rng.o `test -f 'cryptopp/rng.cpp' || echo '$(srcdir)/'`cryptopp/rng.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-rng.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-rng.Po
#	$(AM_V_CXX)source='cryptopp/rng.cpp' object='cryptopp/cryptopp_libcryptopp_a-rng.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-rng.o `test -f 'cryptopp/rng.cpp' || echo '$(srcdir)/'`cryptopp/rng.cpp

cryptopp/cryptopp_libcryptopp_a-rng.obj: cryptopp/rng.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-rng.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-rng.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-rng.obj `if test -f 'cryptopp/rng.cpp'; then $(CYGPATH_W) 'cryptopp/rng.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/rng.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-rng.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-rng.Po
#	$(AM_V_CXX)source='cryptopp/rng.cpp' object='cryptopp/cryptopp_libcryptopp_a-rng.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-rng.obj `if test -f 'cryptopp/rng.cpp'; then $(CYGPATH_W) 'cryptopp/rng.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/rng.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-sha.o: cryptopp/sha.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-sha.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-sha.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-sha.o `test -f 'cryptopp/sha.cpp' || echo '$(srcdir)/'`cryptopp/sha.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-sha.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-sha.Po
#	$(AM_V_CXX)source='cryptopp/sha.cpp' object='cryptopp/cryptopp_libcryptopp_a-sha.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-sha.o `test -f 'cryptopp/sha.cpp' || echo '$(srcdir)/'`cryptopp/sha.cpp

cryptopp/cryptopp_libcryptopp_a-sha.obj: cryptopp/sha.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-sha.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-sha.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-sha.obj `if test -f 'cryptopp/sha.cpp'; then $(CYGPATH_W) 'cryptopp/sha.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/sha.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-sha.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-sha.Po
#	$(AM_V_CXX)source='cryptopp/sha.cpp' object='cryptopp/cryptopp_libcryptopp_a-sha.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-sha.obj `if test -f 'cryptopp/sha.cpp'; then $(CYGPATH_W) 'cryptopp/sha.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/sha.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-strciphr.o: cryptopp/strciphr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-strciphr.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-strciphr.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-strciphr.o `test -f 'cryptopp/strciphr.cpp' || echo '$(srcdir)/'`cryptopp/strciphr.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-strciphr.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-strciphr.Po
#	$(AM_V_CXX)source='cryptopp/strciphr.cpp' object='cryptopp/cryptopp_libcryptopp_a-strciphr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-strciphr.o `test -f 'cryptopp/strciphr.cpp' || echo '$(srcdir)/'`cryptopp/strciphr.cpp

cryptopp/cryptopp_libcryptopp_a-strciphr.obj: cryptopp/strciphr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-strciphr.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-strciphr.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-strciphr.obj `if test -f 'cryptopp/strciphr.cpp'; then $(CYGPATH_W) 'cryptopp/strciphr.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/strciphr.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-strciphr.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-strciphr.Po
#	$(AM_V_CXX)source='cryptopp/strciphr.cpp' object='cryptopp/cryptopp_libcryptopp_a-strciphr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-strciphr.obj `if test -f 'cryptopp/strciphr.cpp'; then $(CYGPATH_W) 'cryptopp/strciphr.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/strciphr.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-winpipes.o: cryptopp/winpipes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-winpipes.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-winpipes.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-winpipes.o `test -f 'cryptopp/winpipes.cpp' || echo '$(srcdir)/'`cryptopp/winpipes.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-winpipes.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-winpipes.Po
#	$(AM_V_CXX)source='cryptopp/winpipes.cpp' object='cryptopp/cryptopp_libcryptopp_a-winpipes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-winpipes.o `test -f 'cryptopp/winpipes.cpp' || echo '$(srcdir)/'`cryptopp/winpipes.cpp

cryptopp/cryptopp_libcryptopp_a-winpipes.obj: cryptopp/winpipes.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-winpipes.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-winpipes.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-winpipes.obj `if test -f 'cryptopp/winpipes.cpp'; then $(CYGPATH_W) 'cryptopp/winpipes.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/winpipes.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-winpipes.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-winpipes.Po
#	$(AM_V_CXX)source='cryptopp/winpipes.cpp' object='cryptopp/cryptopp_libcryptopp_a-winpipes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-winpipes.obj `if test -f 'cryptopp/winpipes.cpp'; then $(CYGPATH_W) 'cryptopp/winpipes.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/winpipes.cpp'; fi`

cryptopp/cryptopp_libcryptopp_a-sha3.o: cryptopp/sha3.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-sha3.o -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-sha3.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-sha3.o `test -f 'cryptopp/sha3.cpp' || echo '$(srcdir)/'`cryptopp/sha3.cpp
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-sha3.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-sha3.Po
#	$(AM_V_CXX)source='cryptopp/sha3.cpp' object='cryptopp/cryptopp_libcryptopp_a-sha3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-sha3.o `test -f 'cryptopp/sha3.cpp' || echo '$(srcdir)/'`cryptopp/sha3.cpp

cryptopp/cryptopp_libcryptopp_a-sha3.obj: cryptopp/sha3.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -MT cryptopp/cryptopp_libcryptopp_a-sha3.obj -MD -MP -MF cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-sha3.Tpo -c -o cryptopp/cryptopp_libcryptopp_a-sha3.obj `if test -f 'cryptopp/sha3.cpp'; then $(CYGPATH_W) 'cryptopp/sha3.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/sha3.cpp'; fi`
	$(AM_V_at)$(am__mv) cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-sha3.Tpo cryptopp/$(DEPDIR)/cryptopp_libcryptopp_a-sha3.Po
#	$(AM_V_CXX)source='cryptopp/sha3.cpp' object='cryptopp/cryptopp_libcryptopp_a-sha3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(cryptopp_libcryptopp_a_CPPFLAGS) $(CPPFLAGS) $(cryptopp_libcryptopp_a_CXXFLAGS) $(CXXFLAGS) -c -o cryptopp/cryptopp_libcryptopp_a-sha3.obj `if test -f 'cryptopp/sha3.cpp'; then $(CYGPATH_W) 'cryptopp/sha3.cpp'; else $(CYGPATH_W) '$(srcdir)/cryptopp/sha3.cpp'; fi`

leveldb/db/leveldb_libleveldb_a-builder.o: leveldb/db/builder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-builder.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-builder.Tpo -c -o leveldb/db/leveldb_libleveldb_a-builder.o `test -f 'leveldb/db/builder.cc' || echo '$(srcdir)/'`leveldb/db/builder.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-builder.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-builder.Po
#	$(AM_V_CXX)source='leveldb/db/builder.cc' object='leveldb/db/leveldb_libleveldb_a-builder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-builder.o `test -f 'leveldb/db/builder.cc' || echo '$(srcdir)/'`leveldb/db/builder.cc

leveldb/db/leveldb_libleveldb_a-builder.obj: leveldb/db/builder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-builder.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-builder.Tpo -c -o leveldb/db/leveldb_libleveldb_a-builder.obj `if test -f 'leveldb/db/builder.cc'; then $(CYGPATH_W) 'leveldb/db/builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/builder.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-builder.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-builder.Po
#	$(AM_V_CXX)source='leveldb/db/builder.cc' object='leveldb/db/leveldb_libleveldb_a-builder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-builder.obj `if test -f 'leveldb/db/builder.cc'; then $(CYGPATH_W) 'leveldb/db/builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/builder.cc'; fi`

leveldb/db/leveldb_libleveldb_a-c.o: leveldb/db/c.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-c.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-c.Tpo -c -o leveldb/db/leveldb_libleveldb_a-c.o `test -f 'leveldb/db/c.cc' || echo '$(srcdir)/'`leveldb/db/c.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-c.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-c.Po
#	$(AM_V_CXX)source='leveldb/db/c.cc' object='leveldb/db/leveldb_libleveldb_a-c.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-c.o `test -f 'leveldb/db/c.cc' || echo '$(srcdir)/'`leveldb/db/c.cc

leveldb/db/leveldb_libleveldb_a-c.obj: leveldb/db/c.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-c.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-c.Tpo -c -o leveldb/db/leveldb_libleveldb_a-c.obj `if test -f 'leveldb/db/c.cc'; then $(CYGPATH_W) 'leveldb/db/c.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/c.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-c.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-c.Po
#	$(AM_V_CXX)source='leveldb/db/c.cc' object='leveldb/db/leveldb_libleveldb_a-c.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-c.obj `if test -f 'leveldb/db/c.cc'; then $(CYGPATH_W) 'leveldb/db/c.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/c.cc'; fi`

leveldb/db/leveldb_libleveldb_a-dbformat.o: leveldb/db/dbformat.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-dbformat.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dbformat.Tpo -c -o leveldb/db/leveldb_libleveldb_a-dbformat.o `test -f 'leveldb/db/dbformat.cc' || echo '$(srcdir)/'`leveldb/db/dbformat.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dbformat.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dbformat.Po
#	$(AM_V_CXX)source='leveldb/db/dbformat.cc' object='leveldb/db/leveldb_libleveldb_a-dbformat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-dbformat.o `test -f 'leveldb/db/dbformat.cc' || echo '$(srcdir)/'`leveldb/db/dbformat.cc

leveldb/db/leveldb_libleveldb_a-dbformat.obj: leveldb/db/dbformat.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-dbformat.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dbformat.Tpo -c -o leveldb/db/leveldb_libleveldb_a-dbformat.obj `if test -f 'leveldb/db/dbformat.cc'; then $(CYGPATH_W) 'leveldb/db/dbformat.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/dbformat.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dbformat.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dbformat.Po
#	$(AM_V_CXX)source='leveldb/db/dbformat.cc' object='leveldb/db/leveldb_libleveldb_a-dbformat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-dbformat.obj `if test -f 'leveldb/db/dbformat.cc'; then $(CYGPATH_W) 'leveldb/db/dbformat.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/dbformat.cc'; fi`

leveldb/db/leveldb_libleveldb_a-db_impl.o: leveldb/db/db_impl.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-db_impl.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_impl.Tpo -c -o leveldb/db/leveldb_libleveldb_a-db_impl.o `test -f 'leveldb/db/db_impl.cc' || echo '$(srcdir)/'`leveldb/db/db_impl.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_impl.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_impl.Po
#	$(AM_V_CXX)source='leveldb/db/db_impl.cc' object='leveldb/db/leveldb_libleveldb_a-db_impl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-db_impl.o `test -f 'leveldb/db/db_impl.cc' || echo '$(srcdir)/'`leveldb/db/db_impl.cc

leveldb/db/leveldb_libleveldb_a-db_impl.obj: leveldb/db/db_impl.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-db_impl.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_impl.Tpo -c -o leveldb/db/leveldb_libleveldb_a-db_impl.obj `if test -f 'leveldb/db/db_impl.cc'; then $(CYGPATH_W) 'leveldb/db/db_impl.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/db_impl.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_impl.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_impl.Po
#	$(AM_V_CXX)source='leveldb/db/db_impl.cc' object='leveldb/db/leveldb_libleveldb_a-db_impl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-db_impl.obj `if test -f 'leveldb/db/db_impl.cc'; then $(CYGPATH_W) 'leveldb/db/db_impl.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/db_impl.cc'; fi`

leveldb/db/leveldb_libleveldb_a-db_iter.o: leveldb/db/db_iter.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-db_iter.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_iter.Tpo -c -o leveldb/db/leveldb_libleveldb_a-db_iter.o `test -f 'leveldb/db/db_iter.cc' || echo '$(srcdir)/'`leveldb/db/db_iter.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_iter.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_iter.Po
#	$(AM_V_CXX)source='leveldb/db/db_iter.cc' object='leveldb/db/leveldb_libleveldb_a-db_iter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-db_iter.o `test -f 'leveldb/db/db_iter.cc' || echo '$(srcdir)/'`leveldb/db/db_iter.cc

leveldb/db/leveldb_libleveldb_a-db_iter.obj: leveldb/db/db_iter.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-db_iter.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_iter.Tpo -c -o leveldb/db/leveldb_libleveldb_a-db_iter.obj `if test -f 'leveldb/db/db_iter.cc'; then $(CYGPATH_W) 'leveldb/db/db_iter.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/db_iter.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_iter.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-db_iter.Po
#	$(AM_V_CXX)source='leveldb/db/db_iter.cc' object='leveldb/db/leveldb_libleveldb_a-db_iter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-db_iter.obj `if test -f 'leveldb/db/db_iter.cc'; then $(CYGPATH_W) 'leveldb/db/db_iter.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/db_iter.cc'; fi`

leveldb/db/leveldb_libleveldb_a-dumpfile.o: leveldb/db/dumpfile.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-dumpfile.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dumpfile.Tpo -c -o leveldb/db/leveldb_libleveldb_a-dumpfile.o `test -f 'leveldb/db/dumpfile.cc' || echo '$(srcdir)/'`leveldb/db/dumpfile.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dumpfile.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dumpfile.Po
#	$(AM_V_CXX)source='leveldb/db/dumpfile.cc' object='leveldb/db/leveldb_libleveldb_a-dumpfile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-dumpfile.o `test -f 'leveldb/db/dumpfile.cc' || echo '$(srcdir)/'`leveldb/db/dumpfile.cc

leveldb/db/leveldb_libleveldb_a-dumpfile.obj: leveldb/db/dumpfile.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-dumpfile.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dumpfile.Tpo -c -o leveldb/db/leveldb_libleveldb_a-dumpfile.obj `if test -f 'leveldb/db/dumpfile.cc'; then $(CYGPATH_W) 'leveldb/db/dumpfile.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/dumpfile.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dumpfile.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-dumpfile.Po
#	$(AM_V_CXX)source='leveldb/db/dumpfile.cc' object='leveldb/db/leveldb_libleveldb_a-dumpfile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-dumpfile.obj `if test -f 'leveldb/db/dumpfile.cc'; then $(CYGPATH_W) 'leveldb/db/dumpfile.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/dumpfile.cc'; fi`

leveldb/db/leveldb_libleveldb_a-filename.o: leveldb/db/filename.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-filename.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-filename.Tpo -c -o leveldb/db/leveldb_libleveldb_a-filename.o `test -f 'leveldb/db/filename.cc' || echo '$(srcdir)/'`leveldb/db/filename.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-filename.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-filename.Po
#	$(AM_V_CXX)source='leveldb/db/filename.cc' object='leveldb/db/leveldb_libleveldb_a-filename.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-filename.o `test -f 'leveldb/db/filename.cc' || echo '$(srcdir)/'`leveldb/db/filename.cc

leveldb/db/leveldb_libleveldb_a-filename.obj: leveldb/db/filename.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-filename.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-filename.Tpo -c -o leveldb/db/leveldb_libleveldb_a-filename.obj `if test -f 'leveldb/db/filename.cc'; then $(CYGPATH_W) 'leveldb/db/filename.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/filename.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-filename.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-filename.Po
#	$(AM_V_CXX)source='leveldb/db/filename.cc' object='leveldb/db/leveldb_libleveldb_a-filename.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-filename.obj `if test -f 'leveldb/db/filename.cc'; then $(CYGPATH_W) 'leveldb/db/filename.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/filename.cc'; fi`

leveldb/db/leveldb_libleveldb_a-log_reader.o: leveldb/db/log_reader.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-log_reader.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_reader.Tpo -c -o leveldb/db/leveldb_libleveldb_a-log_reader.o `test -f 'leveldb/db/log_reader.cc' || echo '$(srcdir)/'`leveldb/db/log_reader.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_reader.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_reader.Po
#	$(AM_V_CXX)source='leveldb/db/log_reader.cc' object='leveldb/db/leveldb_libleveldb_a-log_reader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-log_reader.o `test -f 'leveldb/db/log_reader.cc' || echo '$(srcdir)/'`leveldb/db/log_reader.cc

leveldb/db/leveldb_libleveldb_a-log_reader.obj: leveldb/db/log_reader.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-log_reader.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_reader.Tpo -c -o leveldb/db/leveldb_libleveldb_a-log_reader.obj `if test -f 'leveldb/db/log_reader.cc'; then $(CYGPATH_W) 'leveldb/db/log_reader.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/log_reader.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_reader.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_reader.Po
#	$(AM_V_CXX)source='leveldb/db/log_reader.cc' object='leveldb/db/leveldb_libleveldb_a-log_reader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-log_reader.obj `if test -f 'leveldb/db/log_reader.cc'; then $(CYGPATH_W) 'leveldb/db/log_reader.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/log_reader.cc'; fi`

leveldb/db/leveldb_libleveldb_a-log_writer.o: leveldb/db/log_writer.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-log_writer.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_writer.Tpo -c -o leveldb/db/leveldb_libleveldb_a-log_writer.o `test -f 'leveldb/db/log_writer.cc' || echo '$(srcdir)/'`leveldb/db/log_writer.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_writer.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_writer.Po
#	$(AM_V_CXX)source='leveldb/db/log_writer.cc' object='leveldb/db/leveldb_libleveldb_a-log_writer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-log_writer.o `test -f 'leveldb/db/log_writer.cc' || echo '$(srcdir)/'`leveldb/db/log_writer.cc

leveldb/db/leveldb_libleveldb_a-log_writer.obj: leveldb/db/log_writer.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-log_writer.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_writer.Tpo -c -o leveldb/db/leveldb_libleveldb_a-log_writer.obj `if test -f 'leveldb/db/log_writer.cc'; then $(CYGPATH_W) 'leveldb/db/log_writer.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/log_writer.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_writer.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-log_writer.Po
#	$(AM_V_CXX)source='leveldb/db/log_writer.cc' object='leveldb/db/leveldb_libleveldb_a-log_writer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-log_writer.obj `if test -f 'leveldb/db/log_writer.cc'; then $(CYGPATH_W) 'leveldb/db/log_writer.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/log_writer.cc'; fi`

leveldb/db/leveldb_libleveldb_a-memtable.o: leveldb/db/memtable.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-memtable.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-memtable.Tpo -c -o leveldb/db/leveldb_libleveldb_a-memtable.o `test -f 'leveldb/db/memtable.cc' || echo '$(srcdir)/'`leveldb/db/memtable.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-memtable.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-memtable.Po
#	$(AM_V_CXX)source='leveldb/db/memtable.cc' object='leveldb/db/leveldb_libleveldb_a-memtable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-memtable.o `test -f 'leveldb/db/memtable.cc' || echo '$(srcdir)/'`leveldb/db/memtable.cc

leveldb/db/leveldb_libleveldb_a-memtable.obj: leveldb/db/memtable.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-memtable.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-memtable.Tpo -c -o leveldb/db/leveldb_libleveldb_a-memtable.obj `if test -f 'leveldb/db/memtable.cc'; then $(CYGPATH_W) 'leveldb/db/memtable.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/memtable.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-memtable.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-memtable.Po
#	$(AM_V_CXX)source='leveldb/db/memtable.cc' object='leveldb/db/leveldb_libleveldb_a-memtable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-memtable.obj `if test -f 'leveldb/db/memtable.cc'; then $(CYGPATH_W) 'leveldb/db/memtable.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/memtable.cc'; fi`

leveldb/db/leveldb_libleveldb_a-repair.o: leveldb/db/repair.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-repair.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-repair.Tpo -c -o leveldb/db/leveldb_libleveldb_a-repair.o `test -f 'leveldb/db/repair.cc' || echo '$(srcdir)/'`leveldb/db/repair.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-repair.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-repair.Po
#	$(AM_V_CXX)source='leveldb/db/repair.cc' object='leveldb/db/leveldb_libleveldb_a-repair.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-repair.o `test -f 'leveldb/db/repair.cc' || echo '$(srcdir)/'`leveldb/db/repair.cc

leveldb/db/leveldb_libleveldb_a-repair.obj: leveldb/db/repair.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-repair.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-repair.Tpo -c -o leveldb/db/leveldb_libleveldb_a-repair.obj `if test -f 'leveldb/db/repair.cc'; then $(CYGPATH_W) 'leveldb/db/repair.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/repair.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-repair.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-repair.Po
#	$(AM_V_CXX)source='leveldb/db/repair.cc' object='leveldb/db/leveldb_libleveldb_a-repair.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-repair.obj `if test -f 'leveldb/db/repair.cc'; then $(CYGPATH_W) 'leveldb/db/repair.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/repair.cc'; fi`

leveldb/db/leveldb_libleveldb_a-table_cache.o: leveldb/db/table_cache.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-table_cache.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-table_cache.Tpo -c -o leveldb/db/leveldb_libleveldb_a-table_cache.o `test -f 'leveldb/db/table_cache.cc' || echo '$(srcdir)/'`leveldb/db/table_cache.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-table_cache.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-table_cache.Po
#	$(AM_V_CXX)source='leveldb/db/table_cache.cc' object='leveldb/db/leveldb_libleveldb_a-table_cache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-table_cache.o `test -f 'leveldb/db/table_cache.cc' || echo '$(srcdir)/'`leveldb/db/table_cache.cc

leveldb/db/leveldb_libleveldb_a-table_cache.obj: leveldb/db/table_cache.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-table_cache.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-table_cache.Tpo -c -o leveldb/db/leveldb_libleveldb_a-table_cache.obj `if test -f 'leveldb/db/table_cache.cc'; then $(CYGPATH_W) 'leveldb/db/table_cache.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/table_cache.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-table_cache.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-table_cache.Po
#	$(AM_V_CXX)source='leveldb/db/table_cache.cc' object='leveldb/db/leveldb_libleveldb_a-table_cache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-table_cache.obj `if test -f 'leveldb/db/table_cache.cc'; then $(CYGPATH_W) 'leveldb/db/table_cache.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/table_cache.cc'; fi`

leveldb/db/leveldb_libleveldb_a-version_edit.o: leveldb/db/version_edit.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-version_edit.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_edit.Tpo -c -o leveldb/db/leveldb_libleveldb_a-version_edit.o `test -f 'leveldb/db/version_edit.cc' || echo '$(srcdir)/'`leveldb/db/version_edit.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_edit.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_edit.Po
#	$(AM_V_CXX)source='leveldb/db/version_edit.cc' object='leveldb/db/leveldb_libleveldb_a-version_edit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-version_edit.o `test -f 'leveldb/db/version_edit.cc' || echo '$(srcdir)/'`leveldb/db/version_edit.cc

leveldb/db/leveldb_libleveldb_a-version_edit.obj: leveldb/db/version_edit.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-version_edit.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_edit.Tpo -c -o leveldb/db/leveldb_libleveldb_a-version_edit.obj `if test -f 'leveldb/db/version_edit.cc'; then $(CYGPATH_W) 'leveldb/db/version_edit.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/version_edit.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_edit.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_edit.Po
#	$(AM_V_CXX)source='leveldb/db/version_edit.cc' object='leveldb/db/leveldb_libleveldb_a-version_edit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-version_edit.obj `if test -f 'leveldb/db/version_edit.cc'; then $(CYGPATH_W) 'leveldb/db/version_edit.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/version_edit.cc'; fi`

leveldb/db/leveldb_libleveldb_a-version_set.o: leveldb/db/version_set.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-version_set.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_set.Tpo -c -o leveldb/db/leveldb_libleveldb_a-version_set.o `test -f 'leveldb/db/version_set.cc' || echo '$(srcdir)/'`leveldb/db/version_set.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_set.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_set.Po
#	$(AM_V_CXX)source='leveldb/db/version_set.cc' object='leveldb/db/leveldb_libleveldb_a-version_set.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-version_set.o `test -f 'leveldb/db/version_set.cc' || echo '$(srcdir)/'`leveldb/db/version_set.cc

leveldb/db/leveldb_libleveldb_a-version_set.obj: leveldb/db/version_set.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-version_set.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_set.Tpo -c -o leveldb/db/leveldb_libleveldb_a-version_set.obj `if test -f 'leveldb/db/version_set.cc'; then $(CYGPATH_W) 'leveldb/db/version_set.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/version_set.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_set.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-version_set.Po
#	$(AM_V_CXX)source='leveldb/db/version_set.cc' object='leveldb/db/leveldb_libleveldb_a-version_set.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-version_set.obj `if test -f 'leveldb/db/version_set.cc'; then $(CYGPATH_W) 'leveldb/db/version_set.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/version_set.cc'; fi`

leveldb/db/leveldb_libleveldb_a-write_batch.o: leveldb/db/write_batch.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-write_batch.o -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-write_batch.Tpo -c -o leveldb/db/leveldb_libleveldb_a-write_batch.o `test -f 'leveldb/db/write_batch.cc' || echo '$(srcdir)/'`leveldb/db/write_batch.cc
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-write_batch.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-write_batch.Po
#	$(AM_V_CXX)source='leveldb/db/write_batch.cc' object='leveldb/db/leveldb_libleveldb_a-write_batch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-write_batch.o `test -f 'leveldb/db/write_batch.cc' || echo '$(srcdir)/'`leveldb/db/write_batch.cc

leveldb/db/leveldb_libleveldb_a-write_batch.obj: leveldb/db/write_batch.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/db/leveldb_libleveldb_a-write_batch.obj -MD -MP -MF leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-write_batch.Tpo -c -o leveldb/db/leveldb_libleveldb_a-write_batch.obj `if test -f 'leveldb/db/write_batch.cc'; then $(CYGPATH_W) 'leveldb/db/write_batch.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/write_batch.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-write_batch.Tpo leveldb/db/$(DEPDIR)/leveldb_libleveldb_a-write_batch.Po
#	$(AM_V_CXX)source='leveldb/db/write_batch.cc' object='leveldb/db/leveldb_libleveldb_a-write_batch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/db/leveldb_libleveldb_a-write_batch.obj `if test -f 'leveldb/db/write_batch.cc'; then $(CYGPATH_W) 'leveldb/db/write_batch.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/db/write_batch.cc'; fi`

leveldb/table/leveldb_libleveldb_a-block_builder.o: leveldb/table/block_builder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-block_builder.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block_builder.Tpo -c -o leveldb/table/leveldb_libleveldb_a-block_builder.o `test -f 'leveldb/table/block_builder.cc' || echo '$(srcdir)/'`leveldb/table/block_builder.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block_builder.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block_builder.Po
#	$(AM_V_CXX)source='leveldb/table/block_builder.cc' object='leveldb/table/leveldb_libleveldb_a-block_builder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-block_builder.o `test -f 'leveldb/table/block_builder.cc' || echo '$(srcdir)/'`leveldb/table/block_builder.cc

leveldb/table/leveldb_libleveldb_a-block_builder.obj: leveldb/table/block_builder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-block_builder.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block_builder.Tpo -c -o leveldb/table/leveldb_libleveldb_a-block_builder.obj `if test -f 'leveldb/table/block_builder.cc'; then $(CYGPATH_W) 'leveldb/table/block_builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/block_builder.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block_builder.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block_builder.Po
#	$(AM_V_CXX)source='leveldb/table/block_builder.cc' object='leveldb/table/leveldb_libleveldb_a-block_builder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-block_builder.obj `if test -f 'leveldb/table/block_builder.cc'; then $(CYGPATH_W) 'leveldb/table/block_builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/block_builder.cc'; fi`

leveldb/table/leveldb_libleveldb_a-block.o: leveldb/table/block.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-block.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block.Tpo -c -o leveldb/table/leveldb_libleveldb_a-block.o `test -f 'leveldb/table/block.cc' || echo '$(srcdir)/'`leveldb/table/block.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block.Po
#	$(AM_V_CXX)source='leveldb/table/block.cc' object='leveldb/table/leveldb_libleveldb_a-block.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-block.o `test -f 'leveldb/table/block.cc' || echo '$(srcdir)/'`leveldb/table/block.cc

leveldb/table/leveldb_libleveldb_a-block.obj: leveldb/table/block.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-block.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block.Tpo -c -o leveldb/table/leveldb_libleveldb_a-block.obj `if test -f 'leveldb/table/block.cc'; then $(CYGPATH_W) 'leveldb/table/block.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/block.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-block.Po
#	$(AM_V_CXX)source='leveldb/table/block.cc' object='leveldb/table/leveldb_libleveldb_a-block.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-block.obj `if test -f 'leveldb/table/block.cc'; then $(CYGPATH_W) 'leveldb/table/block.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/block.cc'; fi`

leveldb/table/leveldb_libleveldb_a-filter_block.o: leveldb/table/filter_block.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-filter_block.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-filter_block.Tpo -c -o leveldb/table/leveldb_libleveldb_a-filter_block.o `test -f 'leveldb/table/filter_block.cc' || echo '$(srcdir)/'`leveldb/table/filter_block.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-filter_block.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-filter_block.Po
#	$(AM_V_CXX)source='leveldb/table/filter_block.cc' object='leveldb/table/leveldb_libleveldb_a-filter_block.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-filter_block.o `test -f 'leveldb/table/filter_block.cc' || echo '$(srcdir)/'`leveldb/table/filter_block.cc

leveldb/table/leveldb_libleveldb_a-filter_block.obj: leveldb/table/filter_block.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-filter_block.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-filter_block.Tpo -c -o leveldb/table/leveldb_libleveldb_a-filter_block.obj `if test -f 'leveldb/table/filter_block.cc'; then $(CYGPATH_W) 'leveldb/table/filter_block.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/filter_block.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-filter_block.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-filter_block.Po
#	$(AM_V_CXX)source='leveldb/table/filter_block.cc' object='leveldb/table/leveldb_libleveldb_a-filter_block.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-filter_block.obj `if test -f 'leveldb/table/filter_block.cc'; then $(CYGPATH_W) 'leveldb/table/filter_block.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/filter_block.cc'; fi`

leveldb/table/leveldb_libleveldb_a-format.o: leveldb/table/format.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-format.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-format.Tpo -c -o leveldb/table/leveldb_libleveldb_a-format.o `test -f 'leveldb/table/format.cc' || echo '$(srcdir)/'`leveldb/table/format.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-format.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-format.Po
#	$(AM_V_CXX)source='leveldb/table/format.cc' object='leveldb/table/leveldb_libleveldb_a-format.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-format.o `test -f 'leveldb/table/format.cc' || echo '$(srcdir)/'`leveldb/table/format.cc

leveldb/table/leveldb_libleveldb_a-format.obj: leveldb/table/format.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-format.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-format.Tpo -c -o leveldb/table/leveldb_libleveldb_a-format.obj `if test -f 'leveldb/table/format.cc'; then $(CYGPATH_W) 'leveldb/table/format.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/format.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-format.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-format.Po
#	$(AM_V_CXX)source='leveldb/table/format.cc' object='leveldb/table/leveldb_libleveldb_a-format.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-format.obj `if test -f 'leveldb/table/format.cc'; then $(CYGPATH_W) 'leveldb/table/format.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/format.cc'; fi`

leveldb/table/leveldb_libleveldb_a-iterator.o: leveldb/table/iterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-iterator.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-iterator.Tpo -c -o leveldb/table/leveldb_libleveldb_a-iterator.o `test -f 'leveldb/table/iterator.cc' || echo '$(srcdir)/'`leveldb/table/iterator.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-iterator.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-iterator.Po
#	$(AM_V_CXX)source='leveldb/table/iterator.cc' object='leveldb/table/leveldb_libleveldb_a-iterator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-iterator.o `test -f 'leveldb/table/iterator.cc' || echo '$(srcdir)/'`leveldb/table/iterator.cc

leveldb/table/leveldb_libleveldb_a-iterator.obj: leveldb/table/iterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-iterator.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-iterator.Tpo -c -o leveldb/table/leveldb_libleveldb_a-iterator.obj `if test -f 'leveldb/table/iterator.cc'; then $(CYGPATH_W) 'leveldb/table/iterator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/iterator.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-iterator.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-iterator.Po
#	$(AM_V_CXX)source='leveldb/table/iterator.cc' object='leveldb/table/leveldb_libleveldb_a-iterator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-iterator.obj `if test -f 'leveldb/table/iterator.cc'; then $(CYGPATH_W) 'leveldb/table/iterator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/iterator.cc'; fi`

leveldb/table/leveldb_libleveldb_a-merger.o: leveldb/table/merger.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-merger.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-merger.Tpo -c -o leveldb/table/leveldb_libleveldb_a-merger.o `test -f 'leveldb/table/merger.cc' || echo '$(srcdir)/'`leveldb/table/merger.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-merger.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-merger.Po
#	$(AM_V_CXX)source='leveldb/table/merger.cc' object='leveldb/table/leveldb_libleveldb_a-merger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-merger.o `test -f 'leveldb/table/merger.cc' || echo '$(srcdir)/'`leveldb/table/merger.cc

leveldb/table/leveldb_libleveldb_a-merger.obj: leveldb/table/merger.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-merger.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-merger.Tpo -c -o leveldb/table/leveldb_libleveldb_a-merger.obj `if test -f 'leveldb/table/merger.cc'; then $(CYGPATH_W) 'leveldb/table/merger.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/merger.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-merger.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-merger.Po
#	$(AM_V_CXX)source='leveldb/table/merger.cc' object='leveldb/table/leveldb_libleveldb_a-merger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-merger.obj `if test -f 'leveldb/table/merger.cc'; then $(CYGPATH_W) 'leveldb/table/merger.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/merger.cc'; fi`

leveldb/table/leveldb_libleveldb_a-table_builder.o: leveldb/table/table_builder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-table_builder.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table_builder.Tpo -c -o leveldb/table/leveldb_libleveldb_a-table_builder.o `test -f 'leveldb/table/table_builder.cc' || echo '$(srcdir)/'`leveldb/table/table_builder.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table_builder.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table_builder.Po
#	$(AM_V_CXX)source='leveldb/table/table_builder.cc' object='leveldb/table/leveldb_libleveldb_a-table_builder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-table_builder.o `test -f 'leveldb/table/table_builder.cc' || echo '$(srcdir)/'`leveldb/table/table_builder.cc

leveldb/table/leveldb_libleveldb_a-table_builder.obj: leveldb/table/table_builder.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-table_builder.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table_builder.Tpo -c -o leveldb/table/leveldb_libleveldb_a-table_builder.obj `if test -f 'leveldb/table/table_builder.cc'; then $(CYGPATH_W) 'leveldb/table/table_builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/table_builder.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table_builder.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table_builder.Po
#	$(AM_V_CXX)source='leveldb/table/table_builder.cc' object='leveldb/table/leveldb_libleveldb_a-table_builder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-table_builder.obj `if test -f 'leveldb/table/table_builder.cc'; then $(CYGPATH_W) 'leveldb/table/table_builder.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/table_builder.cc'; fi`

leveldb/table/leveldb_libleveldb_a-table.o: leveldb/table/table.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-table.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table.Tpo -c -o leveldb/table/leveldb_libleveldb_a-table.o `test -f 'leveldb/table/table.cc' || echo '$(srcdir)/'`leveldb/table/table.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table.Po
#	$(AM_V_CXX)source='leveldb/table/table.cc' object='leveldb/table/leveldb_libleveldb_a-table.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-table.o `test -f 'leveldb/table/table.cc' || echo '$(srcdir)/'`leveldb/table/table.cc

leveldb/table/leveldb_libleveldb_a-table.obj: leveldb/table/table.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-table.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table.Tpo -c -o leveldb/table/leveldb_libleveldb_a-table.obj `if test -f 'leveldb/table/table.cc'; then $(CYGPATH_W) 'leveldb/table/table.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/table.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-table.Po
#	$(AM_V_CXX)source='leveldb/table/table.cc' object='leveldb/table/leveldb_libleveldb_a-table.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-table.obj `if test -f 'leveldb/table/table.cc'; then $(CYGPATH_W) 'leveldb/table/table.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/table.cc'; fi`

leveldb/table/leveldb_libleveldb_a-two_level_iterator.o: leveldb/table/two_level_iterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-two_level_iterator.o -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-two_level_iterator.Tpo -c -o leveldb/table/leveldb_libleveldb_a-two_level_iterator.o `test -f 'leveldb/table/two_level_iterator.cc' || echo '$(srcdir)/'`leveldb/table/two_level_iterator.cc
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-two_level_iterator.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-two_level_iterator.Po
#	$(AM_V_CXX)source='leveldb/table/two_level_iterator.cc' object='leveldb/table/leveldb_libleveldb_a-two_level_iterator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-two_level_iterator.o `test -f 'leveldb/table/two_level_iterator.cc' || echo '$(srcdir)/'`leveldb/table/two_level_iterator.cc

leveldb/table/leveldb_libleveldb_a-two_level_iterator.obj: leveldb/table/two_level_iterator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/table/leveldb_libleveldb_a-two_level_iterator.obj -MD -MP -MF leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-two_level_iterator.Tpo -c -o leveldb/table/leveldb_libleveldb_a-two_level_iterator.obj `if test -f 'leveldb/table/two_level_iterator.cc'; then $(CYGPATH_W) 'leveldb/table/two_level_iterator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/two_level_iterator.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-two_level_iterator.Tpo leveldb/table/$(DEPDIR)/leveldb_libleveldb_a-two_level_iterator.Po
#	$(AM_V_CXX)source='leveldb/table/two_level_iterator.cc' object='leveldb/table/leveldb_libleveldb_a-two_level_iterator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/table/leveldb_libleveldb_a-two_level_iterator.obj `if test -f 'leveldb/table/two_level_iterator.cc'; then $(CYGPATH_W) 'leveldb/table/two_level_iterator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/table/two_level_iterator.cc'; fi`

leveldb/util/leveldb_libleveldb_a-arena.o: leveldb/util/arena.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-arena.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-arena.Tpo -c -o leveldb/util/leveldb_libleveldb_a-arena.o `test -f 'leveldb/util/arena.cc' || echo '$(srcdir)/'`leveldb/util/arena.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-arena.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-arena.Po
#	$(AM_V_CXX)source='leveldb/util/arena.cc' object='leveldb/util/leveldb_libleveldb_a-arena.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-arena.o `test -f 'leveldb/util/arena.cc' || echo '$(srcdir)/'`leveldb/util/arena.cc

leveldb/util/leveldb_libleveldb_a-arena.obj: leveldb/util/arena.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-arena.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-arena.Tpo -c -o leveldb/util/leveldb_libleveldb_a-arena.obj `if test -f 'leveldb/util/arena.cc'; then $(CYGPATH_W) 'leveldb/util/arena.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/arena.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-arena.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-arena.Po
#	$(AM_V_CXX)source='leveldb/util/arena.cc' object='leveldb/util/leveldb_libleveldb_a-arena.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-arena.obj `if test -f 'leveldb/util/arena.cc'; then $(CYGPATH_W) 'leveldb/util/arena.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/arena.cc'; fi`

leveldb/util/leveldb_libleveldb_a-bloom.o: leveldb/util/bloom.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-bloom.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-bloom.Tpo -c -o leveldb/util/leveldb_libleveldb_a-bloom.o `test -f 'leveldb/util/bloom.cc' || echo '$(srcdir)/'`leveldb/util/bloom.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-bloom.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-bloom.Po
#	$(AM_V_CXX)source='leveldb/util/bloom.cc' object='leveldb/util/leveldb_libleveldb_a-bloom.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-bloom.o `test -f 'leveldb/util/bloom.cc' || echo '$(srcdir)/'`leveldb/util/bloom.cc

leveldb/util/leveldb_libleveldb_a-bloom.obj: leveldb/util/bloom.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-bloom.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-bloom.Tpo -c -o leveldb/util/leveldb_libleveldb_a-bloom.obj `if test -f 'leveldb/util/bloom.cc'; then $(CYGPATH_W) 'leveldb/util/bloom.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/bloom.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-bloom.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-bloom.Po
#	$(AM_V_CXX)source='leveldb/util/bloom.cc' object='leveldb/util/leveldb_libleveldb_a-bloom.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-bloom.obj `if test -f 'leveldb/util/bloom.cc'; then $(CYGPATH_W) 'leveldb/util/bloom.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/bloom.cc'; fi`

leveldb/util/leveldb_libleveldb_a-cache.o: leveldb/util/cache.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-cache.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-cache.Tpo -c -o leveldb/util/leveldb_libleveldb_a-cache.o `test -f 'leveldb/util/cache.cc' || echo '$(srcdir)/'`leveldb/util/cache.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-cache.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-cache.Po
#	$(AM_V_CXX)source='leveldb/util/cache.cc' object='leveldb/util/leveldb_libleveldb_a-cache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-cache.o `test -f 'leveldb/util/cache.cc' || echo '$(srcdir)/'`leveldb/util/cache.cc

leveldb/util/leveldb_libleveldb_a-cache.obj: leveldb/util/cache.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-cache.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-cache.Tpo -c -o leveldb/util/leveldb_libleveldb_a-cache.obj `if test -f 'leveldb/util/cache.cc'; then $(CYGPATH_W) 'leveldb/util/cache.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/cache.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-cache.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-cache.Po
#	$(AM_V_CXX)source='leveldb/util/cache.cc' object='leveldb/util/leveldb_libleveldb_a-cache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-cache.obj `if test -f 'leveldb/util/cache.cc'; then $(CYGPATH_W) 'leveldb/util/cache.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/cache.cc'; fi`

leveldb/util/leveldb_libleveldb_a-coding.o: leveldb/util/coding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-coding.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-coding.Tpo -c -o leveldb/util/leveldb_libleveldb_a-coding.o `test -f 'leveldb/util/coding.cc' || echo '$(srcdir)/'`leveldb/util/coding.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-coding.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-coding.Po
#	$(AM_V_CXX)source='leveldb/util/coding.cc' object='leveldb/util/leveldb_libleveldb_a-coding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-coding.o `test -f 'leveldb/util/coding.cc' || echo '$(srcdir)/'`leveldb/util/coding.cc

leveldb/util/leveldb_libleveldb_a-coding.obj: leveldb/util/coding.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-coding.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-coding.Tpo -c -o leveldb/util/leveldb_libleveldb_a-coding.obj `if test -f 'leveldb/util/coding.cc'; then $(CYGPATH_W) 'leveldb/util/coding.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/coding.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-coding.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-coding.Po
#	$(AM_V_CXX)source='leveldb/util/coding.cc' object='leveldb/util/leveldb_libleveldb_a-coding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-coding.obj `if test -f 'leveldb/util/coding.cc'; then $(CYGPATH_W) 'leveldb/util/coding.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/coding.cc'; fi`

leveldb/util/leveldb_libleveldb_a-comparator.o: leveldb/util/comparator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-comparator.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-comparator.Tpo -c -o leveldb/util/leveldb_libleveldb_a-comparator.o `test -f 'leveldb/util/comparator.cc' || echo '$(srcdir)/'`leveldb/util/comparator.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-comparator.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-comparator.Po
#	$(AM_V_CXX)source='leveldb/util/comparator.cc' object='leveldb/util/leveldb_libleveldb_a-comparator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-comparator.o `test -f 'leveldb/util/comparator.cc' || echo '$(srcdir)/'`leveldb/util/comparator.cc

leveldb/util/leveldb_libleveldb_a-comparator.obj: leveldb/util/comparator.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-comparator.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-comparator.Tpo -c -o leveldb/util/leveldb_libleveldb_a-comparator.obj `if test -f 'leveldb/util/comparator.cc'; then $(CYGPATH_W) 'leveldb/util/comparator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/comparator.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-comparator.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-comparator.Po
#	$(AM_V_CXX)source='leveldb/util/comparator.cc' object='leveldb/util/leveldb_libleveldb_a-comparator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-comparator.obj `if test -f 'leveldb/util/comparator.cc'; then $(CYGPATH_W) 'leveldb/util/comparator.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/comparator.cc'; fi`

leveldb/util/leveldb_libleveldb_a-crc32c.o: leveldb/util/crc32c.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-crc32c.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-crc32c.Tpo -c -o leveldb/util/leveldb_libleveldb_a-crc32c.o `test -f 'leveldb/util/crc32c.cc' || echo '$(srcdir)/'`leveldb/util/crc32c.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-crc32c.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-crc32c.Po
#	$(AM_V_CXX)source='leveldb/util/crc32c.cc' object='leveldb/util/leveldb_libleveldb_a-crc32c.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-crc32c.o `test -f 'leveldb/util/crc32c.cc' || echo '$(srcdir)/'`leveldb/util/crc32c.cc

leveldb/util/leveldb_libleveldb_a-crc32c.obj: leveldb/util/crc32c.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-crc32c.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-crc32c.Tpo -c -o leveldb/util/leveldb_libleveldb_a-crc32c.obj `if test -f 'leveldb/util/crc32c.cc'; then $(CYGPATH_W) 'leveldb/util/crc32c.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/crc32c.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-crc32c.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-crc32c.Po
#	$(AM_V_CXX)source='leveldb/util/crc32c.cc' object='leveldb/util/leveldb_libleveldb_a-crc32c.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-crc32c.obj `if test -f 'leveldb/util/crc32c.cc'; then $(CYGPATH_W) 'leveldb/util/crc32c.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/crc32c.cc'; fi`

leveldb/util/leveldb_libleveldb_a-env.o: leveldb/util/env.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-env.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env.Tpo -c -o leveldb/util/leveldb_libleveldb_a-env.o `test -f 'leveldb/util/env.cc' || echo '$(srcdir)/'`leveldb/util/env.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env.Po
#	$(AM_V_CXX)source='leveldb/util/env.cc' object='leveldb/util/leveldb_libleveldb_a-env.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-env.o `test -f 'leveldb/util/env.cc' || echo '$(srcdir)/'`leveldb/util/env.cc

leveldb/util/leveldb_libleveldb_a-env.obj: leveldb/util/env.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-env.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env.Tpo -c -o leveldb/util/leveldb_libleveldb_a-env.obj `if test -f 'leveldb/util/env.cc'; then $(CYGPATH_W) 'leveldb/util/env.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env.Po
#	$(AM_V_CXX)source='leveldb/util/env.cc' object='leveldb/util/leveldb_libleveldb_a-env.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-env.obj `if test -f 'leveldb/util/env.cc'; then $(CYGPATH_W) 'leveldb/util/env.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env.cc'; fi`

leveldb/util/leveldb_libleveldb_a-env_posix.o: leveldb/util/env_posix.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-env_posix.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_posix.Tpo -c -o leveldb/util/leveldb_libleveldb_a-env_posix.o `test -f 'leveldb/util/env_posix.cc' || echo '$(srcdir)/'`leveldb/util/env_posix.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_posix.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_posix.Po
#	$(AM_V_CXX)source='leveldb/util/env_posix.cc' object='leveldb/util/leveldb_libleveldb_a-env_posix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-env_posix.o `test -f 'leveldb/util/env_posix.cc' || echo '$(srcdir)/'`leveldb/util/env_posix.cc

leveldb/util/leveldb_libleveldb_a-env_posix.obj: leveldb/util/env_posix.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-env_posix.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_posix.Tpo -c -o leveldb/util/leveldb_libleveldb_a-env_posix.obj `if test -f 'leveldb/util/env_posix.cc'; then $(CYGPATH_W) 'leveldb/util/env_posix.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env_posix.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_posix.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_posix.Po
#	$(AM_V_CXX)source='leveldb/util/env_posix.cc' object='leveldb/util/leveldb_libleveldb_a-env_posix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-env_posix.obj `if test -f 'leveldb/util/env_posix.cc'; then $(CYGPATH_W) 'leveldb/util/env_posix.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env_posix.cc'; fi`

leveldb/util/leveldb_libleveldb_a-filter_policy.o: leveldb/util/filter_policy.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-filter_policy.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-filter_policy.Tpo -c -o leveldb/util/leveldb_libleveldb_a-filter_policy.o `test -f 'leveldb/util/filter_policy.cc' || echo '$(srcdir)/'`leveldb/util/filter_policy.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-filter_policy.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-filter_policy.Po
#	$(AM_V_CXX)source='leveldb/util/filter_policy.cc' object='leveldb/util/leveldb_libleveldb_a-filter_policy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-filter_policy.o `test -f 'leveldb/util/filter_policy.cc' || echo '$(srcdir)/'`leveldb/util/filter_policy.cc

leveldb/util/leveldb_libleveldb_a-filter_policy.obj: leveldb/util/filter_policy.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-filter_policy.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-filter_policy.Tpo -c -o leveldb/util/leveldb_libleveldb_a-filter_policy.obj `if test -f 'leveldb/util/filter_policy.cc'; then $(CYGPATH_W) 'leveldb/util/filter_policy.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/filter_policy.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-filter_policy.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-filter_policy.Po
#	$(AM_V_CXX)source='leveldb/util/filter_policy.cc' object='leveldb/util/leveldb_libleveldb_a-filter_policy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-filter_policy.obj `if test -f 'leveldb/util/filter_policy.cc'; then $(CYGPATH_W) 'leveldb/util/filter_policy.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/filter_policy.cc'; fi`

leveldb/util/leveldb_libleveldb_a-hash.o: leveldb/util/hash.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-hash.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-hash.Tpo -c -o leveldb/util/leveldb_libleveldb_a-hash.o `test -f 'leveldb/util/hash.cc' || echo '$(srcdir)/'`leveldb/util/hash.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-hash.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-hash.Po
#	$(AM_V_CXX)source='leveldb/util/hash.cc' object='leveldb/util/leveldb_libleveldb_a-hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-hash.o `test -f 'leveldb/util/hash.cc' || echo '$(srcdir)/'`leveldb/util/hash.cc

leveldb/util/leveldb_libleveldb_a-hash.obj: leveldb/util/hash.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-hash.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-hash.Tpo -c -o leveldb/util/leveldb_libleveldb_a-hash.obj `if test -f 'leveldb/util/hash.cc'; then $(CYGPATH_W) 'leveldb/util/hash.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/hash.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-hash.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-hash.Po
#	$(AM_V_CXX)source='leveldb/util/hash.cc' object='leveldb/util/leveldb_libleveldb_a-hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-hash.obj `if test -f 'leveldb/util/hash.cc'; then $(CYGPATH_W) 'leveldb/util/hash.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/hash.cc'; fi`

leveldb/util/leveldb_libleveldb_a-histogram.o: leveldb/util/histogram.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-histogram.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-histogram.Tpo -c -o leveldb/util/leveldb_libleveldb_a-histogram.o `test -f 'leveldb/util/histogram.cc' || echo '$(srcdir)/'`leveldb/util/histogram.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-histogram.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-histogram.Po
#	$(AM_V_CXX)source='leveldb/util/histogram.cc' object='leveldb/util/leveldb_libleveldb_a-histogram.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-histogram.o `test -f 'leveldb/util/histogram.cc' || echo '$(srcdir)/'`leveldb/util/histogram.cc

leveldb/util/leveldb_libleveldb_a-histogram.obj: leveldb/util/histogram.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-histogram.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-histogram.Tpo -c -o leveldb/util/leveldb_libleveldb_a-histogram.obj `if test -f 'leveldb/util/histogram.cc'; then $(CYGPATH_W) 'leveldb/util/histogram.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/histogram.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-histogram.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-histogram.Po
#	$(AM_V_CXX)source='leveldb/util/histogram.cc' object='leveldb/util/leveldb_libleveldb_a-histogram.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-histogram.obj `if test -f 'leveldb/util/histogram.cc'; then $(CYGPATH_W) 'leveldb/util/histogram.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/histogram.cc'; fi`

leveldb/util/leveldb_libleveldb_a-logging.o: leveldb/util/logging.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-logging.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-logging.Tpo -c -o leveldb/util/leveldb_libleveldb_a-logging.o `test -f 'leveldb/util/logging.cc' || echo '$(srcdir)/'`leveldb/util/logging.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-logging.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-logging.Po
#	$(AM_V_CXX)source='leveldb/util/logging.cc' object='leveldb/util/leveldb_libleveldb_a-logging.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-logging.o `test -f 'leveldb/util/logging.cc' || echo '$(srcdir)/'`leveldb/util/logging.cc

leveldb/util/leveldb_libleveldb_a-logging.obj: leveldb/util/logging.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-logging.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-logging.Tpo -c -o leveldb/util/leveldb_libleveldb_a-logging.obj `if test -f 'leveldb/util/logging.cc'; then $(CYGPATH_W) 'leveldb/util/logging.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/logging.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-logging.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-logging.Po
#	$(AM_V_CXX)source='leveldb/util/logging.cc' object='leveldb/util/leveldb_libleveldb_a-logging.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-logging.obj `if test -f 'leveldb/util/logging.cc'; then $(CYGPATH_W) 'leveldb/util/logging.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/logging.cc'; fi`

leveldb/util/leveldb_libleveldb_a-options.o: leveldb/util/options.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-options.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-options.Tpo -c -o leveldb/util/leveldb_libleveldb_a-options.o `test -f 'leveldb/util/options.cc' || echo '$(srcdir)/'`leveldb/util/options.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-options.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-options.Po
#	$(AM_V_CXX)source='leveldb/util/options.cc' object='leveldb/util/leveldb_libleveldb_a-options.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-options.o `test -f 'leveldb/util/options.cc' || echo '$(srcdir)/'`leveldb/util/options.cc

leveldb/util/leveldb_libleveldb_a-options.obj: leveldb/util/options.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-options.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-options.Tpo -c -o leveldb/util/leveldb_libleveldb_a-options.obj `if test -f 'leveldb/util/options.cc'; then $(CYGPATH_W) 'leveldb/util/options.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/options.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-options.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-options.Po
#	$(AM_V_CXX)source='leveldb/util/options.cc' object='leveldb/util/leveldb_libleveldb_a-options.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-options.obj `if test -f 'leveldb/util/options.cc'; then $(CYGPATH_W) 'leveldb/util/options.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/options.cc'; fi`

leveldb/util/leveldb_libleveldb_a-status.o: leveldb/util/status.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-status.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-status.Tpo -c -o leveldb/util/leveldb_libleveldb_a-status.o `test -f 'leveldb/util/status.cc' || echo '$(srcdir)/'`leveldb/util/status.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-status.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-status.Po
#	$(AM_V_CXX)source='leveldb/util/status.cc' object='leveldb/util/leveldb_libleveldb_a-status.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-status.o `test -f 'leveldb/util/status.cc' || echo '$(srcdir)/'`leveldb/util/status.cc

leveldb/util/leveldb_libleveldb_a-status.obj: leveldb/util/status.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-status.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-status.Tpo -c -o leveldb/util/leveldb_libleveldb_a-status.obj `if test -f 'leveldb/util/status.cc'; then $(CYGPATH_W) 'leveldb/util/status.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/status.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-status.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-status.Po
#	$(AM_V_CXX)source='leveldb/util/status.cc' object='leveldb/util/leveldb_libleveldb_a-status.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-status.obj `if test -f 'leveldb/util/status.cc'; then $(CYGPATH_W) 'leveldb/util/status.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/status.cc'; fi`

leveldb/util/leveldb_libleveldb_a-env_win.o: leveldb/util/env_win.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-env_win.o -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_win.Tpo -c -o leveldb/util/leveldb_libleveldb_a-env_win.o `test -f 'leveldb/util/env_win.cc' || echo '$(srcdir)/'`leveldb/util/env_win.cc
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_win.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_win.Po
#	$(AM_V_CXX)source='leveldb/util/env_win.cc' object='leveldb/util/leveldb_libleveldb_a-env_win.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-env_win.o `test -f 'leveldb/util/env_win.cc' || echo '$(srcdir)/'`leveldb/util/env_win.cc

leveldb/util/leveldb_libleveldb_a-env_win.obj: leveldb/util/env_win.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/util/leveldb_libleveldb_a-env_win.obj -MD -MP -MF leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_win.Tpo -c -o leveldb/util/leveldb_libleveldb_a-env_win.obj `if test -f 'leveldb/util/env_win.cc'; then $(CYGPATH_W) 'leveldb/util/env_win.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env_win.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_win.Tpo leveldb/util/$(DEPDIR)/leveldb_libleveldb_a-env_win.Po
#	$(AM_V_CXX)source='leveldb/util/env_win.cc' object='leveldb/util/leveldb_libleveldb_a-env_win.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/util/leveldb_libleveldb_a-env_win.obj `if test -f 'leveldb/util/env_win.cc'; then $(CYGPATH_W) 'leveldb/util/env_win.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/util/env_win.cc'; fi`

leveldb/port/leveldb_libleveldb_a-port_win.o: leveldb/port/port_win.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/port/leveldb_libleveldb_a-port_win.o -MD -MP -MF leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_win.Tpo -c -o leveldb/port/leveldb_libleveldb_a-port_win.o `test -f 'leveldb/port/port_win.cc' || echo '$(srcdir)/'`leveldb/port/port_win.cc
	$(AM_V_at)$(am__mv) leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_win.Tpo leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_win.Po
#	$(AM_V_CXX)source='leveldb/port/port_win.cc' object='leveldb/port/leveldb_libleveldb_a-port_win.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/port/leveldb_libleveldb_a-port_win.o `test -f 'leveldb/port/port_win.cc' || echo '$(srcdir)/'`leveldb/port/port_win.cc

leveldb/port/leveldb_libleveldb_a-port_win.obj: leveldb/port/port_win.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/port/leveldb_libleveldb_a-port_win.obj -MD -MP -MF leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_win.Tpo -c -o leveldb/port/leveldb_libleveldb_a-port_win.obj `if test -f 'leveldb/port/port_win.cc'; then $(CYGPATH_W) 'leveldb/port/port_win.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/port/port_win.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_win.Tpo leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_win.Po
#	$(AM_V_CXX)source='leveldb/port/port_win.cc' object='leveldb/port/leveldb_libleveldb_a-port_win.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/port/leveldb_libleveldb_a-port_win.obj `if test -f 'leveldb/port/port_win.cc'; then $(CYGPATH_W) 'leveldb/port/port_win.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/port/port_win.cc'; fi`

leveldb/port/leveldb_libleveldb_a-port_posix.o: leveldb/port/port_posix.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/port/leveldb_libleveldb_a-port_posix.o -MD -MP -MF leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_posix.Tpo -c -o leveldb/port/leveldb_libleveldb_a-port_posix.o `test -f 'leveldb/port/port_posix.cc' || echo '$(srcdir)/'`leveldb/port/port_posix.cc
	$(AM_V_at)$(am__mv) leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_posix.Tpo leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_posix.Po
#	$(AM_V_CXX)source='leveldb/port/port_posix.cc' object='leveldb/port/leveldb_libleveldb_a-port_posix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/port/leveldb_libleveldb_a-port_posix.o `test -f 'leveldb/port/port_posix.cc' || echo '$(srcdir)/'`leveldb/port/port_posix.cc

leveldb/port/leveldb_libleveldb_a-port_posix.obj: leveldb/port/port_posix.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/port/leveldb_libleveldb_a-port_posix.obj -MD -MP -MF leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_posix.Tpo -c -o leveldb/port/leveldb_libleveldb_a-port_posix.obj `if test -f 'leveldb/port/port_posix.cc'; then $(CYGPATH_W) 'leveldb/port/port_posix.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/port/port_posix.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_posix.Tpo leveldb/port/$(DEPDIR)/leveldb_libleveldb_a-port_posix.Po
#	$(AM_V_CXX)source='leveldb/port/port_posix.cc' object='leveldb/port/leveldb_libleveldb_a-port_posix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libleveldb_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libleveldb_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/port/leveldb_libleveldb_a-port_posix.obj `if test -f 'leveldb/port/port_posix.cc'; then $(CYGPATH_W) 'leveldb/port/port_posix.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/port/port_posix.cc'; fi`

leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.o: leveldb/helpers/memenv/memenv.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libmemenv_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libmemenv_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.o -MD -MP -MF leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_a-memenv.Tpo -c -o leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.o `test -f 'leveldb/helpers/memenv/memenv.cc' || echo '$(srcdir)/'`leveldb/helpers/memenv/memenv.cc
	$(AM_V_at)$(am__mv) leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_a-memenv.Tpo leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_a-memenv.Po
#	$(AM_V_CXX)source='leveldb/helpers/memenv/memenv.cc' object='leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libmemenv_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libmemenv_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.o `test -f 'leveldb/helpers/memenv/memenv.cc' || echo '$(srcdir)/'`leveldb/helpers/memenv/memenv.cc

leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.obj: leveldb/helpers/memenv/memenv.cc
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libmemenv_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libmemenv_a_CXXFLAGS) $(CXXFLAGS) -MT leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.obj -MD -MP -MF leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_a-memenv.Tpo -c -o leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.obj `if test -f 'leveldb/helpers/memenv/memenv.cc'; then $(CYGPATH_W) 'leveldb/helpers/memenv/memenv.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/helpers/memenv/memenv.cc'; fi`
	$(AM_V_at)$(am__mv) leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_a-memenv.Tpo leveldb/helpers/memenv/$(DEPDIR)/leveldb_libmemenv_a-memenv.Po
#	$(AM_V_CXX)source='leveldb/helpers/memenv/memenv.cc' object='leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(leveldb_libmemenv_a_CPPFLAGS) $(CPPFLAGS) $(leveldb_libmemenv_a_CXXFLAGS) $(CXXFLAGS) -c -o leveldb/helpers/memenv/leveldb_libmemenv_a-memenv.obj `if test -f 'leveldb/helpers/memenv/memenv.cc'; then $(CYGPATH_W) 'leveldb/helpers/memenv/memenv.cc'; else $(CYGPATH_W) '$(srcdir)/leveldb/helpers/memenv/memenv.cc'; fi`

crypto/libvds_a-sha256.o: crypto/sha256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libvds_a-sha256.o -MD -MP -MF crypto/$(DEPDIR)/libvds_a-sha256.Tpo -c -o crypto/libvds_a-sha256.o `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libvds_a-sha256.Tpo crypto/$(DEPDIR)/libvds_a-sha256.Po
#	$(AM_V_CXX)source='crypto/sha256.cpp' object='crypto/libvds_a-sha256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libvds_a-sha256.o `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp

crypto/libvds_a-sha256.obj: crypto/sha256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libvds_a-sha256.obj -MD -MP -MF crypto/$(DEPDIR)/libvds_a-sha256.Tpo -c -o crypto/libvds_a-sha256.obj `if test -f 'crypto/sha256.cpp'; then $(CYGPATH_W) 'crypto/sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libvds_a-sha256.Tpo crypto/$(DEPDIR)/libvds_a-sha256.Po
#	$(AM_V_CXX)source='crypto/sha256.cpp' object='crypto/libvds_a-sha256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libvds_a-sha256.obj `if test -f 'crypto/sha256.cpp'; then $(CYGPATH_W) 'crypto/sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256.cpp'; fi`

vds/libvds_a-IncrementalMerkleTree.o: vds/IncrementalMerkleTree.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -MT vds/libvds_a-IncrementalMerkleTree.o -MD -MP -MF vds/$(DEPDIR)/libvds_a-IncrementalMerkleTree.Tpo -c -o vds/libvds_a-IncrementalMerkleTree.o `test -f 'vds/IncrementalMerkleTree.cpp' || echo '$(srcdir)/'`vds/IncrementalMerkleTree.cpp
	$(AM_V_at)$(am__mv) vds/$(DEPDIR)/libvds_a-IncrementalMerkleTree.Tpo vds/$(DEPDIR)/libvds_a-IncrementalMerkleTree.Po
#	$(AM_V_CXX)source='vds/IncrementalMerkleTree.cpp' object='vds/libvds_a-IncrementalMerkleTree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -c -o vds/libvds_a-IncrementalMerkleTree.o `test -f 'vds/IncrementalMerkleTree.cpp' || echo '$(srcdir)/'`vds/IncrementalMerkleTree.cpp

vds/libvds_a-IncrementalMerkleTree.obj: vds/IncrementalMerkleTree.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -MT vds/libvds_a-IncrementalMerkleTree.obj -MD -MP -MF vds/$(DEPDIR)/libvds_a-IncrementalMerkleTree.Tpo -c -o vds/libvds_a-IncrementalMerkleTree.obj `if test -f 'vds/IncrementalMerkleTree.cpp'; then $(CYGPATH_W) 'vds/IncrementalMerkleTree.cpp'; else $(CYGPATH_W) '$(srcdir)/vds/IncrementalMerkleTree.cpp'; fi`
	$(AM_V_at)$(am__mv) vds/$(DEPDIR)/libvds_a-IncrementalMerkleTree.Tpo vds/$(DEPDIR)/libvds_a-IncrementalMerkleTree.Po
#	$(AM_V_CXX)source='vds/IncrementalMerkleTree.cpp' object='vds/libvds_a-IncrementalMerkleTree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -c -o vds/libvds_a-IncrementalMerkleTree.obj `if test -f 'vds/IncrementalMerkleTree.cpp'; then $(CYGPATH_W) 'vds/IncrementalMerkleTree.cpp'; else $(CYGPATH_W) '$(srcdir)/vds/IncrementalMerkleTree.cpp'; fi`

vds/libvds_a-NoteEncryption.o: vds/NoteEncryption.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -MT vds/libvds_a-NoteEncryption.o -MD -MP -MF vds/$(DEPDIR)/libvds_a-NoteEncryption.Tpo -c -o vds/libvds_a-NoteEncryption.o `test -f 'vds/NoteEncryption.cpp' || echo '$(srcdir)/'`vds/NoteEncryption.cpp
	$(AM_V_at)$(am__mv) vds/$(DEPDIR)/libvds_a-NoteEncryption.Tpo vds/$(DEPDIR)/libvds_a-NoteEncryption.Po
#	$(AM_V_CXX)source='vds/NoteEncryption.cpp' object='vds/libvds_a-NoteEncryption.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -c -o vds/libvds_a-NoteEncryption.o `test -f 'vds/NoteEncryption.cpp' || echo '$(srcdir)/'`vds/NoteEncryption.cpp

vds/libvds_a-NoteEncryption.obj: vds/NoteEncryption.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -MT vds/libvds_a-NoteEncryption.obj -MD -MP -MF vds/$(DEPDIR)/libvds_a-NoteEncryption.Tpo -c -o vds/libvds_a-NoteEncryption.obj `if test -f 'vds/NoteEncryption.cpp'; then $(CYGPATH_W) 'vds/NoteEncryption.cpp'; else $(CYGPATH_W) '$(srcdir)/vds/NoteEncryption.cpp'; fi`
	$(AM_V_at)$(am__mv) vds/$(DEPDIR)/libvds_a-NoteEncryption.Tpo vds/$(DEPDIR)/libvds_a-NoteEncryption.Po
#	$(AM_V_CXX)source='vds/NoteEncryption.cpp' object='vds/libvds_a-NoteEncryption.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -c -o vds/libvds_a-NoteEncryption.obj `if test -f 'vds/NoteEncryption.cpp'; then $(CYGPATH_W) 'vds/NoteEncryption.cpp'; else $(CYGPATH_W) '$(srcdir)/vds/NoteEncryption.cpp'; fi`

vds/libvds_a-Address.o: vds/Address.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -MT vds/libvds_a-Address.o -MD -MP -MF vds/$(DEPDIR)/libvds_a-Address.Tpo -c -o vds/libvds_a-Address.o `test -f 'vds/Address.cpp' || echo '$(srcdir)/'`vds/Address.cpp
	$(AM_V_at)$(am__mv) vds/$(DEPDIR)/libvds_a-Address.Tpo vds/$(DEPDIR)/libvds_a-Address.Po
#	$(AM_V_CXX)source='vds/Address.cpp' object='vds/libvds_a-Address.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -c -o vds/libvds_a-Address.o `test -f 'vds/Address.cpp' || echo '$(srcdir)/'`vds/Address.cpp

vds/libvds_a-Address.obj: vds/Address.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -MT vds/libvds_a-Address.obj -MD -MP -MF vds/$(DEPDIR)/libvds_a-Address.Tpo -c -o vds/libvds_a-Address.obj `if test -f 'vds/Address.cpp'; then $(CYGPATH_W) 'vds/Address.cpp'; else $(CYGPATH_W) '$(srcdir)/vds/Address.cpp'; fi`
	$(AM_V_at)$(am__mv) vds/$(DEPDIR)/libvds_a-Address.Tpo vds/$(DEPDIR)/libvds_a-Address.Po
#	$(AM_V_CXX)source='vds/Address.cpp' object='vds/libvds_a-Address.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -c -o vds/libvds_a-Address.obj `if test -f 'vds/Address.cpp'; then $(CYGPATH_W) 'vds/Address.cpp'; else $(CYGPATH_W) '$(srcdir)/vds/Address.cpp'; fi`

vds/libvds_a-JoinSplit.o: vds/JoinSplit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -MT vds/libvds_a-JoinSplit.o -MD -MP -MF vds/$(DEPDIR)/libvds_a-JoinSplit.Tpo -c -o vds/libvds_a-JoinSplit.o `test -f 'vds/JoinSplit.cpp' || echo '$(srcdir)/'`vds/JoinSplit.cpp
	$(AM_V_at)$(am__mv) vds/$(DEPDIR)/libvds_a-JoinSplit.Tpo vds/$(DEPDIR)/libvds_a-JoinSplit.Po
#	$(AM_V_CXX)source='vds/JoinSplit.cpp' object='vds/libvds_a-JoinSplit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -c -o vds/libvds_a-JoinSplit.o `test -f 'vds/JoinSplit.cpp' || echo '$(srcdir)/'`vds/JoinSplit.cpp

vds/libvds_a-JoinSplit.obj: vds/JoinSplit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -MT vds/libvds_a-JoinSplit.obj -MD -MP -MF vds/$(DEPDIR)/libvds_a-JoinSplit.Tpo -c -o vds/libvds_a-JoinSplit.obj `if test -f 'vds/JoinSplit.cpp'; then $(CYGPATH_W) 'vds/JoinSplit.cpp'; else $(CYGPATH_W) '$(srcdir)/vds/JoinSplit.cpp'; fi`
	$(AM_V_at)$(am__mv) vds/$(DEPDIR)/libvds_a-JoinSplit.Tpo vds/$(DEPDIR)/libvds_a-JoinSplit.Po
#	$(AM_V_CXX)source='vds/JoinSplit.cpp' object='vds/libvds_a-JoinSplit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -c -o vds/libvds_a-JoinSplit.obj `if test -f 'vds/JoinSplit.cpp'; then $(CYGPATH_W) 'vds/JoinSplit.cpp'; else $(CYGPATH_W) '$(srcdir)/vds/JoinSplit.cpp'; fi`

vds/libvds_a-Proof.o: vds/Proof.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -MT vds/libvds_a-Proof.o -MD -MP -MF vds/$(DEPDIR)/libvds_a-Proof.Tpo -c -o vds/libvds_a-Proof.o `test -f 'vds/Proof.cpp' || echo '$(srcdir)/'`vds/Proof.cpp
	$(AM_V_at)$(am__mv) vds/$(DEPDIR)/libvds_a-Proof.Tpo vds/$(DEPDIR)/libvds_a-Proof.Po
#	$(AM_V_CXX)source='vds/Proof.cpp' object='vds/libvds_a-Proof.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -c -o vds/libvds_a-Proof.o `test -f 'vds/Proof.cpp' || echo '$(srcdir)/'`vds/Proof.cpp

vds/libvds_a-Proof.obj: vds/Proof.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -MT vds/libvds_a-Proof.obj -MD -MP -MF vds/$(DEPDIR)/libvds_a-Proof.Tpo -c -o vds/libvds_a-Proof.obj `if test -f 'vds/Proof.cpp'; then $(CYGPATH_W) 'vds/Proof.cpp'; else $(CYGPATH_W) '$(srcdir)/vds/Proof.cpp'; fi`
	$(AM_V_at)$(am__mv) vds/$(DEPDIR)/libvds_a-Proof.Tpo vds/$(DEPDIR)/libvds_a-Proof.Po
#	$(AM_V_CXX)source='vds/Proof.cpp' object='vds/libvds_a-Proof.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -c -o vds/libvds_a-Proof.obj `if test -f 'vds/Proof.cpp'; then $(CYGPATH_W) 'vds/Proof.cpp'; else $(CYGPATH_W) '$(srcdir)/vds/Proof.cpp'; fi`

vds/libvds_a-Note.o: vds/Note.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -MT vds/libvds_a-Note.o -MD -MP -MF vds/$(DEPDIR)/libvds_a-Note.Tpo -c -o vds/libvds_a-Note.o `test -f 'vds/Note.cpp' || echo '$(srcdir)/'`vds/Note.cpp
	$(AM_V_at)$(am__mv) vds/$(DEPDIR)/libvds_a-Note.Tpo vds/$(DEPDIR)/libvds_a-Note.Po
#	$(AM_V_CXX)source='vds/Note.cpp' object='vds/libvds_a-Note.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -c -o vds/libvds_a-Note.o `test -f 'vds/Note.cpp' || echo '$(srcdir)/'`vds/Note.cpp

vds/libvds_a-Note.obj: vds/Note.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -MT vds/libvds_a-Note.obj -MD -MP -MF vds/$(DEPDIR)/libvds_a-Note.Tpo -c -o vds/libvds_a-Note.obj `if test -f 'vds/Note.cpp'; then $(CYGPATH_W) 'vds/Note.cpp'; else $(CYGPATH_W) '$(srcdir)/vds/Note.cpp'; fi`
	$(AM_V_at)$(am__mv) vds/$(DEPDIR)/libvds_a-Note.Tpo vds/$(DEPDIR)/libvds_a-Note.Po
#	$(AM_V_CXX)source='vds/Note.cpp' object='vds/libvds_a-Note.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -c -o vds/libvds_a-Note.obj `if test -f 'vds/Note.cpp'; then $(CYGPATH_W) 'vds/Note.cpp'; else $(CYGPATH_W) '$(srcdir)/vds/Note.cpp'; fi`

vds/libvds_a-prf.o: vds/prf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -MT vds/libvds_a-prf.o -MD -MP -MF vds/$(DEPDIR)/libvds_a-prf.Tpo -c -o vds/libvds_a-prf.o `test -f 'vds/prf.cpp' || echo '$(srcdir)/'`vds/prf.cpp
	$(AM_V_at)$(am__mv) vds/$(DEPDIR)/libvds_a-prf.Tpo vds/$(DEPDIR)/libvds_a-prf.Po
#	$(AM_V_CXX)source='vds/prf.cpp' object='vds/libvds_a-prf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -c -o vds/libvds_a-prf.o `test -f 'vds/prf.cpp' || echo '$(srcdir)/'`vds/prf.cpp

vds/libvds_a-prf.obj: vds/prf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -MT vds/libvds_a-prf.obj -MD -MP -MF vds/$(DEPDIR)/libvds_a-prf.Tpo -c -o vds/libvds_a-prf.obj `if test -f 'vds/prf.cpp'; then $(CYGPATH_W) 'vds/prf.cpp'; else $(CYGPATH_W) '$(srcdir)/vds/prf.cpp'; fi`
	$(AM_V_at)$(am__mv) vds/$(DEPDIR)/libvds_a-prf.Tpo vds/$(DEPDIR)/libvds_a-prf.Po
#	$(AM_V_CXX)source='vds/prf.cpp' object='vds/libvds_a-prf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -c -o vds/libvds_a-prf.obj `if test -f 'vds/prf.cpp'; then $(CYGPATH_W) 'vds/prf.cpp'; else $(CYGPATH_W) '$(srcdir)/vds/prf.cpp'; fi`

vds/libvds_a-util.o: vds/util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -MT vds/libvds_a-util.o -MD -MP -MF vds/$(DEPDIR)/libvds_a-util.Tpo -c -o vds/libvds_a-util.o `test -f 'vds/util.cpp' || echo '$(srcdir)/'`vds/util.cpp
	$(AM_V_at)$(am__mv) vds/$(DEPDIR)/libvds_a-util.Tpo vds/$(DEPDIR)/libvds_a-util.Po
#	$(AM_V_CXX)source='vds/util.cpp' object='vds/libvds_a-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -c -o vds/libvds_a-util.o `test -f 'vds/util.cpp' || echo '$(srcdir)/'`vds/util.cpp

vds/libvds_a-util.obj: vds/util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -MT vds/libvds_a-util.obj -MD -MP -MF vds/$(DEPDIR)/libvds_a-util.Tpo -c -o vds/libvds_a-util.obj `if test -f 'vds/util.cpp'; then $(CYGPATH_W) 'vds/util.cpp'; else $(CYGPATH_W) '$(srcdir)/vds/util.cpp'; fi`
	$(AM_V_at)$(am__mv) vds/$(DEPDIR)/libvds_a-util.Tpo vds/$(DEPDIR)/libvds_a-util.Po
#	$(AM_V_CXX)source='vds/util.cpp' object='vds/libvds_a-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -c -o vds/libvds_a-util.obj `if test -f 'vds/util.cpp'; then $(CYGPATH_W) 'vds/util.cpp'; else $(CYGPATH_W) '$(srcdir)/vds/util.cpp'; fi`

vds/libvds_a-zip32.o: vds/zip32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -MT vds/libvds_a-zip32.o -MD -MP -MF vds/$(DEPDIR)/libvds_a-zip32.Tpo -c -o vds/libvds_a-zip32.o `test -f 'vds/zip32.cpp' || echo '$(srcdir)/'`vds/zip32.cpp
	$(AM_V_at)$(am__mv) vds/$(DEPDIR)/libvds_a-zip32.Tpo vds/$(DEPDIR)/libvds_a-zip32.Po
#	$(AM_V_CXX)source='vds/zip32.cpp' object='vds/libvds_a-zip32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -c -o vds/libvds_a-zip32.o `test -f 'vds/zip32.cpp' || echo '$(srcdir)/'`vds/zip32.cpp

vds/libvds_a-zip32.obj: vds/zip32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -MT vds/libvds_a-zip32.obj -MD -MP -MF vds/$(DEPDIR)/libvds_a-zip32.Tpo -c -o vds/libvds_a-zip32.obj `if test -f 'vds/zip32.cpp'; then $(CYGPATH_W) 'vds/zip32.cpp'; else $(CYGPATH_W) '$(srcdir)/vds/zip32.cpp'; fi`
	$(AM_V_at)$(am__mv) vds/$(DEPDIR)/libvds_a-zip32.Tpo vds/$(DEPDIR)/libvds_a-zip32.Po
#	$(AM_V_CXX)source='vds/zip32.cpp' object='vds/libvds_a-zip32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_a_CPPFLAGS) $(CPPFLAGS) $(libvds_a_CXXFLAGS) $(CXXFLAGS) -c -o vds/libvds_a-zip32.obj `if test -f 'vds/zip32.cpp'; then $(CYGPATH_W) 'vds/zip32.cpp'; else $(CYGPATH_W) '$(srcdir)/vds/zip32.cpp'; fi`

rpc/libvds_cli_a-client.o: rpc/client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_cli_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/libvds_cli_a-client.o -MD -MP -MF rpc/$(DEPDIR)/libvds_cli_a-client.Tpo -c -o rpc/libvds_cli_a-client.o `test -f 'rpc/client.cpp' || echo '$(srcdir)/'`rpc/client.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libvds_cli_a-client.Tpo rpc/$(DEPDIR)/libvds_cli_a-client.Po
#	$(AM_V_CXX)source='rpc/client.cpp' object='rpc/libvds_cli_a-client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_cli_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libvds_cli_a-client.o `test -f 'rpc/client.cpp' || echo '$(srcdir)/'`rpc/client.cpp

rpc/libvds_cli_a-client.obj: rpc/client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_cli_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/libvds_cli_a-client.obj -MD -MP -MF rpc/$(DEPDIR)/libvds_cli_a-client.Tpo -c -o rpc/libvds_cli_a-client.obj `if test -f 'rpc/client.cpp'; then $(CYGPATH_W) 'rpc/client.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/client.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libvds_cli_a-client.Tpo rpc/$(DEPDIR)/libvds_cli_a-client.Po
#	$(AM_V_CXX)source='rpc/client.cpp' object='rpc/libvds_cli_a-client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_cli_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libvds_cli_a-client.obj `if test -f 'rpc/client.cpp'; then $(CYGPATH_W) 'rpc/client.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/client.cpp'; fi`

libvds_common_a-arith_uint256.o: arith_uint256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-arith_uint256.o -MD -MP -MF $(DEPDIR)/libvds_common_a-arith_uint256.Tpo -c -o libvds_common_a-arith_uint256.o `test -f 'arith_uint256.cpp' || echo '$(srcdir)/'`arith_uint256.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-arith_uint256.Tpo $(DEPDIR)/libvds_common_a-arith_uint256.Po
#	$(AM_V_CXX)source='arith_uint256.cpp' object='libvds_common_a-arith_uint256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-arith_uint256.o `test -f 'arith_uint256.cpp' || echo '$(srcdir)/'`arith_uint256.cpp

libvds_common_a-arith_uint256.obj: arith_uint256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-arith_uint256.obj -MD -MP -MF $(DEPDIR)/libvds_common_a-arith_uint256.Tpo -c -o libvds_common_a-arith_uint256.obj `if test -f 'arith_uint256.cpp'; then $(CYGPATH_W) 'arith_uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/arith_uint256.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-arith_uint256.Tpo $(DEPDIR)/libvds_common_a-arith_uint256.Po
#	$(AM_V_CXX)source='arith_uint256.cpp' object='libvds_common_a-arith_uint256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-arith_uint256.obj `if test -f 'arith_uint256.cpp'; then $(CYGPATH_W) 'arith_uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/arith_uint256.cpp'; fi`

libvds_common_a-base58.o: base58.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-base58.o -MD -MP -MF $(DEPDIR)/libvds_common_a-base58.Tpo -c -o libvds_common_a-base58.o `test -f 'base58.cpp' || echo '$(srcdir)/'`base58.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-base58.Tpo $(DEPDIR)/libvds_common_a-base58.Po
#	$(AM_V_CXX)source='base58.cpp' object='libvds_common_a-base58.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-base58.o `test -f 'base58.cpp' || echo '$(srcdir)/'`base58.cpp

libvds_common_a-base58.obj: base58.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-base58.obj -MD -MP -MF $(DEPDIR)/libvds_common_a-base58.Tpo -c -o libvds_common_a-base58.obj `if test -f 'base58.cpp'; then $(CYGPATH_W) 'base58.cpp'; else $(CYGPATH_W) '$(srcdir)/base58.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-base58.Tpo $(DEPDIR)/libvds_common_a-base58.Po
#	$(AM_V_CXX)source='base58.cpp' object='libvds_common_a-base58.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-base58.obj `if test -f 'base58.cpp'; then $(CYGPATH_W) 'base58.cpp'; else $(CYGPATH_W) '$(srcdir)/base58.cpp'; fi`

libvds_common_a-bech32.o: bech32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-bech32.o -MD -MP -MF $(DEPDIR)/libvds_common_a-bech32.Tpo -c -o libvds_common_a-bech32.o `test -f 'bech32.cpp' || echo '$(srcdir)/'`bech32.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-bech32.Tpo $(DEPDIR)/libvds_common_a-bech32.Po
#	$(AM_V_CXX)source='bech32.cpp' object='libvds_common_a-bech32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-bech32.o `test -f 'bech32.cpp' || echo '$(srcdir)/'`bech32.cpp

libvds_common_a-bech32.obj: bech32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-bech32.obj -MD -MP -MF $(DEPDIR)/libvds_common_a-bech32.Tpo -c -o libvds_common_a-bech32.obj `if test -f 'bech32.cpp'; then $(CYGPATH_W) 'bech32.cpp'; else $(CYGPATH_W) '$(srcdir)/bech32.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-bech32.Tpo $(DEPDIR)/libvds_common_a-bech32.Po
#	$(AM_V_CXX)source='bech32.cpp' object='libvds_common_a-bech32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-bech32.obj `if test -f 'bech32.cpp'; then $(CYGPATH_W) 'bech32.cpp'; else $(CYGPATH_W) '$(srcdir)/bech32.cpp'; fi`

libvds_common_a-chainparams.o: chainparams.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-chainparams.o -MD -MP -MF $(DEPDIR)/libvds_common_a-chainparams.Tpo -c -o libvds_common_a-chainparams.o `test -f 'chainparams.cpp' || echo '$(srcdir)/'`chainparams.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-chainparams.Tpo $(DEPDIR)/libvds_common_a-chainparams.Po
#	$(AM_V_CXX)source='chainparams.cpp' object='libvds_common_a-chainparams.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-chainparams.o `test -f 'chainparams.cpp' || echo '$(srcdir)/'`chainparams.cpp

libvds_common_a-chainparams.obj: chainparams.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-chainparams.obj -MD -MP -MF $(DEPDIR)/libvds_common_a-chainparams.Tpo -c -o libvds_common_a-chainparams.obj `if test -f 'chainparams.cpp'; then $(CYGPATH_W) 'chainparams.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparams.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-chainparams.Tpo $(DEPDIR)/libvds_common_a-chainparams.Po
#	$(AM_V_CXX)source='chainparams.cpp' object='libvds_common_a-chainparams.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-chainparams.obj `if test -f 'chainparams.cpp'; then $(CYGPATH_W) 'chainparams.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparams.cpp'; fi`

libvds_common_a-coins.o: coins.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-coins.o -MD -MP -MF $(DEPDIR)/libvds_common_a-coins.Tpo -c -o libvds_common_a-coins.o `test -f 'coins.cpp' || echo '$(srcdir)/'`coins.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-coins.Tpo $(DEPDIR)/libvds_common_a-coins.Po
#	$(AM_V_CXX)source='coins.cpp' object='libvds_common_a-coins.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-coins.o `test -f 'coins.cpp' || echo '$(srcdir)/'`coins.cpp

libvds_common_a-coins.obj: coins.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-coins.obj -MD -MP -MF $(DEPDIR)/libvds_common_a-coins.Tpo -c -o libvds_common_a-coins.obj `if test -f 'coins.cpp'; then $(CYGPATH_W) 'coins.cpp'; else $(CYGPATH_W) '$(srcdir)/coins.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-coins.Tpo $(DEPDIR)/libvds_common_a-coins.Po
#	$(AM_V_CXX)source='coins.cpp' object='libvds_common_a-coins.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-coins.obj `if test -f 'coins.cpp'; then $(CYGPATH_W) 'coins.cpp'; else $(CYGPATH_W) '$(srcdir)/coins.cpp'; fi`

libvds_common_a-compressor.o: compressor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-compressor.o -MD -MP -MF $(DEPDIR)/libvds_common_a-compressor.Tpo -c -o libvds_common_a-compressor.o `test -f 'compressor.cpp' || echo '$(srcdir)/'`compressor.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-compressor.Tpo $(DEPDIR)/libvds_common_a-compressor.Po
#	$(AM_V_CXX)source='compressor.cpp' object='libvds_common_a-compressor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-compressor.o `test -f 'compressor.cpp' || echo '$(srcdir)/'`compressor.cpp

libvds_common_a-compressor.obj: compressor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-compressor.obj -MD -MP -MF $(DEPDIR)/libvds_common_a-compressor.Tpo -c -o libvds_common_a-compressor.obj `if test -f 'compressor.cpp'; then $(CYGPATH_W) 'compressor.cpp'; else $(CYGPATH_W) '$(srcdir)/compressor.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-compressor.Tpo $(DEPDIR)/libvds_common_a-compressor.Po
#	$(AM_V_CXX)source='compressor.cpp' object='libvds_common_a-compressor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-compressor.obj `if test -f 'compressor.cpp'; then $(CYGPATH_W) 'compressor.cpp'; else $(CYGPATH_W) '$(srcdir)/compressor.cpp'; fi`

libvds_common_a-core_read.o: core_read.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-core_read.o -MD -MP -MF $(DEPDIR)/libvds_common_a-core_read.Tpo -c -o libvds_common_a-core_read.o `test -f 'core_read.cpp' || echo '$(srcdir)/'`core_read.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-core_read.Tpo $(DEPDIR)/libvds_common_a-core_read.Po
#	$(AM_V_CXX)source='core_read.cpp' object='libvds_common_a-core_read.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-core_read.o `test -f 'core_read.cpp' || echo '$(srcdir)/'`core_read.cpp

libvds_common_a-core_read.obj: core_read.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-core_read.obj -MD -MP -MF $(DEPDIR)/libvds_common_a-core_read.Tpo -c -o libvds_common_a-core_read.obj `if test -f 'core_read.cpp'; then $(CYGPATH_W) 'core_read.cpp'; else $(CYGPATH_W) '$(srcdir)/core_read.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-core_read.Tpo $(DEPDIR)/libvds_common_a-core_read.Po
#	$(AM_V_CXX)source='core_read.cpp' object='libvds_common_a-core_read.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-core_read.obj `if test -f 'core_read.cpp'; then $(CYGPATH_W) 'core_read.cpp'; else $(CYGPATH_W) '$(srcdir)/core_read.cpp'; fi`

libvds_common_a-core_write.o: core_write.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-core_write.o -MD -MP -MF $(DEPDIR)/libvds_common_a-core_write.Tpo -c -o libvds_common_a-core_write.o `test -f 'core_write.cpp' || echo '$(srcdir)/'`core_write.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-core_write.Tpo $(DEPDIR)/libvds_common_a-core_write.Po
#	$(AM_V_CXX)source='core_write.cpp' object='libvds_common_a-core_write.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-core_write.o `test -f 'core_write.cpp' || echo '$(srcdir)/'`core_write.cpp

libvds_common_a-core_write.obj: core_write.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-core_write.obj -MD -MP -MF $(DEPDIR)/libvds_common_a-core_write.Tpo -c -o libvds_common_a-core_write.obj `if test -f 'core_write.cpp'; then $(CYGPATH_W) 'core_write.cpp'; else $(CYGPATH_W) '$(srcdir)/core_write.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-core_write.Tpo $(DEPDIR)/libvds_common_a-core_write.Po
#	$(AM_V_CXX)source='core_write.cpp' object='libvds_common_a-core_write.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-core_write.obj `if test -f 'core_write.cpp'; then $(CYGPATH_W) 'core_write.cpp'; else $(CYGPATH_W) '$(srcdir)/core_write.cpp'; fi`

libvds_common_a-eccryptoverify.o: eccryptoverify.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-eccryptoverify.o -MD -MP -MF $(DEPDIR)/libvds_common_a-eccryptoverify.Tpo -c -o libvds_common_a-eccryptoverify.o `test -f 'eccryptoverify.cpp' || echo '$(srcdir)/'`eccryptoverify.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-eccryptoverify.Tpo $(DEPDIR)/libvds_common_a-eccryptoverify.Po
#	$(AM_V_CXX)source='eccryptoverify.cpp' object='libvds_common_a-eccryptoverify.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-eccryptoverify.o `test -f 'eccryptoverify.cpp' || echo '$(srcdir)/'`eccryptoverify.cpp

libvds_common_a-eccryptoverify.obj: eccryptoverify.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-eccryptoverify.obj -MD -MP -MF $(DEPDIR)/libvds_common_a-eccryptoverify.Tpo -c -o libvds_common_a-eccryptoverify.obj `if test -f 'eccryptoverify.cpp'; then $(CYGPATH_W) 'eccryptoverify.cpp'; else $(CYGPATH_W) '$(srcdir)/eccryptoverify.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-eccryptoverify.Tpo $(DEPDIR)/libvds_common_a-eccryptoverify.Po
#	$(AM_V_CXX)source='eccryptoverify.cpp' object='libvds_common_a-eccryptoverify.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-eccryptoverify.obj `if test -f 'eccryptoverify.cpp'; then $(CYGPATH_W) 'eccryptoverify.cpp'; else $(CYGPATH_W) '$(srcdir)/eccryptoverify.cpp'; fi`

libvds_common_a-ecwrapper.o: ecwrapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-ecwrapper.o -MD -MP -MF $(DEPDIR)/libvds_common_a-ecwrapper.Tpo -c -o libvds_common_a-ecwrapper.o `test -f 'ecwrapper.cpp' || echo '$(srcdir)/'`ecwrapper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-ecwrapper.Tpo $(DEPDIR)/libvds_common_a-ecwrapper.Po
#	$(AM_V_CXX)source='ecwrapper.cpp' object='libvds_common_a-ecwrapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-ecwrapper.o `test -f 'ecwrapper.cpp' || echo '$(srcdir)/'`ecwrapper.cpp

libvds_common_a-ecwrapper.obj: ecwrapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-ecwrapper.obj -MD -MP -MF $(DEPDIR)/libvds_common_a-ecwrapper.Tpo -c -o libvds_common_a-ecwrapper.obj `if test -f 'ecwrapper.cpp'; then $(CYGPATH_W) 'ecwrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/ecwrapper.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-ecwrapper.Tpo $(DEPDIR)/libvds_common_a-ecwrapper.Po
#	$(AM_V_CXX)source='ecwrapper.cpp' object='libvds_common_a-ecwrapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-ecwrapper.obj `if test -f 'ecwrapper.cpp'; then $(CYGPATH_W) 'ecwrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/ecwrapper.cpp'; fi`

libvds_common_a-hash.o: hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-hash.o -MD -MP -MF $(DEPDIR)/libvds_common_a-hash.Tpo -c -o libvds_common_a-hash.o `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-hash.Tpo $(DEPDIR)/libvds_common_a-hash.Po
#	$(AM_V_CXX)source='hash.cpp' object='libvds_common_a-hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-hash.o `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp

libvds_common_a-hash.obj: hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-hash.obj -MD -MP -MF $(DEPDIR)/libvds_common_a-hash.Tpo -c -o libvds_common_a-hash.obj `if test -f 'hash.cpp'; then $(CYGPATH_W) 'hash.cpp'; else $(CYGPATH_W) '$(srcdir)/hash.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-hash.Tpo $(DEPDIR)/libvds_common_a-hash.Po
#	$(AM_V_CXX)source='hash.cpp' object='libvds_common_a-hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-hash.obj `if test -f 'hash.cpp'; then $(CYGPATH_W) 'hash.cpp'; else $(CYGPATH_W) '$(srcdir)/hash.cpp'; fi`

libvds_common_a-key.o: key.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-key.o -MD -MP -MF $(DEPDIR)/libvds_common_a-key.Tpo -c -o libvds_common_a-key.o `test -f 'key.cpp' || echo '$(srcdir)/'`key.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-key.Tpo $(DEPDIR)/libvds_common_a-key.Po
#	$(AM_V_CXX)source='key.cpp' object='libvds_common_a-key.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-key.o `test -f 'key.cpp' || echo '$(srcdir)/'`key.cpp

libvds_common_a-key.obj: key.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-key.obj -MD -MP -MF $(DEPDIR)/libvds_common_a-key.Tpo -c -o libvds_common_a-key.obj `if test -f 'key.cpp'; then $(CYGPATH_W) 'key.cpp'; else $(CYGPATH_W) '$(srcdir)/key.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-key.Tpo $(DEPDIR)/libvds_common_a-key.Po
#	$(AM_V_CXX)source='key.cpp' object='libvds_common_a-key.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-key.obj `if test -f 'key.cpp'; then $(CYGPATH_W) 'key.cpp'; else $(CYGPATH_W) '$(srcdir)/key.cpp'; fi`

libvds_common_a-key_io.o: key_io.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-key_io.o -MD -MP -MF $(DEPDIR)/libvds_common_a-key_io.Tpo -c -o libvds_common_a-key_io.o `test -f 'key_io.cpp' || echo '$(srcdir)/'`key_io.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-key_io.Tpo $(DEPDIR)/libvds_common_a-key_io.Po
#	$(AM_V_CXX)source='key_io.cpp' object='libvds_common_a-key_io.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-key_io.o `test -f 'key_io.cpp' || echo '$(srcdir)/'`key_io.cpp

libvds_common_a-key_io.obj: key_io.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-key_io.obj -MD -MP -MF $(DEPDIR)/libvds_common_a-key_io.Tpo -c -o libvds_common_a-key_io.obj `if test -f 'key_io.cpp'; then $(CYGPATH_W) 'key_io.cpp'; else $(CYGPATH_W) '$(srcdir)/key_io.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-key_io.Tpo $(DEPDIR)/libvds_common_a-key_io.Po
#	$(AM_V_CXX)source='key_io.cpp' object='libvds_common_a-key_io.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-key_io.obj `if test -f 'key_io.cpp'; then $(CYGPATH_W) 'key_io.cpp'; else $(CYGPATH_W) '$(srcdir)/key_io.cpp'; fi`

libvds_common_a-keystore.o: keystore.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-keystore.o -MD -MP -MF $(DEPDIR)/libvds_common_a-keystore.Tpo -c -o libvds_common_a-keystore.o `test -f 'keystore.cpp' || echo '$(srcdir)/'`keystore.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-keystore.Tpo $(DEPDIR)/libvds_common_a-keystore.Po
#	$(AM_V_CXX)source='keystore.cpp' object='libvds_common_a-keystore.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-keystore.o `test -f 'keystore.cpp' || echo '$(srcdir)/'`keystore.cpp

libvds_common_a-keystore.obj: keystore.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-keystore.obj -MD -MP -MF $(DEPDIR)/libvds_common_a-keystore.Tpo -c -o libvds_common_a-keystore.obj `if test -f 'keystore.cpp'; then $(CYGPATH_W) 'keystore.cpp'; else $(CYGPATH_W) '$(srcdir)/keystore.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-keystore.Tpo $(DEPDIR)/libvds_common_a-keystore.Po
#	$(AM_V_CXX)source='keystore.cpp' object='libvds_common_a-keystore.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-keystore.obj `if test -f 'keystore.cpp'; then $(CYGPATH_W) 'keystore.cpp'; else $(CYGPATH_W) '$(srcdir)/keystore.cpp'; fi`

libvds_common_a-netaddress.o: netaddress.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-netaddress.o -MD -MP -MF $(DEPDIR)/libvds_common_a-netaddress.Tpo -c -o libvds_common_a-netaddress.o `test -f 'netaddress.cpp' || echo '$(srcdir)/'`netaddress.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-netaddress.Tpo $(DEPDIR)/libvds_common_a-netaddress.Po
#	$(AM_V_CXX)source='netaddress.cpp' object='libvds_common_a-netaddress.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-netaddress.o `test -f 'netaddress.cpp' || echo '$(srcdir)/'`netaddress.cpp

libvds_common_a-netaddress.obj: netaddress.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-netaddress.obj -MD -MP -MF $(DEPDIR)/libvds_common_a-netaddress.Tpo -c -o libvds_common_a-netaddress.obj `if test -f 'netaddress.cpp'; then $(CYGPATH_W) 'netaddress.cpp'; else $(CYGPATH_W) '$(srcdir)/netaddress.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-netaddress.Tpo $(DEPDIR)/libvds_common_a-netaddress.Po
#	$(AM_V_CXX)source='netaddress.cpp' object='libvds_common_a-netaddress.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-netaddress.obj `if test -f 'netaddress.cpp'; then $(CYGPATH_W) 'netaddress.cpp'; else $(CYGPATH_W) '$(srcdir)/netaddress.cpp'; fi`

libvds_common_a-netbase.o: netbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-netbase.o -MD -MP -MF $(DEPDIR)/libvds_common_a-netbase.Tpo -c -o libvds_common_a-netbase.o `test -f 'netbase.cpp' || echo '$(srcdir)/'`netbase.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-netbase.Tpo $(DEPDIR)/libvds_common_a-netbase.Po
#	$(AM_V_CXX)source='netbase.cpp' object='libvds_common_a-netbase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-netbase.o `test -f 'netbase.cpp' || echo '$(srcdir)/'`netbase.cpp

libvds_common_a-netbase.obj: netbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-netbase.obj -MD -MP -MF $(DEPDIR)/libvds_common_a-netbase.Tpo -c -o libvds_common_a-netbase.obj `if test -f 'netbase.cpp'; then $(CYGPATH_W) 'netbase.cpp'; else $(CYGPATH_W) '$(srcdir)/netbase.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-netbase.Tpo $(DEPDIR)/libvds_common_a-netbase.Po
#	$(AM_V_CXX)source='netbase.cpp' object='libvds_common_a-netbase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-netbase.obj `if test -f 'netbase.cpp'; then $(CYGPATH_W) 'netbase.cpp'; else $(CYGPATH_W) '$(srcdir)/netbase.cpp'; fi`

primitives/libvds_common_a-block.o: primitives/block.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libvds_common_a-block.o -MD -MP -MF primitives/$(DEPDIR)/libvds_common_a-block.Tpo -c -o primitives/libvds_common_a-block.o `test -f 'primitives/block.cpp' || echo '$(srcdir)/'`primitives/block.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libvds_common_a-block.Tpo primitives/$(DEPDIR)/libvds_common_a-block.Po
#	$(AM_V_CXX)source='primitives/block.cpp' object='primitives/libvds_common_a-block.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libvds_common_a-block.o `test -f 'primitives/block.cpp' || echo '$(srcdir)/'`primitives/block.cpp

primitives/libvds_common_a-block.obj: primitives/block.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libvds_common_a-block.obj -MD -MP -MF primitives/$(DEPDIR)/libvds_common_a-block.Tpo -c -o primitives/libvds_common_a-block.obj `if test -f 'primitives/block.cpp'; then $(CYGPATH_W) 'primitives/block.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/block.cpp'; fi`
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libvds_common_a-block.Tpo primitives/$(DEPDIR)/libvds_common_a-block.Po
#	$(AM_V_CXX)source='primitives/block.cpp' object='primitives/libvds_common_a-block.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libvds_common_a-block.obj `if test -f 'primitives/block.cpp'; then $(CYGPATH_W) 'primitives/block.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/block.cpp'; fi`

primitives/libvds_common_a-transaction.o: primitives/transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libvds_common_a-transaction.o -MD -MP -MF primitives/$(DEPDIR)/libvds_common_a-transaction.Tpo -c -o primitives/libvds_common_a-transaction.o `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libvds_common_a-transaction.Tpo primitives/$(DEPDIR)/libvds_common_a-transaction.Po
#	$(AM_V_CXX)source='primitives/transaction.cpp' object='primitives/libvds_common_a-transaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libvds_common_a-transaction.o `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp

primitives/libvds_common_a-transaction.obj: primitives/transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libvds_common_a-transaction.obj -MD -MP -MF primitives/$(DEPDIR)/libvds_common_a-transaction.Tpo -c -o primitives/libvds_common_a-transaction.obj `if test -f 'primitives/transaction.cpp'; then $(CYGPATH_W) 'primitives/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/transaction.cpp'; fi`
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libvds_common_a-transaction.Tpo primitives/$(DEPDIR)/libvds_common_a-transaction.Po
#	$(AM_V_CXX)source='primitives/transaction.cpp' object='primitives/libvds_common_a-transaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libvds_common_a-transaction.obj `if test -f 'primitives/transaction.cpp'; then $(CYGPATH_W) 'primitives/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/transaction.cpp'; fi`

libvds_common_a-protocol.o: protocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-protocol.o -MD -MP -MF $(DEPDIR)/libvds_common_a-protocol.Tpo -c -o libvds_common_a-protocol.o `test -f 'protocol.cpp' || echo '$(srcdir)/'`protocol.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-protocol.Tpo $(DEPDIR)/libvds_common_a-protocol.Po
#	$(AM_V_CXX)source='protocol.cpp' object='libvds_common_a-protocol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-protocol.o `test -f 'protocol.cpp' || echo '$(srcdir)/'`protocol.cpp

libvds_common_a-protocol.obj: protocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-protocol.obj -MD -MP -MF $(DEPDIR)/libvds_common_a-protocol.Tpo -c -o libvds_common_a-protocol.obj `if test -f 'protocol.cpp'; then $(CYGPATH_W) 'protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-protocol.Tpo $(DEPDIR)/libvds_common_a-protocol.Po
#	$(AM_V_CXX)source='protocol.cpp' object='libvds_common_a-protocol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-protocol.obj `if test -f 'protocol.cpp'; then $(CYGPATH_W) 'protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/protocol.cpp'; fi`

libvds_common_a-pubkey.o: pubkey.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-pubkey.o -MD -MP -MF $(DEPDIR)/libvds_common_a-pubkey.Tpo -c -o libvds_common_a-pubkey.o `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-pubkey.Tpo $(DEPDIR)/libvds_common_a-pubkey.Po
#	$(AM_V_CXX)source='pubkey.cpp' object='libvds_common_a-pubkey.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-pubkey.o `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp

libvds_common_a-pubkey.obj: pubkey.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-pubkey.obj -MD -MP -MF $(DEPDIR)/libvds_common_a-pubkey.Tpo -c -o libvds_common_a-pubkey.obj `if test -f 'pubkey.cpp'; then $(CYGPATH_W) 'pubkey.cpp'; else $(CYGPATH_W) '$(srcdir)/pubkey.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-pubkey.Tpo $(DEPDIR)/libvds_common_a-pubkey.Po
#	$(AM_V_CXX)source='pubkey.cpp' object='libvds_common_a-pubkey.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-pubkey.obj `if test -f 'pubkey.cpp'; then $(CYGPATH_W) 'pubkey.cpp'; else $(CYGPATH_W) '$(srcdir)/pubkey.cpp'; fi`

libvds_common_a-scheduler.o: scheduler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-scheduler.o -MD -MP -MF $(DEPDIR)/libvds_common_a-scheduler.Tpo -c -o libvds_common_a-scheduler.o `test -f 'scheduler.cpp' || echo '$(srcdir)/'`scheduler.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-scheduler.Tpo $(DEPDIR)/libvds_common_a-scheduler.Po
#	$(AM_V_CXX)source='scheduler.cpp' object='libvds_common_a-scheduler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-scheduler.o `test -f 'scheduler.cpp' || echo '$(srcdir)/'`scheduler.cpp

libvds_common_a-scheduler.obj: scheduler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-scheduler.obj -MD -MP -MF $(DEPDIR)/libvds_common_a-scheduler.Tpo -c -o libvds_common_a-scheduler.obj `if test -f 'scheduler.cpp'; then $(CYGPATH_W) 'scheduler.cpp'; else $(CYGPATH_W) '$(srcdir)/scheduler.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-scheduler.Tpo $(DEPDIR)/libvds_common_a-scheduler.Po
#	$(AM_V_CXX)source='scheduler.cpp' object='libvds_common_a-scheduler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-scheduler.obj `if test -f 'scheduler.cpp'; then $(CYGPATH_W) 'scheduler.cpp'; else $(CYGPATH_W) '$(srcdir)/scheduler.cpp'; fi`

script/libvds_common_a-interpreter.o: script/interpreter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libvds_common_a-interpreter.o -MD -MP -MF script/$(DEPDIR)/libvds_common_a-interpreter.Tpo -c -o script/libvds_common_a-interpreter.o `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libvds_common_a-interpreter.Tpo script/$(DEPDIR)/libvds_common_a-interpreter.Po
#	$(AM_V_CXX)source='script/interpreter.cpp' object='script/libvds_common_a-interpreter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libvds_common_a-interpreter.o `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp

script/libvds_common_a-interpreter.obj: script/interpreter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libvds_common_a-interpreter.obj -MD -MP -MF script/$(DEPDIR)/libvds_common_a-interpreter.Tpo -c -o script/libvds_common_a-interpreter.obj `if test -f 'script/interpreter.cpp'; then $(CYGPATH_W) 'script/interpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/script/interpreter.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libvds_common_a-interpreter.Tpo script/$(DEPDIR)/libvds_common_a-interpreter.Po
#	$(AM_V_CXX)source='script/interpreter.cpp' object='script/libvds_common_a-interpreter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libvds_common_a-interpreter.obj `if test -f 'script/interpreter.cpp'; then $(CYGPATH_W) 'script/interpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/script/interpreter.cpp'; fi`

script/libvds_common_a-script.o: script/script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libvds_common_a-script.o -MD -MP -MF script/$(DEPDIR)/libvds_common_a-script.Tpo -c -o script/libvds_common_a-script.o `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libvds_common_a-script.Tpo script/$(DEPDIR)/libvds_common_a-script.Po
#	$(AM_V_CXX)source='script/script.cpp' object='script/libvds_common_a-script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libvds_common_a-script.o `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp

script/libvds_common_a-script.obj: script/script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libvds_common_a-script.obj -MD -MP -MF script/$(DEPDIR)/libvds_common_a-script.Tpo -c -o script/libvds_common_a-script.obj `if test -f 'script/script.cpp'; then $(CYGPATH_W) 'script/script.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libvds_common_a-script.Tpo script/$(DEPDIR)/libvds_common_a-script.Po
#	$(AM_V_CXX)source='script/script.cpp' object='script/libvds_common_a-script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libvds_common_a-script.obj `if test -f 'script/script.cpp'; then $(CYGPATH_W) 'script/script.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script.cpp'; fi`

script/libvds_common_a-script_error.o: script/script_error.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libvds_common_a-script_error.o -MD -MP -MF script/$(DEPDIR)/libvds_common_a-script_error.Tpo -c -o script/libvds_common_a-script_error.o `test -f 'script/script_error.cpp' || echo '$(srcdir)/'`script/script_error.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libvds_common_a-script_error.Tpo script/$(DEPDIR)/libvds_common_a-script_error.Po
#	$(AM_V_CXX)source='script/script_error.cpp' object='script/libvds_common_a-script_error.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libvds_common_a-script_error.o `test -f 'script/script_error.cpp' || echo '$(srcdir)/'`script/script_error.cpp

script/libvds_common_a-script_error.obj: script/script_error.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libvds_common_a-script_error.obj -MD -MP -MF script/$(DEPDIR)/libvds_common_a-script_error.Tpo -c -o script/libvds_common_a-script_error.obj `if test -f 'script/script_error.cpp'; then $(CYGPATH_W) 'script/script_error.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script_error.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libvds_common_a-script_error.Tpo script/$(DEPDIR)/libvds_common_a-script_error.Po
#	$(AM_V_CXX)source='script/script_error.cpp' object='script/libvds_common_a-script_error.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libvds_common_a-script_error.obj `if test -f 'script/script_error.cpp'; then $(CYGPATH_W) 'script/script_error.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script_error.cpp'; fi`

script/libvds_common_a-sign.o: script/sign.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libvds_common_a-sign.o -MD -MP -MF script/$(DEPDIR)/libvds_common_a-sign.Tpo -c -o script/libvds_common_a-sign.o `test -f 'script/sign.cpp' || echo '$(srcdir)/'`script/sign.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libvds_common_a-sign.Tpo script/$(DEPDIR)/libvds_common_a-sign.Po
#	$(AM_V_CXX)source='script/sign.cpp' object='script/libvds_common_a-sign.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libvds_common_a-sign.o `test -f 'script/sign.cpp' || echo '$(srcdir)/'`script/sign.cpp

script/libvds_common_a-sign.obj: script/sign.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libvds_common_a-sign.obj -MD -MP -MF script/$(DEPDIR)/libvds_common_a-sign.Tpo -c -o script/libvds_common_a-sign.obj `if test -f 'script/sign.cpp'; then $(CYGPATH_W) 'script/sign.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sign.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libvds_common_a-sign.Tpo script/$(DEPDIR)/libvds_common_a-sign.Po
#	$(AM_V_CXX)source='script/sign.cpp' object='script/libvds_common_a-sign.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libvds_common_a-sign.obj `if test -f 'script/sign.cpp'; then $(CYGPATH_W) 'script/sign.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sign.cpp'; fi`

script/libvds_common_a-standard.o: script/standard.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libvds_common_a-standard.o -MD -MP -MF script/$(DEPDIR)/libvds_common_a-standard.Tpo -c -o script/libvds_common_a-standard.o `test -f 'script/standard.cpp' || echo '$(srcdir)/'`script/standard.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libvds_common_a-standard.Tpo script/$(DEPDIR)/libvds_common_a-standard.Po
#	$(AM_V_CXX)source='script/standard.cpp' object='script/libvds_common_a-standard.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libvds_common_a-standard.o `test -f 'script/standard.cpp' || echo '$(srcdir)/'`script/standard.cpp

script/libvds_common_a-standard.obj: script/standard.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT script/libvds_common_a-standard.obj -MD -MP -MF script/$(DEPDIR)/libvds_common_a-standard.Tpo -c -o script/libvds_common_a-standard.obj `if test -f 'script/standard.cpp'; then $(CYGPATH_W) 'script/standard.cpp'; else $(CYGPATH_W) '$(srcdir)/script/standard.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libvds_common_a-standard.Tpo script/$(DEPDIR)/libvds_common_a-standard.Po
#	$(AM_V_CXX)source='script/standard.cpp' object='script/libvds_common_a-standard.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libvds_common_a-standard.obj `if test -f 'script/standard.cpp'; then $(CYGPATH_W) 'script/standard.cpp'; else $(CYGPATH_W) '$(srcdir)/script/standard.cpp'; fi`

libvds_common_a-transaction_builder.o: transaction_builder.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-transaction_builder.o -MD -MP -MF $(DEPDIR)/libvds_common_a-transaction_builder.Tpo -c -o libvds_common_a-transaction_builder.o `test -f 'transaction_builder.cpp' || echo '$(srcdir)/'`transaction_builder.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-transaction_builder.Tpo $(DEPDIR)/libvds_common_a-transaction_builder.Po
#	$(AM_V_CXX)source='transaction_builder.cpp' object='libvds_common_a-transaction_builder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-transaction_builder.o `test -f 'transaction_builder.cpp' || echo '$(srcdir)/'`transaction_builder.cpp

libvds_common_a-transaction_builder.obj: transaction_builder.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_common_a-transaction_builder.obj -MD -MP -MF $(DEPDIR)/libvds_common_a-transaction_builder.Tpo -c -o libvds_common_a-transaction_builder.obj `if test -f 'transaction_builder.cpp'; then $(CYGPATH_W) 'transaction_builder.cpp'; else $(CYGPATH_W) '$(srcdir)/transaction_builder.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_common_a-transaction_builder.Tpo $(DEPDIR)/libvds_common_a-transaction_builder.Po
#	$(AM_V_CXX)source='transaction_builder.cpp' object='libvds_common_a-transaction_builder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_common_a-transaction_builder.obj `if test -f 'transaction_builder.cpp'; then $(CYGPATH_W) 'transaction_builder.cpp'; else $(CYGPATH_W) '$(srcdir)/transaction_builder.cpp'; fi`

cpp-ethereum/libdevcore/libvds_common_a-Base64.o: cpp-ethereum/libdevcore/Base64.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-Base64.o -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Base64.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-Base64.o `test -f 'cpp-ethereum/libdevcore/Base64.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/Base64.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Base64.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Base64.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/Base64.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-Base64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-Base64.o `test -f 'cpp-ethereum/libdevcore/Base64.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/Base64.cpp

cpp-ethereum/libdevcore/libvds_common_a-Base64.obj: cpp-ethereum/libdevcore/Base64.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-Base64.obj -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Base64.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-Base64.obj `if test -f 'cpp-ethereum/libdevcore/Base64.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/Base64.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/Base64.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Base64.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Base64.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/Base64.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-Base64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-Base64.obj `if test -f 'cpp-ethereum/libdevcore/Base64.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/Base64.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/Base64.cpp'; fi`

cpp-ethereum/libdevcore/libvds_common_a-Common.o: cpp-ethereum/libdevcore/Common.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-Common.o -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Common.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-Common.o `test -f 'cpp-ethereum/libdevcore/Common.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/Common.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Common.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Common.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/Common.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-Common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-Common.o `test -f 'cpp-ethereum/libdevcore/Common.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/Common.cpp

cpp-ethereum/libdevcore/libvds_common_a-Common.obj: cpp-ethereum/libdevcore/Common.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-Common.obj -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Common.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-Common.obj `if test -f 'cpp-ethereum/libdevcore/Common.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/Common.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/Common.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Common.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Common.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/Common.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-Common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-Common.obj `if test -f 'cpp-ethereum/libdevcore/Common.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/Common.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/Common.cpp'; fi`

cpp-ethereum/libdevcore/libvds_common_a-CommonData.o: cpp-ethereum/libdevcore/CommonData.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-CommonData.o -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-CommonData.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-CommonData.o `test -f 'cpp-ethereum/libdevcore/CommonData.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/CommonData.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-CommonData.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-CommonData.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/CommonData.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-CommonData.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-CommonData.o `test -f 'cpp-ethereum/libdevcore/CommonData.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/CommonData.cpp

cpp-ethereum/libdevcore/libvds_common_a-CommonData.obj: cpp-ethereum/libdevcore/CommonData.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-CommonData.obj -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-CommonData.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-CommonData.obj `if test -f 'cpp-ethereum/libdevcore/CommonData.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/CommonData.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/CommonData.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-CommonData.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-CommonData.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/CommonData.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-CommonData.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-CommonData.obj `if test -f 'cpp-ethereum/libdevcore/CommonData.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/CommonData.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/CommonData.cpp'; fi`

cpp-ethereum/libdevcore/libvds_common_a-CommonIO.o: cpp-ethereum/libdevcore/CommonIO.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-CommonIO.o -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-CommonIO.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-CommonIO.o `test -f 'cpp-ethereum/libdevcore/CommonIO.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/CommonIO.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-CommonIO.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-CommonIO.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/CommonIO.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-CommonIO.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-CommonIO.o `test -f 'cpp-ethereum/libdevcore/CommonIO.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/CommonIO.cpp

cpp-ethereum/libdevcore/libvds_common_a-CommonIO.obj: cpp-ethereum/libdevcore/CommonIO.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-CommonIO.obj -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-CommonIO.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-CommonIO.obj `if test -f 'cpp-ethereum/libdevcore/CommonIO.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/CommonIO.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/CommonIO.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-CommonIO.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-CommonIO.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/CommonIO.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-CommonIO.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-CommonIO.obj `if test -f 'cpp-ethereum/libdevcore/CommonIO.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/CommonIO.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/CommonIO.cpp'; fi`

cpp-ethereum/libdevcore/libvds_common_a-CommonJS.o: cpp-ethereum/libdevcore/CommonJS.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-CommonJS.o -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-CommonJS.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-CommonJS.o `test -f 'cpp-ethereum/libdevcore/CommonJS.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/CommonJS.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-CommonJS.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-CommonJS.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/CommonJS.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-CommonJS.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-CommonJS.o `test -f 'cpp-ethereum/libdevcore/CommonJS.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/CommonJS.cpp

cpp-ethereum/libdevcore/libvds_common_a-CommonJS.obj: cpp-ethereum/libdevcore/CommonJS.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-CommonJS.obj -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-CommonJS.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-CommonJS.obj `if test -f 'cpp-ethereum/libdevcore/CommonJS.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/CommonJS.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/CommonJS.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-CommonJS.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-CommonJS.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/CommonJS.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-CommonJS.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-CommonJS.obj `if test -f 'cpp-ethereum/libdevcore/CommonJS.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/CommonJS.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/CommonJS.cpp'; fi`

cpp-ethereum/libdevcore/libvds_common_a-FileSystem.o: cpp-ethereum/libdevcore/FileSystem.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-FileSystem.o -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-FileSystem.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-FileSystem.o `test -f 'cpp-ethereum/libdevcore/FileSystem.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/FileSystem.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-FileSystem.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-FileSystem.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/FileSystem.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-FileSystem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-FileSystem.o `test -f 'cpp-ethereum/libdevcore/FileSystem.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/FileSystem.cpp

cpp-ethereum/libdevcore/libvds_common_a-FileSystem.obj: cpp-ethereum/libdevcore/FileSystem.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-FileSystem.obj -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-FileSystem.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-FileSystem.obj `if test -f 'cpp-ethereum/libdevcore/FileSystem.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/FileSystem.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/FileSystem.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-FileSystem.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-FileSystem.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/FileSystem.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-FileSystem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-FileSystem.obj `if test -f 'cpp-ethereum/libdevcore/FileSystem.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/FileSystem.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/FileSystem.cpp'; fi`

cpp-ethereum/libdevcore/libvds_common_a-FixedHash.o: cpp-ethereum/libdevcore/FixedHash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-FixedHash.o -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-FixedHash.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-FixedHash.o `test -f 'cpp-ethereum/libdevcore/FixedHash.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/FixedHash.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-FixedHash.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-FixedHash.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/FixedHash.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-FixedHash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-FixedHash.o `test -f 'cpp-ethereum/libdevcore/FixedHash.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/FixedHash.cpp

cpp-ethereum/libdevcore/libvds_common_a-FixedHash.obj: cpp-ethereum/libdevcore/FixedHash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-FixedHash.obj -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-FixedHash.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-FixedHash.obj `if test -f 'cpp-ethereum/libdevcore/FixedHash.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/FixedHash.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/FixedHash.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-FixedHash.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-FixedHash.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/FixedHash.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-FixedHash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-FixedHash.obj `if test -f 'cpp-ethereum/libdevcore/FixedHash.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/FixedHash.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/FixedHash.cpp'; fi`

cpp-ethereum/libdevcore/libvds_common_a-Guards.o: cpp-ethereum/libdevcore/Guards.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-Guards.o -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Guards.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-Guards.o `test -f 'cpp-ethereum/libdevcore/Guards.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/Guards.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Guards.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Guards.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/Guards.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-Guards.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-Guards.o `test -f 'cpp-ethereum/libdevcore/Guards.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/Guards.cpp

cpp-ethereum/libdevcore/libvds_common_a-Guards.obj: cpp-ethereum/libdevcore/Guards.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-Guards.obj -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Guards.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-Guards.obj `if test -f 'cpp-ethereum/libdevcore/Guards.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/Guards.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/Guards.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Guards.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Guards.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/Guards.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-Guards.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-Guards.obj `if test -f 'cpp-ethereum/libdevcore/Guards.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/Guards.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/Guards.cpp'; fi`

cpp-ethereum/libdevcore/libvds_common_a-Hash.o: cpp-ethereum/libdevcore/Hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-Hash.o -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Hash.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-Hash.o `test -f 'cpp-ethereum/libdevcore/Hash.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/Hash.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Hash.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Hash.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/Hash.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-Hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-Hash.o `test -f 'cpp-ethereum/libdevcore/Hash.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/Hash.cpp

cpp-ethereum/libdevcore/libvds_common_a-Hash.obj: cpp-ethereum/libdevcore/Hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-Hash.obj -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Hash.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-Hash.obj `if test -f 'cpp-ethereum/libdevcore/Hash.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/Hash.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/Hash.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Hash.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Hash.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/Hash.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-Hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-Hash.obj `if test -f 'cpp-ethereum/libdevcore/Hash.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/Hash.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/Hash.cpp'; fi`

cpp-ethereum/libdevcore/libvds_common_a-Log.o: cpp-ethereum/libdevcore/Log.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-Log.o -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Log.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-Log.o `test -f 'cpp-ethereum/libdevcore/Log.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/Log.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Log.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Log.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/Log.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-Log.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-Log.o `test -f 'cpp-ethereum/libdevcore/Log.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/Log.cpp

cpp-ethereum/libdevcore/libvds_common_a-Log.obj: cpp-ethereum/libdevcore/Log.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-Log.obj -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Log.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-Log.obj `if test -f 'cpp-ethereum/libdevcore/Log.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/Log.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/Log.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Log.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Log.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/Log.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-Log.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-Log.obj `if test -f 'cpp-ethereum/libdevcore/Log.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/Log.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/Log.cpp'; fi`

cpp-ethereum/libdevcore/libvds_common_a-MemoryDB.o: cpp-ethereum/libdevcore/MemoryDB.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-MemoryDB.o -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-MemoryDB.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-MemoryDB.o `test -f 'cpp-ethereum/libdevcore/MemoryDB.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/MemoryDB.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-MemoryDB.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-MemoryDB.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/MemoryDB.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-MemoryDB.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-MemoryDB.o `test -f 'cpp-ethereum/libdevcore/MemoryDB.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/MemoryDB.cpp

cpp-ethereum/libdevcore/libvds_common_a-MemoryDB.obj: cpp-ethereum/libdevcore/MemoryDB.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-MemoryDB.obj -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-MemoryDB.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-MemoryDB.obj `if test -f 'cpp-ethereum/libdevcore/MemoryDB.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/MemoryDB.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/MemoryDB.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-MemoryDB.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-MemoryDB.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/MemoryDB.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-MemoryDB.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-MemoryDB.obj `if test -f 'cpp-ethereum/libdevcore/MemoryDB.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/MemoryDB.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/MemoryDB.cpp'; fi`

cpp-ethereum/libdevcore/libvds_common_a-OverlayDB.o: cpp-ethereum/libdevcore/OverlayDB.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-OverlayDB.o -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-OverlayDB.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-OverlayDB.o `test -f 'cpp-ethereum/libdevcore/OverlayDB.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/OverlayDB.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-OverlayDB.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-OverlayDB.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/OverlayDB.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-OverlayDB.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-OverlayDB.o `test -f 'cpp-ethereum/libdevcore/OverlayDB.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/OverlayDB.cpp

cpp-ethereum/libdevcore/libvds_common_a-OverlayDB.obj: cpp-ethereum/libdevcore/OverlayDB.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-OverlayDB.obj -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-OverlayDB.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-OverlayDB.obj `if test -f 'cpp-ethereum/libdevcore/OverlayDB.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/OverlayDB.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/OverlayDB.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-OverlayDB.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-OverlayDB.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/OverlayDB.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-OverlayDB.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-OverlayDB.obj `if test -f 'cpp-ethereum/libdevcore/OverlayDB.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/OverlayDB.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/OverlayDB.cpp'; fi`

cpp-ethereum/libdevcore/libvds_common_a-RLP.o: cpp-ethereum/libdevcore/RLP.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-RLP.o -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-RLP.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-RLP.o `test -f 'cpp-ethereum/libdevcore/RLP.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/RLP.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-RLP.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-RLP.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/RLP.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-RLP.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-RLP.o `test -f 'cpp-ethereum/libdevcore/RLP.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/RLP.cpp

cpp-ethereum/libdevcore/libvds_common_a-RLP.obj: cpp-ethereum/libdevcore/RLP.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-RLP.obj -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-RLP.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-RLP.obj `if test -f 'cpp-ethereum/libdevcore/RLP.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/RLP.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/RLP.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-RLP.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-RLP.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/RLP.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-RLP.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-RLP.obj `if test -f 'cpp-ethereum/libdevcore/RLP.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/RLP.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/RLP.cpp'; fi`

cpp-ethereum/libdevcore/libvds_common_a-SHA3.o: cpp-ethereum/libdevcore/SHA3.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-SHA3.o -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-SHA3.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-SHA3.o `test -f 'cpp-ethereum/libdevcore/SHA3.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/SHA3.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-SHA3.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-SHA3.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/SHA3.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-SHA3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-SHA3.o `test -f 'cpp-ethereum/libdevcore/SHA3.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/SHA3.cpp

cpp-ethereum/libdevcore/libvds_common_a-SHA3.obj: cpp-ethereum/libdevcore/SHA3.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-SHA3.obj -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-SHA3.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-SHA3.obj `if test -f 'cpp-ethereum/libdevcore/SHA3.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/SHA3.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/SHA3.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-SHA3.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-SHA3.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/SHA3.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-SHA3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-SHA3.obj `if test -f 'cpp-ethereum/libdevcore/SHA3.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/SHA3.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/SHA3.cpp'; fi`

cpp-ethereum/libdevcore/libvds_common_a-TransientDirectory.o: cpp-ethereum/libdevcore/TransientDirectory.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-TransientDirectory.o -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TransientDirectory.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-TransientDirectory.o `test -f 'cpp-ethereum/libdevcore/TransientDirectory.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/TransientDirectory.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TransientDirectory.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TransientDirectory.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/TransientDirectory.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-TransientDirectory.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-TransientDirectory.o `test -f 'cpp-ethereum/libdevcore/TransientDirectory.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/TransientDirectory.cpp

cpp-ethereum/libdevcore/libvds_common_a-TransientDirectory.obj: cpp-ethereum/libdevcore/TransientDirectory.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-TransientDirectory.obj -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TransientDirectory.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-TransientDirectory.obj `if test -f 'cpp-ethereum/libdevcore/TransientDirectory.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/TransientDirectory.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/TransientDirectory.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TransientDirectory.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TransientDirectory.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/TransientDirectory.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-TransientDirectory.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-TransientDirectory.obj `if test -f 'cpp-ethereum/libdevcore/TransientDirectory.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/TransientDirectory.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/TransientDirectory.cpp'; fi`

cpp-ethereum/libdevcore/libvds_common_a-TrieCommon.o: cpp-ethereum/libdevcore/TrieCommon.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-TrieCommon.o -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TrieCommon.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-TrieCommon.o `test -f 'cpp-ethereum/libdevcore/TrieCommon.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/TrieCommon.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TrieCommon.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TrieCommon.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/TrieCommon.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-TrieCommon.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-TrieCommon.o `test -f 'cpp-ethereum/libdevcore/TrieCommon.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/TrieCommon.cpp

cpp-ethereum/libdevcore/libvds_common_a-TrieCommon.obj: cpp-ethereum/libdevcore/TrieCommon.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-TrieCommon.obj -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TrieCommon.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-TrieCommon.obj `if test -f 'cpp-ethereum/libdevcore/TrieCommon.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/TrieCommon.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/TrieCommon.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TrieCommon.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TrieCommon.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/TrieCommon.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-TrieCommon.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-TrieCommon.obj `if test -f 'cpp-ethereum/libdevcore/TrieCommon.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/TrieCommon.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/TrieCommon.cpp'; fi`

cpp-ethereum/libdevcore/libvds_common_a-Worker.o: cpp-ethereum/libdevcore/Worker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-Worker.o -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Worker.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-Worker.o `test -f 'cpp-ethereum/libdevcore/Worker.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/Worker.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Worker.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Worker.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/Worker.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-Worker.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-Worker.o `test -f 'cpp-ethereum/libdevcore/Worker.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/Worker.cpp

cpp-ethereum/libdevcore/libvds_common_a-Worker.obj: cpp-ethereum/libdevcore/Worker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-Worker.obj -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Worker.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-Worker.obj `if test -f 'cpp-ethereum/libdevcore/Worker.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/Worker.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/Worker.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Worker.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-Worker.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/Worker.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-Worker.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-Worker.obj `if test -f 'cpp-ethereum/libdevcore/Worker.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/Worker.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/Worker.cpp'; fi`

cpp-ethereum/libevm/libvds_common_a-ExtVMFace.o: cpp-ethereum/libevm/ExtVMFace.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libevm/libvds_common_a-ExtVMFace.o -MD -MP -MF cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-ExtVMFace.Tpo -c -o cpp-ethereum/libevm/libvds_common_a-ExtVMFace.o `test -f 'cpp-ethereum/libevm/ExtVMFace.cpp' || echo '$(srcdir)/'`cpp-ethereum/libevm/ExtVMFace.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-ExtVMFace.Tpo cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-ExtVMFace.Po
#	$(AM_V_CXX)source='cpp-ethereum/libevm/ExtVMFace.cpp' object='cpp-ethereum/libevm/libvds_common_a-ExtVMFace.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libevm/libvds_common_a-ExtVMFace.o `test -f 'cpp-ethereum/libevm/ExtVMFace.cpp' || echo '$(srcdir)/'`cpp-ethereum/libevm/ExtVMFace.cpp

cpp-ethereum/libevm/libvds_common_a-ExtVMFace.obj: cpp-ethereum/libevm/ExtVMFace.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libevm/libvds_common_a-ExtVMFace.obj -MD -MP -MF cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-ExtVMFace.Tpo -c -o cpp-ethereum/libevm/libvds_common_a-ExtVMFace.obj `if test -f 'cpp-ethereum/libevm/ExtVMFace.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libevm/ExtVMFace.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libevm/ExtVMFace.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-ExtVMFace.Tpo cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-ExtVMFace.Po
#	$(AM_V_CXX)source='cpp-ethereum/libevm/ExtVMFace.cpp' object='cpp-ethereum/libevm/libvds_common_a-ExtVMFace.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libevm/libvds_common_a-ExtVMFace.obj `if test -f 'cpp-ethereum/libevm/ExtVMFace.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libevm/ExtVMFace.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libevm/ExtVMFace.cpp'; fi`

cpp-ethereum/libevm/libvds_common_a-VM.o: cpp-ethereum/libevm/VM.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libevm/libvds_common_a-VM.o -MD -MP -MF cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VM.Tpo -c -o cpp-ethereum/libevm/libvds_common_a-VM.o `test -f 'cpp-ethereum/libevm/VM.cpp' || echo '$(srcdir)/'`cpp-ethereum/libevm/VM.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VM.Tpo cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VM.Po
#	$(AM_V_CXX)source='cpp-ethereum/libevm/VM.cpp' object='cpp-ethereum/libevm/libvds_common_a-VM.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libevm/libvds_common_a-VM.o `test -f 'cpp-ethereum/libevm/VM.cpp' || echo '$(srcdir)/'`cpp-ethereum/libevm/VM.cpp

cpp-ethereum/libevm/libvds_common_a-VM.obj: cpp-ethereum/libevm/VM.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libevm/libvds_common_a-VM.obj -MD -MP -MF cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VM.Tpo -c -o cpp-ethereum/libevm/libvds_common_a-VM.obj `if test -f 'cpp-ethereum/libevm/VM.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libevm/VM.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libevm/VM.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VM.Tpo cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VM.Po
#	$(AM_V_CXX)source='cpp-ethereum/libevm/VM.cpp' object='cpp-ethereum/libevm/libvds_common_a-VM.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libevm/libvds_common_a-VM.obj `if test -f 'cpp-ethereum/libevm/VM.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libevm/VM.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libevm/VM.cpp'; fi`

cpp-ethereum/libevm/libvds_common_a-VMOpt.o: cpp-ethereum/libevm/VMOpt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libevm/libvds_common_a-VMOpt.o -MD -MP -MF cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VMOpt.Tpo -c -o cpp-ethereum/libevm/libvds_common_a-VMOpt.o `test -f 'cpp-ethereum/libevm/VMOpt.cpp' || echo '$(srcdir)/'`cpp-ethereum/libevm/VMOpt.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VMOpt.Tpo cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VMOpt.Po
#	$(AM_V_CXX)source='cpp-ethereum/libevm/VMOpt.cpp' object='cpp-ethereum/libevm/libvds_common_a-VMOpt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libevm/libvds_common_a-VMOpt.o `test -f 'cpp-ethereum/libevm/VMOpt.cpp' || echo '$(srcdir)/'`cpp-ethereum/libevm/VMOpt.cpp

cpp-ethereum/libevm/libvds_common_a-VMOpt.obj: cpp-ethereum/libevm/VMOpt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libevm/libvds_common_a-VMOpt.obj -MD -MP -MF cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VMOpt.Tpo -c -o cpp-ethereum/libevm/libvds_common_a-VMOpt.obj `if test -f 'cpp-ethereum/libevm/VMOpt.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libevm/VMOpt.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libevm/VMOpt.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VMOpt.Tpo cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VMOpt.Po
#	$(AM_V_CXX)source='cpp-ethereum/libevm/VMOpt.cpp' object='cpp-ethereum/libevm/libvds_common_a-VMOpt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libevm/libvds_common_a-VMOpt.obj `if test -f 'cpp-ethereum/libevm/VMOpt.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libevm/VMOpt.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libevm/VMOpt.cpp'; fi`

cpp-ethereum/libevm/libvds_common_a-VMCalls.o: cpp-ethereum/libevm/VMCalls.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libevm/libvds_common_a-VMCalls.o -MD -MP -MF cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VMCalls.Tpo -c -o cpp-ethereum/libevm/libvds_common_a-VMCalls.o `test -f 'cpp-ethereum/libevm/VMCalls.cpp' || echo '$(srcdir)/'`cpp-ethereum/libevm/VMCalls.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VMCalls.Tpo cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VMCalls.Po
#	$(AM_V_CXX)source='cpp-ethereum/libevm/VMCalls.cpp' object='cpp-ethereum/libevm/libvds_common_a-VMCalls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libevm/libvds_common_a-VMCalls.o `test -f 'cpp-ethereum/libevm/VMCalls.cpp' || echo '$(srcdir)/'`cpp-ethereum/libevm/VMCalls.cpp

cpp-ethereum/libevm/libvds_common_a-VMCalls.obj: cpp-ethereum/libevm/VMCalls.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libevm/libvds_common_a-VMCalls.obj -MD -MP -MF cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VMCalls.Tpo -c -o cpp-ethereum/libevm/libvds_common_a-VMCalls.obj `if test -f 'cpp-ethereum/libevm/VMCalls.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libevm/VMCalls.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libevm/VMCalls.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VMCalls.Tpo cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VMCalls.Po
#	$(AM_V_CXX)source='cpp-ethereum/libevm/VMCalls.cpp' object='cpp-ethereum/libevm/libvds_common_a-VMCalls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libevm/libvds_common_a-VMCalls.obj `if test -f 'cpp-ethereum/libevm/VMCalls.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libevm/VMCalls.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libevm/VMCalls.cpp'; fi`

cpp-ethereum/libevm/libvds_common_a-VMFactory.o: cpp-ethereum/libevm/VMFactory.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libevm/libvds_common_a-VMFactory.o -MD -MP -MF cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VMFactory.Tpo -c -o cpp-ethereum/libevm/libvds_common_a-VMFactory.o `test -f 'cpp-ethereum/libevm/VMFactory.cpp' || echo '$(srcdir)/'`cpp-ethereum/libevm/VMFactory.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VMFactory.Tpo cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VMFactory.Po
#	$(AM_V_CXX)source='cpp-ethereum/libevm/VMFactory.cpp' object='cpp-ethereum/libevm/libvds_common_a-VMFactory.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libevm/libvds_common_a-VMFactory.o `test -f 'cpp-ethereum/libevm/VMFactory.cpp' || echo '$(srcdir)/'`cpp-ethereum/libevm/VMFactory.cpp

cpp-ethereum/libevm/libvds_common_a-VMFactory.obj: cpp-ethereum/libevm/VMFactory.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libevm/libvds_common_a-VMFactory.obj -MD -MP -MF cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VMFactory.Tpo -c -o cpp-ethereum/libevm/libvds_common_a-VMFactory.obj `if test -f 'cpp-ethereum/libevm/VMFactory.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libevm/VMFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libevm/VMFactory.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VMFactory.Tpo cpp-ethereum/libevm/$(DEPDIR)/libvds_common_a-VMFactory.Po
#	$(AM_V_CXX)source='cpp-ethereum/libevm/VMFactory.cpp' object='cpp-ethereum/libevm/libvds_common_a-VMFactory.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libevm/libvds_common_a-VMFactory.obj `if test -f 'cpp-ethereum/libevm/VMFactory.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libevm/VMFactory.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libevm/VMFactory.cpp'; fi`

cpp-ethereum/libevmcore/libvds_common_a-Instruction.o: cpp-ethereum/libevmcore/Instruction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libevmcore/libvds_common_a-Instruction.o -MD -MP -MF cpp-ethereum/libevmcore/$(DEPDIR)/libvds_common_a-Instruction.Tpo -c -o cpp-ethereum/libevmcore/libvds_common_a-Instruction.o `test -f 'cpp-ethereum/libevmcore/Instruction.cpp' || echo '$(srcdir)/'`cpp-ethereum/libevmcore/Instruction.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libevmcore/$(DEPDIR)/libvds_common_a-Instruction.Tpo cpp-ethereum/libevmcore/$(DEPDIR)/libvds_common_a-Instruction.Po
#	$(AM_V_CXX)source='cpp-ethereum/libevmcore/Instruction.cpp' object='cpp-ethereum/libevmcore/libvds_common_a-Instruction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libevmcore/libvds_common_a-Instruction.o `test -f 'cpp-ethereum/libevmcore/Instruction.cpp' || echo '$(srcdir)/'`cpp-ethereum/libevmcore/Instruction.cpp

cpp-ethereum/libevmcore/libvds_common_a-Instruction.obj: cpp-ethereum/libevmcore/Instruction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libevmcore/libvds_common_a-Instruction.obj -MD -MP -MF cpp-ethereum/libevmcore/$(DEPDIR)/libvds_common_a-Instruction.Tpo -c -o cpp-ethereum/libevmcore/libvds_common_a-Instruction.obj `if test -f 'cpp-ethereum/libevmcore/Instruction.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libevmcore/Instruction.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libevmcore/Instruction.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libevmcore/$(DEPDIR)/libvds_common_a-Instruction.Tpo cpp-ethereum/libevmcore/$(DEPDIR)/libvds_common_a-Instruction.Po
#	$(AM_V_CXX)source='cpp-ethereum/libevmcore/Instruction.cpp' object='cpp-ethereum/libevmcore/libvds_common_a-Instruction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libevmcore/libvds_common_a-Instruction.obj `if test -f 'cpp-ethereum/libevmcore/Instruction.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libevmcore/Instruction.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libevmcore/Instruction.cpp'; fi`

cpp-ethereum/libethereum/libvds_common_a-Account.o: cpp-ethereum/libethereum/Account.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-Account.o -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Account.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-Account.o `test -f 'cpp-ethereum/libethereum/Account.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/Account.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Account.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Account.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/Account.cpp' object='cpp-ethereum/libethereum/libvds_common_a-Account.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-Account.o `test -f 'cpp-ethereum/libethereum/Account.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/Account.cpp

cpp-ethereum/libethereum/libvds_common_a-Account.obj: cpp-ethereum/libethereum/Account.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-Account.obj -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Account.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-Account.obj `if test -f 'cpp-ethereum/libethereum/Account.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/Account.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/Account.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Account.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Account.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/Account.cpp' object='cpp-ethereum/libethereum/libvds_common_a-Account.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-Account.obj `if test -f 'cpp-ethereum/libethereum/Account.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/Account.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/Account.cpp'; fi`

cpp-ethereum/libethereum/libvds_common_a-Defaults.o: cpp-ethereum/libethereum/Defaults.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-Defaults.o -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Defaults.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-Defaults.o `test -f 'cpp-ethereum/libethereum/Defaults.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/Defaults.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Defaults.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Defaults.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/Defaults.cpp' object='cpp-ethereum/libethereum/libvds_common_a-Defaults.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-Defaults.o `test -f 'cpp-ethereum/libethereum/Defaults.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/Defaults.cpp

cpp-ethereum/libethereum/libvds_common_a-Defaults.obj: cpp-ethereum/libethereum/Defaults.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-Defaults.obj -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Defaults.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-Defaults.obj `if test -f 'cpp-ethereum/libethereum/Defaults.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/Defaults.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/Defaults.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Defaults.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Defaults.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/Defaults.cpp' object='cpp-ethereum/libethereum/libvds_common_a-Defaults.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-Defaults.obj `if test -f 'cpp-ethereum/libethereum/Defaults.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/Defaults.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/Defaults.cpp'; fi`

cpp-ethereum/libethereum/libvds_common_a-GasPricer.o: cpp-ethereum/libethereum/GasPricer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-GasPricer.o -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-GasPricer.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-GasPricer.o `test -f 'cpp-ethereum/libethereum/GasPricer.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/GasPricer.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-GasPricer.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-GasPricer.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/GasPricer.cpp' object='cpp-ethereum/libethereum/libvds_common_a-GasPricer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-GasPricer.o `test -f 'cpp-ethereum/libethereum/GasPricer.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/GasPricer.cpp

cpp-ethereum/libethereum/libvds_common_a-GasPricer.obj: cpp-ethereum/libethereum/GasPricer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-GasPricer.obj -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-GasPricer.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-GasPricer.obj `if test -f 'cpp-ethereum/libethereum/GasPricer.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/GasPricer.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/GasPricer.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-GasPricer.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-GasPricer.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/GasPricer.cpp' object='cpp-ethereum/libethereum/libvds_common_a-GasPricer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-GasPricer.obj `if test -f 'cpp-ethereum/libethereum/GasPricer.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/GasPricer.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/GasPricer.cpp'; fi`

cpp-ethereum/libethereum/libvds_common_a-State.o: cpp-ethereum/libethereum/State.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-State.o -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-State.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-State.o `test -f 'cpp-ethereum/libethereum/State.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/State.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-State.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-State.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/State.cpp' object='cpp-ethereum/libethereum/libvds_common_a-State.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-State.o `test -f 'cpp-ethereum/libethereum/State.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/State.cpp

cpp-ethereum/libethereum/libvds_common_a-State.obj: cpp-ethereum/libethereum/State.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-State.obj -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-State.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-State.obj `if test -f 'cpp-ethereum/libethereum/State.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/State.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/State.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-State.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-State.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/State.cpp' object='cpp-ethereum/libethereum/libvds_common_a-State.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-State.obj `if test -f 'cpp-ethereum/libethereum/State.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/State.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/State.cpp'; fi`

cpp-ethereum/libethcore/libvds_common_a-ABI.o: cpp-ethereum/libethcore/ABI.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethcore/libvds_common_a-ABI.o -MD -MP -MF cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-ABI.Tpo -c -o cpp-ethereum/libethcore/libvds_common_a-ABI.o `test -f 'cpp-ethereum/libethcore/ABI.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethcore/ABI.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-ABI.Tpo cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-ABI.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethcore/ABI.cpp' object='cpp-ethereum/libethcore/libvds_common_a-ABI.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethcore/libvds_common_a-ABI.o `test -f 'cpp-ethereum/libethcore/ABI.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethcore/ABI.cpp

cpp-ethereum/libethcore/libvds_common_a-ABI.obj: cpp-ethereum/libethcore/ABI.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethcore/libvds_common_a-ABI.obj -MD -MP -MF cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-ABI.Tpo -c -o cpp-ethereum/libethcore/libvds_common_a-ABI.obj `if test -f 'cpp-ethereum/libethcore/ABI.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethcore/ABI.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethcore/ABI.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-ABI.Tpo cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-ABI.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethcore/ABI.cpp' object='cpp-ethereum/libethcore/libvds_common_a-ABI.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethcore/libvds_common_a-ABI.obj `if test -f 'cpp-ethereum/libethcore/ABI.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethcore/ABI.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethcore/ABI.cpp'; fi`

cpp-ethereum/libethcore/libvds_common_a-ChainOperationParams.o: cpp-ethereum/libethcore/ChainOperationParams.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethcore/libvds_common_a-ChainOperationParams.o -MD -MP -MF cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-ChainOperationParams.Tpo -c -o cpp-ethereum/libethcore/libvds_common_a-ChainOperationParams.o `test -f 'cpp-ethereum/libethcore/ChainOperationParams.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethcore/ChainOperationParams.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-ChainOperationParams.Tpo cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-ChainOperationParams.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethcore/ChainOperationParams.cpp' object='cpp-ethereum/libethcore/libvds_common_a-ChainOperationParams.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethcore/libvds_common_a-ChainOperationParams.o `test -f 'cpp-ethereum/libethcore/ChainOperationParams.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethcore/ChainOperationParams.cpp

cpp-ethereum/libethcore/libvds_common_a-ChainOperationParams.obj: cpp-ethereum/libethcore/ChainOperationParams.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethcore/libvds_common_a-ChainOperationParams.obj -MD -MP -MF cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-ChainOperationParams.Tpo -c -o cpp-ethereum/libethcore/libvds_common_a-ChainOperationParams.obj `if test -f 'cpp-ethereum/libethcore/ChainOperationParams.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethcore/ChainOperationParams.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethcore/ChainOperationParams.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-ChainOperationParams.Tpo cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-ChainOperationParams.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethcore/ChainOperationParams.cpp' object='cpp-ethereum/libethcore/libvds_common_a-ChainOperationParams.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethcore/libvds_common_a-ChainOperationParams.obj `if test -f 'cpp-ethereum/libethcore/ChainOperationParams.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethcore/ChainOperationParams.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethcore/ChainOperationParams.cpp'; fi`

cpp-ethereum/libethcore/libvds_common_a-Common.o: cpp-ethereum/libethcore/Common.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethcore/libvds_common_a-Common.o -MD -MP -MF cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-Common.Tpo -c -o cpp-ethereum/libethcore/libvds_common_a-Common.o `test -f 'cpp-ethereum/libethcore/Common.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethcore/Common.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-Common.Tpo cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-Common.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethcore/Common.cpp' object='cpp-ethereum/libethcore/libvds_common_a-Common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethcore/libvds_common_a-Common.o `test -f 'cpp-ethereum/libethcore/Common.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethcore/Common.cpp

cpp-ethereum/libethcore/libvds_common_a-Common.obj: cpp-ethereum/libethcore/Common.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethcore/libvds_common_a-Common.obj -MD -MP -MF cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-Common.Tpo -c -o cpp-ethereum/libethcore/libvds_common_a-Common.obj `if test -f 'cpp-ethereum/libethcore/Common.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethcore/Common.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethcore/Common.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-Common.Tpo cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-Common.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethcore/Common.cpp' object='cpp-ethereum/libethcore/libvds_common_a-Common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethcore/libvds_common_a-Common.obj `if test -f 'cpp-ethereum/libethcore/Common.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethcore/Common.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethcore/Common.cpp'; fi`

cpp-ethereum/libethcore/libvds_common_a-ICAP.o: cpp-ethereum/libethcore/ICAP.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethcore/libvds_common_a-ICAP.o -MD -MP -MF cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-ICAP.Tpo -c -o cpp-ethereum/libethcore/libvds_common_a-ICAP.o `test -f 'cpp-ethereum/libethcore/ICAP.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethcore/ICAP.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-ICAP.Tpo cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-ICAP.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethcore/ICAP.cpp' object='cpp-ethereum/libethcore/libvds_common_a-ICAP.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethcore/libvds_common_a-ICAP.o `test -f 'cpp-ethereum/libethcore/ICAP.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethcore/ICAP.cpp

cpp-ethereum/libethcore/libvds_common_a-ICAP.obj: cpp-ethereum/libethcore/ICAP.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethcore/libvds_common_a-ICAP.obj -MD -MP -MF cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-ICAP.Tpo -c -o cpp-ethereum/libethcore/libvds_common_a-ICAP.obj `if test -f 'cpp-ethereum/libethcore/ICAP.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethcore/ICAP.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethcore/ICAP.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-ICAP.Tpo cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-ICAP.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethcore/ICAP.cpp' object='cpp-ethereum/libethcore/libvds_common_a-ICAP.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethcore/libvds_common_a-ICAP.obj `if test -f 'cpp-ethereum/libethcore/ICAP.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethcore/ICAP.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethcore/ICAP.cpp'; fi`

cpp-ethereum/libethcore/libvds_common_a-Precompiled.o: cpp-ethereum/libethcore/Precompiled.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethcore/libvds_common_a-Precompiled.o -MD -MP -MF cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-Precompiled.Tpo -c -o cpp-ethereum/libethcore/libvds_common_a-Precompiled.o `test -f 'cpp-ethereum/libethcore/Precompiled.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethcore/Precompiled.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-Precompiled.Tpo cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-Precompiled.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethcore/Precompiled.cpp' object='cpp-ethereum/libethcore/libvds_common_a-Precompiled.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethcore/libvds_common_a-Precompiled.o `test -f 'cpp-ethereum/libethcore/Precompiled.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethcore/Precompiled.cpp

cpp-ethereum/libethcore/libvds_common_a-Precompiled.obj: cpp-ethereum/libethcore/Precompiled.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethcore/libvds_common_a-Precompiled.obj -MD -MP -MF cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-Precompiled.Tpo -c -o cpp-ethereum/libethcore/libvds_common_a-Precompiled.obj `if test -f 'cpp-ethereum/libethcore/Precompiled.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethcore/Precompiled.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethcore/Precompiled.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-Precompiled.Tpo cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-Precompiled.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethcore/Precompiled.cpp' object='cpp-ethereum/libethcore/libvds_common_a-Precompiled.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethcore/libvds_common_a-Precompiled.obj `if test -f 'cpp-ethereum/libethcore/Precompiled.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethcore/Precompiled.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethcore/Precompiled.cpp'; fi`

cpp-ethereum/libdevcore/libvds_common_a-TrieDB.o: cpp-ethereum/libdevcore/TrieDB.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-TrieDB.o -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TrieDB.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-TrieDB.o `test -f 'cpp-ethereum/libdevcore/TrieDB.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/TrieDB.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TrieDB.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TrieDB.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/TrieDB.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-TrieDB.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-TrieDB.o `test -f 'cpp-ethereum/libdevcore/TrieDB.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/TrieDB.cpp

cpp-ethereum/libdevcore/libvds_common_a-TrieDB.obj: cpp-ethereum/libdevcore/TrieDB.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-TrieDB.obj -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TrieDB.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-TrieDB.obj `if test -f 'cpp-ethereum/libdevcore/TrieDB.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/TrieDB.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/TrieDB.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TrieDB.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TrieDB.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/TrieDB.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-TrieDB.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-TrieDB.obj `if test -f 'cpp-ethereum/libdevcore/TrieDB.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/TrieDB.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/TrieDB.cpp'; fi`

cpp-ethereum/libdevcrypto/libvds_common_a-Common.o: cpp-ethereum/libdevcrypto/Common.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcrypto/libvds_common_a-Common.o -MD -MP -MF cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-Common.Tpo -c -o cpp-ethereum/libdevcrypto/libvds_common_a-Common.o `test -f 'cpp-ethereum/libdevcrypto/Common.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcrypto/Common.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-Common.Tpo cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-Common.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcrypto/Common.cpp' object='cpp-ethereum/libdevcrypto/libvds_common_a-Common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcrypto/libvds_common_a-Common.o `test -f 'cpp-ethereum/libdevcrypto/Common.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcrypto/Common.cpp

cpp-ethereum/libdevcrypto/libvds_common_a-Common.obj: cpp-ethereum/libdevcrypto/Common.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcrypto/libvds_common_a-Common.obj -MD -MP -MF cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-Common.Tpo -c -o cpp-ethereum/libdevcrypto/libvds_common_a-Common.obj `if test -f 'cpp-ethereum/libdevcrypto/Common.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcrypto/Common.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcrypto/Common.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-Common.Tpo cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-Common.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcrypto/Common.cpp' object='cpp-ethereum/libdevcrypto/libvds_common_a-Common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcrypto/libvds_common_a-Common.obj `if test -f 'cpp-ethereum/libdevcrypto/Common.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcrypto/Common.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcrypto/Common.cpp'; fi`

cpp-ethereum/libdevcrypto/libvds_common_a-CryptoPP.o: cpp-ethereum/libdevcrypto/CryptoPP.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcrypto/libvds_common_a-CryptoPP.o -MD -MP -MF cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-CryptoPP.Tpo -c -o cpp-ethereum/libdevcrypto/libvds_common_a-CryptoPP.o `test -f 'cpp-ethereum/libdevcrypto/CryptoPP.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcrypto/CryptoPP.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-CryptoPP.Tpo cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-CryptoPP.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcrypto/CryptoPP.cpp' object='cpp-ethereum/libdevcrypto/libvds_common_a-CryptoPP.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcrypto/libvds_common_a-CryptoPP.o `test -f 'cpp-ethereum/libdevcrypto/CryptoPP.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcrypto/CryptoPP.cpp

cpp-ethereum/libdevcrypto/libvds_common_a-CryptoPP.obj: cpp-ethereum/libdevcrypto/CryptoPP.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcrypto/libvds_common_a-CryptoPP.obj -MD -MP -MF cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-CryptoPP.Tpo -c -o cpp-ethereum/libdevcrypto/libvds_common_a-CryptoPP.obj `if test -f 'cpp-ethereum/libdevcrypto/CryptoPP.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcrypto/CryptoPP.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcrypto/CryptoPP.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-CryptoPP.Tpo cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-CryptoPP.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcrypto/CryptoPP.cpp' object='cpp-ethereum/libdevcrypto/libvds_common_a-CryptoPP.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcrypto/libvds_common_a-CryptoPP.obj `if test -f 'cpp-ethereum/libdevcrypto/CryptoPP.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcrypto/CryptoPP.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcrypto/CryptoPP.cpp'; fi`

cpp-ethereum/libdevcrypto/libvds_common_a-AES.o: cpp-ethereum/libdevcrypto/AES.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcrypto/libvds_common_a-AES.o -MD -MP -MF cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-AES.Tpo -c -o cpp-ethereum/libdevcrypto/libvds_common_a-AES.o `test -f 'cpp-ethereum/libdevcrypto/AES.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcrypto/AES.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-AES.Tpo cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-AES.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcrypto/AES.cpp' object='cpp-ethereum/libdevcrypto/libvds_common_a-AES.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcrypto/libvds_common_a-AES.o `test -f 'cpp-ethereum/libdevcrypto/AES.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcrypto/AES.cpp

cpp-ethereum/libdevcrypto/libvds_common_a-AES.obj: cpp-ethereum/libdevcrypto/AES.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcrypto/libvds_common_a-AES.obj -MD -MP -MF cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-AES.Tpo -c -o cpp-ethereum/libdevcrypto/libvds_common_a-AES.obj `if test -f 'cpp-ethereum/libdevcrypto/AES.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcrypto/AES.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcrypto/AES.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-AES.Tpo cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-AES.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcrypto/AES.cpp' object='cpp-ethereum/libdevcrypto/libvds_common_a-AES.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcrypto/libvds_common_a-AES.obj `if test -f 'cpp-ethereum/libdevcrypto/AES.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcrypto/AES.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcrypto/AES.cpp'; fi`

cpp-ethereum/libdevcrypto/libvds_common_a-ECDHE.o: cpp-ethereum/libdevcrypto/ECDHE.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcrypto/libvds_common_a-ECDHE.o -MD -MP -MF cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-ECDHE.Tpo -c -o cpp-ethereum/libdevcrypto/libvds_common_a-ECDHE.o `test -f 'cpp-ethereum/libdevcrypto/ECDHE.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcrypto/ECDHE.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-ECDHE.Tpo cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-ECDHE.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcrypto/ECDHE.cpp' object='cpp-ethereum/libdevcrypto/libvds_common_a-ECDHE.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcrypto/libvds_common_a-ECDHE.o `test -f 'cpp-ethereum/libdevcrypto/ECDHE.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcrypto/ECDHE.cpp

cpp-ethereum/libdevcrypto/libvds_common_a-ECDHE.obj: cpp-ethereum/libdevcrypto/ECDHE.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcrypto/libvds_common_a-ECDHE.obj -MD -MP -MF cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-ECDHE.Tpo -c -o cpp-ethereum/libdevcrypto/libvds_common_a-ECDHE.obj `if test -f 'cpp-ethereum/libdevcrypto/ECDHE.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcrypto/ECDHE.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcrypto/ECDHE.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-ECDHE.Tpo cpp-ethereum/libdevcrypto/$(DEPDIR)/libvds_common_a-ECDHE.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcrypto/ECDHE.cpp' object='cpp-ethereum/libdevcrypto/libvds_common_a-ECDHE.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcrypto/libvds_common_a-ECDHE.obj `if test -f 'cpp-ethereum/libdevcrypto/ECDHE.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcrypto/ECDHE.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcrypto/ECDHE.cpp'; fi`

cpp-ethereum/libethashseal/libvds_common_a-GenesisInfo.o: cpp-ethereum/libethashseal/GenesisInfo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/libvds_common_a-GenesisInfo.o -MD -MP -MF cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-GenesisInfo.Tpo -c -o cpp-ethereum/libethashseal/libvds_common_a-GenesisInfo.o `test -f 'cpp-ethereum/libethashseal/GenesisInfo.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/GenesisInfo.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-GenesisInfo.Tpo cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-GenesisInfo.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/GenesisInfo.cpp' object='cpp-ethereum/libethashseal/libvds_common_a-GenesisInfo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/libvds_common_a-GenesisInfo.o `test -f 'cpp-ethereum/libethashseal/GenesisInfo.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/GenesisInfo.cpp

cpp-ethereum/libethashseal/libvds_common_a-GenesisInfo.obj: cpp-ethereum/libethashseal/GenesisInfo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/libvds_common_a-GenesisInfo.obj -MD -MP -MF cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-GenesisInfo.Tpo -c -o cpp-ethereum/libethashseal/libvds_common_a-GenesisInfo.obj `if test -f 'cpp-ethereum/libethashseal/GenesisInfo.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/GenesisInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/GenesisInfo.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-GenesisInfo.Tpo cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-GenesisInfo.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/GenesisInfo.cpp' object='cpp-ethereum/libethashseal/libvds_common_a-GenesisInfo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/libvds_common_a-GenesisInfo.obj `if test -f 'cpp-ethereum/libethashseal/GenesisInfo.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/GenesisInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/GenesisInfo.cpp'; fi`

cpp-ethereum/libethereum/libvds_common_a-ChainParams.o: cpp-ethereum/libethereum/ChainParams.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-ChainParams.o -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-ChainParams.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-ChainParams.o `test -f 'cpp-ethereum/libethereum/ChainParams.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/ChainParams.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-ChainParams.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-ChainParams.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/ChainParams.cpp' object='cpp-ethereum/libethereum/libvds_common_a-ChainParams.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-ChainParams.o `test -f 'cpp-ethereum/libethereum/ChainParams.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/ChainParams.cpp

cpp-ethereum/libethereum/libvds_common_a-ChainParams.obj: cpp-ethereum/libethereum/ChainParams.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-ChainParams.obj -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-ChainParams.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-ChainParams.obj `if test -f 'cpp-ethereum/libethereum/ChainParams.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/ChainParams.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/ChainParams.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-ChainParams.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-ChainParams.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/ChainParams.cpp' object='cpp-ethereum/libethereum/libvds_common_a-ChainParams.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-ChainParams.obj `if test -f 'cpp-ethereum/libethereum/ChainParams.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/ChainParams.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/ChainParams.cpp'; fi`

cpp-ethereum/libethcore/libvds_common_a-Transaction.o: cpp-ethereum/libethcore/Transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethcore/libvds_common_a-Transaction.o -MD -MP -MF cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-Transaction.Tpo -c -o cpp-ethereum/libethcore/libvds_common_a-Transaction.o `test -f 'cpp-ethereum/libethcore/Transaction.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethcore/Transaction.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-Transaction.Tpo cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-Transaction.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethcore/Transaction.cpp' object='cpp-ethereum/libethcore/libvds_common_a-Transaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethcore/libvds_common_a-Transaction.o `test -f 'cpp-ethereum/libethcore/Transaction.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethcore/Transaction.cpp

cpp-ethereum/libethcore/libvds_common_a-Transaction.obj: cpp-ethereum/libethcore/Transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethcore/libvds_common_a-Transaction.obj -MD -MP -MF cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-Transaction.Tpo -c -o cpp-ethereum/libethcore/libvds_common_a-Transaction.obj `if test -f 'cpp-ethereum/libethcore/Transaction.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethcore/Transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethcore/Transaction.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-Transaction.Tpo cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-Transaction.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethcore/Transaction.cpp' object='cpp-ethereum/libethcore/libvds_common_a-Transaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethcore/libvds_common_a-Transaction.obj `if test -f 'cpp-ethereum/libethcore/Transaction.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethcore/Transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethcore/Transaction.cpp'; fi`

cpp-ethereum/libethereum/libvds_common_a-Transaction.o: cpp-ethereum/libethereum/Transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-Transaction.o -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Transaction.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-Transaction.o `test -f 'cpp-ethereum/libethereum/Transaction.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/Transaction.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Transaction.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Transaction.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/Transaction.cpp' object='cpp-ethereum/libethereum/libvds_common_a-Transaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-Transaction.o `test -f 'cpp-ethereum/libethereum/Transaction.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/Transaction.cpp

cpp-ethereum/libethereum/libvds_common_a-Transaction.obj: cpp-ethereum/libethereum/Transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-Transaction.obj -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Transaction.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-Transaction.obj `if test -f 'cpp-ethereum/libethereum/Transaction.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/Transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/Transaction.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Transaction.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Transaction.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/Transaction.cpp' object='cpp-ethereum/libethereum/libvds_common_a-Transaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-Transaction.obj `if test -f 'cpp-ethereum/libethereum/Transaction.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/Transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/Transaction.cpp'; fi`

cpp-ethereum/libethereum/libvds_common_a-Executive.o: cpp-ethereum/libethereum/Executive.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-Executive.o -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Executive.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-Executive.o `test -f 'cpp-ethereum/libethereum/Executive.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/Executive.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Executive.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Executive.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/Executive.cpp' object='cpp-ethereum/libethereum/libvds_common_a-Executive.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-Executive.o `test -f 'cpp-ethereum/libethereum/Executive.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/Executive.cpp

cpp-ethereum/libethereum/libvds_common_a-Executive.obj: cpp-ethereum/libethereum/Executive.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-Executive.obj -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Executive.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-Executive.obj `if test -f 'cpp-ethereum/libethereum/Executive.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/Executive.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/Executive.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Executive.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Executive.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/Executive.cpp' object='cpp-ethereum/libethereum/libvds_common_a-Executive.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-Executive.obj `if test -f 'cpp-ethereum/libethereum/Executive.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/Executive.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/Executive.cpp'; fi`

cpp-ethereum/libethereum/libvds_common_a-ExtVM.o: cpp-ethereum/libethereum/ExtVM.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-ExtVM.o -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-ExtVM.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-ExtVM.o `test -f 'cpp-ethereum/libethereum/ExtVM.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/ExtVM.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-ExtVM.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-ExtVM.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/ExtVM.cpp' object='cpp-ethereum/libethereum/libvds_common_a-ExtVM.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-ExtVM.o `test -f 'cpp-ethereum/libethereum/ExtVM.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/ExtVM.cpp

cpp-ethereum/libethereum/libvds_common_a-ExtVM.obj: cpp-ethereum/libethereum/ExtVM.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-ExtVM.obj -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-ExtVM.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-ExtVM.obj `if test -f 'cpp-ethereum/libethereum/ExtVM.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/ExtVM.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/ExtVM.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-ExtVM.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-ExtVM.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/ExtVM.cpp' object='cpp-ethereum/libethereum/libvds_common_a-ExtVM.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-ExtVM.obj `if test -f 'cpp-ethereum/libethereum/ExtVM.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/ExtVM.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/ExtVM.cpp'; fi`

cpp-ethereum/libethereum/libvds_common_a-Block.o: cpp-ethereum/libethereum/Block.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-Block.o -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Block.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-Block.o `test -f 'cpp-ethereum/libethereum/Block.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/Block.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Block.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Block.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/Block.cpp' object='cpp-ethereum/libethereum/libvds_common_a-Block.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-Block.o `test -f 'cpp-ethereum/libethereum/Block.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/Block.cpp

cpp-ethereum/libethereum/libvds_common_a-Block.obj: cpp-ethereum/libethereum/Block.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-Block.obj -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Block.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-Block.obj `if test -f 'cpp-ethereum/libethereum/Block.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/Block.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/Block.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Block.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-Block.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/Block.cpp' object='cpp-ethereum/libethereum/libvds_common_a-Block.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-Block.obj `if test -f 'cpp-ethereum/libethereum/Block.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/Block.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/Block.cpp'; fi`

cpp-ethereum/libethereum/libvds_common_a-BlockChain.o: cpp-ethereum/libethereum/BlockChain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-BlockChain.o -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-BlockChain.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-BlockChain.o `test -f 'cpp-ethereum/libethereum/BlockChain.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/BlockChain.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-BlockChain.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-BlockChain.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/BlockChain.cpp' object='cpp-ethereum/libethereum/libvds_common_a-BlockChain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-BlockChain.o `test -f 'cpp-ethereum/libethereum/BlockChain.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/BlockChain.cpp

cpp-ethereum/libethereum/libvds_common_a-BlockChain.obj: cpp-ethereum/libethereum/BlockChain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-BlockChain.obj -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-BlockChain.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-BlockChain.obj `if test -f 'cpp-ethereum/libethereum/BlockChain.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/BlockChain.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/BlockChain.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-BlockChain.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-BlockChain.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/BlockChain.cpp' object='cpp-ethereum/libethereum/libvds_common_a-BlockChain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-BlockChain.obj `if test -f 'cpp-ethereum/libethereum/BlockChain.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/BlockChain.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/BlockChain.cpp'; fi`

cpp-ethereum/libethereum/libvds_common_a-BlockDetails.o: cpp-ethereum/libethereum/BlockDetails.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-BlockDetails.o -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-BlockDetails.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-BlockDetails.o `test -f 'cpp-ethereum/libethereum/BlockDetails.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/BlockDetails.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-BlockDetails.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-BlockDetails.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/BlockDetails.cpp' object='cpp-ethereum/libethereum/libvds_common_a-BlockDetails.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-BlockDetails.o `test -f 'cpp-ethereum/libethereum/BlockDetails.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/BlockDetails.cpp

cpp-ethereum/libethereum/libvds_common_a-BlockDetails.obj: cpp-ethereum/libethereum/BlockDetails.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-BlockDetails.obj -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-BlockDetails.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-BlockDetails.obj `if test -f 'cpp-ethereum/libethereum/BlockDetails.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/BlockDetails.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/BlockDetails.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-BlockDetails.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-BlockDetails.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/BlockDetails.cpp' object='cpp-ethereum/libethereum/libvds_common_a-BlockDetails.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-BlockDetails.obj `if test -f 'cpp-ethereum/libethereum/BlockDetails.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/BlockDetails.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/BlockDetails.cpp'; fi`

cpp-ethereum/libethereum/libvds_common_a-TransactionQueue.o: cpp-ethereum/libethereum/TransactionQueue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-TransactionQueue.o -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-TransactionQueue.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-TransactionQueue.o `test -f 'cpp-ethereum/libethereum/TransactionQueue.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/TransactionQueue.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-TransactionQueue.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-TransactionQueue.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/TransactionQueue.cpp' object='cpp-ethereum/libethereum/libvds_common_a-TransactionQueue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-TransactionQueue.o `test -f 'cpp-ethereum/libethereum/TransactionQueue.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/TransactionQueue.cpp

cpp-ethereum/libethereum/libvds_common_a-TransactionQueue.obj: cpp-ethereum/libethereum/TransactionQueue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-TransactionQueue.obj -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-TransactionQueue.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-TransactionQueue.obj `if test -f 'cpp-ethereum/libethereum/TransactionQueue.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/TransactionQueue.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/TransactionQueue.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-TransactionQueue.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-TransactionQueue.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/TransactionQueue.cpp' object='cpp-ethereum/libethereum/libvds_common_a-TransactionQueue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-TransactionQueue.obj `if test -f 'cpp-ethereum/libethereum/TransactionQueue.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/TransactionQueue.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/TransactionQueue.cpp'; fi`

cpp-ethereum/libethereum/libvds_common_a-BlockQueue.o: cpp-ethereum/libethereum/BlockQueue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-BlockQueue.o -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-BlockQueue.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-BlockQueue.o `test -f 'cpp-ethereum/libethereum/BlockQueue.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/BlockQueue.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-BlockQueue.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-BlockQueue.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/BlockQueue.cpp' object='cpp-ethereum/libethereum/libvds_common_a-BlockQueue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-BlockQueue.o `test -f 'cpp-ethereum/libethereum/BlockQueue.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/BlockQueue.cpp

cpp-ethereum/libethereum/libvds_common_a-BlockQueue.obj: cpp-ethereum/libethereum/BlockQueue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-BlockQueue.obj -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-BlockQueue.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-BlockQueue.obj `if test -f 'cpp-ethereum/libethereum/BlockQueue.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/BlockQueue.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/BlockQueue.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-BlockQueue.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-BlockQueue.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/BlockQueue.cpp' object='cpp-ethereum/libethereum/libvds_common_a-BlockQueue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-BlockQueue.obj `if test -f 'cpp-ethereum/libethereum/BlockQueue.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/BlockQueue.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/BlockQueue.cpp'; fi`

cpp-ethereum/libethcore/libvds_common_a-BlockHeader.o: cpp-ethereum/libethcore/BlockHeader.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethcore/libvds_common_a-BlockHeader.o -MD -MP -MF cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-BlockHeader.Tpo -c -o cpp-ethereum/libethcore/libvds_common_a-BlockHeader.o `test -f 'cpp-ethereum/libethcore/BlockHeader.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethcore/BlockHeader.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-BlockHeader.Tpo cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-BlockHeader.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethcore/BlockHeader.cpp' object='cpp-ethereum/libethcore/libvds_common_a-BlockHeader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethcore/libvds_common_a-BlockHeader.o `test -f 'cpp-ethereum/libethcore/BlockHeader.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethcore/BlockHeader.cpp

cpp-ethereum/libethcore/libvds_common_a-BlockHeader.obj: cpp-ethereum/libethcore/BlockHeader.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethcore/libvds_common_a-BlockHeader.obj -MD -MP -MF cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-BlockHeader.Tpo -c -o cpp-ethereum/libethcore/libvds_common_a-BlockHeader.obj `if test -f 'cpp-ethereum/libethcore/BlockHeader.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethcore/BlockHeader.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethcore/BlockHeader.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-BlockHeader.Tpo cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-BlockHeader.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethcore/BlockHeader.cpp' object='cpp-ethereum/libethcore/libvds_common_a-BlockHeader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethcore/libvds_common_a-BlockHeader.obj `if test -f 'cpp-ethereum/libethcore/BlockHeader.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethcore/BlockHeader.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethcore/BlockHeader.cpp'; fi`

cpp-ethereum/libethereum/libvds_common_a-TransactionReceipt.o: cpp-ethereum/libethereum/TransactionReceipt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-TransactionReceipt.o -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-TransactionReceipt.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-TransactionReceipt.o `test -f 'cpp-ethereum/libethereum/TransactionReceipt.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/TransactionReceipt.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-TransactionReceipt.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-TransactionReceipt.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/TransactionReceipt.cpp' object='cpp-ethereum/libethereum/libvds_common_a-TransactionReceipt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-TransactionReceipt.o `test -f 'cpp-ethereum/libethereum/TransactionReceipt.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/TransactionReceipt.cpp

cpp-ethereum/libethereum/libvds_common_a-TransactionReceipt.obj: cpp-ethereum/libethereum/TransactionReceipt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-TransactionReceipt.obj -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-TransactionReceipt.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-TransactionReceipt.obj `if test -f 'cpp-ethereum/libethereum/TransactionReceipt.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/TransactionReceipt.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/TransactionReceipt.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-TransactionReceipt.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-TransactionReceipt.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/TransactionReceipt.cpp' object='cpp-ethereum/libethereum/libvds_common_a-TransactionReceipt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-TransactionReceipt.obj `if test -f 'cpp-ethereum/libethereum/TransactionReceipt.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/TransactionReceipt.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/TransactionReceipt.cpp'; fi`

cpp-ethereum/libethcore/libvds_common_a-SealEngine.o: cpp-ethereum/libethcore/SealEngine.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethcore/libvds_common_a-SealEngine.o -MD -MP -MF cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-SealEngine.Tpo -c -o cpp-ethereum/libethcore/libvds_common_a-SealEngine.o `test -f 'cpp-ethereum/libethcore/SealEngine.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethcore/SealEngine.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-SealEngine.Tpo cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-SealEngine.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethcore/SealEngine.cpp' object='cpp-ethereum/libethcore/libvds_common_a-SealEngine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethcore/libvds_common_a-SealEngine.o `test -f 'cpp-ethereum/libethcore/SealEngine.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethcore/SealEngine.cpp

cpp-ethereum/libethcore/libvds_common_a-SealEngine.obj: cpp-ethereum/libethcore/SealEngine.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethcore/libvds_common_a-SealEngine.obj -MD -MP -MF cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-SealEngine.Tpo -c -o cpp-ethereum/libethcore/libvds_common_a-SealEngine.obj `if test -f 'cpp-ethereum/libethcore/SealEngine.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethcore/SealEngine.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethcore/SealEngine.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-SealEngine.Tpo cpp-ethereum/libethcore/$(DEPDIR)/libvds_common_a-SealEngine.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethcore/SealEngine.cpp' object='cpp-ethereum/libethcore/libvds_common_a-SealEngine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethcore/libvds_common_a-SealEngine.obj `if test -f 'cpp-ethereum/libethcore/SealEngine.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethcore/SealEngine.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethcore/SealEngine.cpp'; fi`

cpp-ethereum/libdevcore/libvds_common_a-TrieHash.o: cpp-ethereum/libdevcore/TrieHash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-TrieHash.o -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TrieHash.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-TrieHash.o `test -f 'cpp-ethereum/libdevcore/TrieHash.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/TrieHash.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TrieHash.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TrieHash.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/TrieHash.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-TrieHash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-TrieHash.o `test -f 'cpp-ethereum/libdevcore/TrieHash.cpp' || echo '$(srcdir)/'`cpp-ethereum/libdevcore/TrieHash.cpp

cpp-ethereum/libdevcore/libvds_common_a-TrieHash.obj: cpp-ethereum/libdevcore/TrieHash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libdevcore/libvds_common_a-TrieHash.obj -MD -MP -MF cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TrieHash.Tpo -c -o cpp-ethereum/libdevcore/libvds_common_a-TrieHash.obj `if test -f 'cpp-ethereum/libdevcore/TrieHash.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/TrieHash.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/TrieHash.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TrieHash.Tpo cpp-ethereum/libdevcore/$(DEPDIR)/libvds_common_a-TrieHash.Po
#	$(AM_V_CXX)source='cpp-ethereum/libdevcore/TrieHash.cpp' object='cpp-ethereum/libdevcore/libvds_common_a-TrieHash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libdevcore/libvds_common_a-TrieHash.obj `if test -f 'cpp-ethereum/libdevcore/TrieHash.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libdevcore/TrieHash.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libdevcore/TrieHash.cpp'; fi`

cpp-ethereum/libethereum/libvds_common_a-GenesisInfo.o: cpp-ethereum/libethereum/GenesisInfo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-GenesisInfo.o -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-GenesisInfo.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-GenesisInfo.o `test -f 'cpp-ethereum/libethereum/GenesisInfo.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/GenesisInfo.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-GenesisInfo.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-GenesisInfo.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/GenesisInfo.cpp' object='cpp-ethereum/libethereum/libvds_common_a-GenesisInfo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-GenesisInfo.o `test -f 'cpp-ethereum/libethereum/GenesisInfo.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethereum/GenesisInfo.cpp

cpp-ethereum/libethereum/libvds_common_a-GenesisInfo.obj: cpp-ethereum/libethereum/GenesisInfo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethereum/libvds_common_a-GenesisInfo.obj -MD -MP -MF cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-GenesisInfo.Tpo -c -o cpp-ethereum/libethereum/libvds_common_a-GenesisInfo.obj `if test -f 'cpp-ethereum/libethereum/GenesisInfo.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/GenesisInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/GenesisInfo.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-GenesisInfo.Tpo cpp-ethereum/libethereum/$(DEPDIR)/libvds_common_a-GenesisInfo.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethereum/GenesisInfo.cpp' object='cpp-ethereum/libethereum/libvds_common_a-GenesisInfo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethereum/libvds_common_a-GenesisInfo.obj `if test -f 'cpp-ethereum/libethereum/GenesisInfo.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethereum/GenesisInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethereum/GenesisInfo.cpp'; fi`

cpp-ethereum/libethashseal/libvds_common_a-Ethash.o: cpp-ethereum/libethashseal/Ethash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/libvds_common_a-Ethash.o -MD -MP -MF cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-Ethash.Tpo -c -o cpp-ethereum/libethashseal/libvds_common_a-Ethash.o `test -f 'cpp-ethereum/libethashseal/Ethash.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/Ethash.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-Ethash.Tpo cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-Ethash.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/Ethash.cpp' object='cpp-ethereum/libethashseal/libvds_common_a-Ethash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/libvds_common_a-Ethash.o `test -f 'cpp-ethereum/libethashseal/Ethash.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/Ethash.cpp

cpp-ethereum/libethashseal/libvds_common_a-Ethash.obj: cpp-ethereum/libethashseal/Ethash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/libvds_common_a-Ethash.obj -MD -MP -MF cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-Ethash.Tpo -c -o cpp-ethereum/libethashseal/libvds_common_a-Ethash.obj `if test -f 'cpp-ethereum/libethashseal/Ethash.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/Ethash.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/Ethash.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-Ethash.Tpo cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-Ethash.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/Ethash.cpp' object='cpp-ethereum/libethashseal/libvds_common_a-Ethash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/libvds_common_a-Ethash.obj `if test -f 'cpp-ethereum/libethashseal/Ethash.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/Ethash.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/Ethash.cpp'; fi`

cpp-ethereum/libethashseal/libvds_common_a-EthashCPUMiner.o: cpp-ethereum/libethashseal/EthashCPUMiner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/libvds_common_a-EthashCPUMiner.o -MD -MP -MF cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-EthashCPUMiner.Tpo -c -o cpp-ethereum/libethashseal/libvds_common_a-EthashCPUMiner.o `test -f 'cpp-ethereum/libethashseal/EthashCPUMiner.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/EthashCPUMiner.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-EthashCPUMiner.Tpo cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-EthashCPUMiner.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/EthashCPUMiner.cpp' object='cpp-ethereum/libethashseal/libvds_common_a-EthashCPUMiner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/libvds_common_a-EthashCPUMiner.o `test -f 'cpp-ethereum/libethashseal/EthashCPUMiner.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/EthashCPUMiner.cpp

cpp-ethereum/libethashseal/libvds_common_a-EthashCPUMiner.obj: cpp-ethereum/libethashseal/EthashCPUMiner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/libvds_common_a-EthashCPUMiner.obj -MD -MP -MF cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-EthashCPUMiner.Tpo -c -o cpp-ethereum/libethashseal/libvds_common_a-EthashCPUMiner.obj `if test -f 'cpp-ethereum/libethashseal/EthashCPUMiner.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/EthashCPUMiner.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/EthashCPUMiner.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-EthashCPUMiner.Tpo cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-EthashCPUMiner.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/EthashCPUMiner.cpp' object='cpp-ethereum/libethashseal/libvds_common_a-EthashCPUMiner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/libvds_common_a-EthashCPUMiner.obj `if test -f 'cpp-ethereum/libethashseal/EthashCPUMiner.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/EthashCPUMiner.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/EthashCPUMiner.cpp'; fi`

cpp-ethereum/libethashseal/libvds_common_a-EthashAux.o: cpp-ethereum/libethashseal/EthashAux.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/libvds_common_a-EthashAux.o -MD -MP -MF cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-EthashAux.Tpo -c -o cpp-ethereum/libethashseal/libvds_common_a-EthashAux.o `test -f 'cpp-ethereum/libethashseal/EthashAux.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/EthashAux.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-EthashAux.Tpo cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-EthashAux.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/EthashAux.cpp' object='cpp-ethereum/libethashseal/libvds_common_a-EthashAux.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/libvds_common_a-EthashAux.o `test -f 'cpp-ethereum/libethashseal/EthashAux.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/EthashAux.cpp

cpp-ethereum/libethashseal/libvds_common_a-EthashAux.obj: cpp-ethereum/libethashseal/EthashAux.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/libvds_common_a-EthashAux.obj -MD -MP -MF cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-EthashAux.Tpo -c -o cpp-ethereum/libethashseal/libvds_common_a-EthashAux.obj `if test -f 'cpp-ethereum/libethashseal/EthashAux.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/EthashAux.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/EthashAux.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-EthashAux.Tpo cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-EthashAux.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/EthashAux.cpp' object='cpp-ethereum/libethashseal/libvds_common_a-EthashAux.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/libvds_common_a-EthashAux.obj `if test -f 'cpp-ethereum/libethashseal/EthashAux.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/EthashAux.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/EthashAux.cpp'; fi`

cpp-ethereum/libethashseal/libvds_common_a-EthashProofOfWork.o: cpp-ethereum/libethashseal/EthashProofOfWork.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/libvds_common_a-EthashProofOfWork.o -MD -MP -MF cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-EthashProofOfWork.Tpo -c -o cpp-ethereum/libethashseal/libvds_common_a-EthashProofOfWork.o `test -f 'cpp-ethereum/libethashseal/EthashProofOfWork.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/EthashProofOfWork.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-EthashProofOfWork.Tpo cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-EthashProofOfWork.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/EthashProofOfWork.cpp' object='cpp-ethereum/libethashseal/libvds_common_a-EthashProofOfWork.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/libvds_common_a-EthashProofOfWork.o `test -f 'cpp-ethereum/libethashseal/EthashProofOfWork.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/EthashProofOfWork.cpp

cpp-ethereum/libethashseal/libvds_common_a-EthashProofOfWork.obj: cpp-ethereum/libethashseal/EthashProofOfWork.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/libvds_common_a-EthashProofOfWork.obj -MD -MP -MF cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-EthashProofOfWork.Tpo -c -o cpp-ethereum/libethashseal/libvds_common_a-EthashProofOfWork.obj `if test -f 'cpp-ethereum/libethashseal/EthashProofOfWork.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/EthashProofOfWork.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/EthashProofOfWork.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-EthashProofOfWork.Tpo cpp-ethereum/libethashseal/$(DEPDIR)/libvds_common_a-EthashProofOfWork.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/EthashProofOfWork.cpp' object='cpp-ethereum/libethashseal/libvds_common_a-EthashProofOfWork.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/libvds_common_a-EthashProofOfWork.obj `if test -f 'cpp-ethereum/libethashseal/EthashProofOfWork.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/EthashProofOfWork.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/EthashProofOfWork.cpp'; fi`

cpp-ethereum/libethashseal/genesis/libvds_common_a-mainNetwork.o: cpp-ethereum/libethashseal/genesis/mainNetwork.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/genesis/libvds_common_a-mainNetwork.o -MD -MP -MF cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-mainNetwork.Tpo -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-mainNetwork.o `test -f 'cpp-ethereum/libethashseal/genesis/mainNetwork.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/genesis/mainNetwork.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-mainNetwork.Tpo cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-mainNetwork.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/genesis/mainNetwork.cpp' object='cpp-ethereum/libethashseal/genesis/libvds_common_a-mainNetwork.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-mainNetwork.o `test -f 'cpp-ethereum/libethashseal/genesis/mainNetwork.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/genesis/mainNetwork.cpp

cpp-ethereum/libethashseal/genesis/libvds_common_a-mainNetwork.obj: cpp-ethereum/libethashseal/genesis/mainNetwork.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/genesis/libvds_common_a-mainNetwork.obj -MD -MP -MF cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-mainNetwork.Tpo -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-mainNetwork.obj `if test -f 'cpp-ethereum/libethashseal/genesis/mainNetwork.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/genesis/mainNetwork.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/genesis/mainNetwork.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-mainNetwork.Tpo cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-mainNetwork.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/genesis/mainNetwork.cpp' object='cpp-ethereum/libethashseal/genesis/libvds_common_a-mainNetwork.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-mainNetwork.obj `if test -f 'cpp-ethereum/libethashseal/genesis/mainNetwork.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/genesis/mainNetwork.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/genesis/mainNetwork.cpp'; fi`

cpp-ethereum/libethashseal/genesis/libvds_common_a-eip150Test.o: cpp-ethereum/libethashseal/genesis/eip150Test.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/genesis/libvds_common_a-eip150Test.o -MD -MP -MF cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-eip150Test.Tpo -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-eip150Test.o `test -f 'cpp-ethereum/libethashseal/genesis/eip150Test.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/genesis/eip150Test.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-eip150Test.Tpo cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-eip150Test.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/genesis/eip150Test.cpp' object='cpp-ethereum/libethashseal/genesis/libvds_common_a-eip150Test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-eip150Test.o `test -f 'cpp-ethereum/libethashseal/genesis/eip150Test.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/genesis/eip150Test.cpp

cpp-ethereum/libethashseal/genesis/libvds_common_a-eip150Test.obj: cpp-ethereum/libethashseal/genesis/eip150Test.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/genesis/libvds_common_a-eip150Test.obj -MD -MP -MF cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-eip150Test.Tpo -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-eip150Test.obj `if test -f 'cpp-ethereum/libethashseal/genesis/eip150Test.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/genesis/eip150Test.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/genesis/eip150Test.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-eip150Test.Tpo cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-eip150Test.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/genesis/eip150Test.cpp' object='cpp-ethereum/libethashseal/genesis/libvds_common_a-eip150Test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-eip150Test.obj `if test -f 'cpp-ethereum/libethashseal/genesis/eip150Test.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/genesis/eip150Test.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/genesis/eip150Test.cpp'; fi`

cpp-ethereum/libethashseal/genesis/libvds_common_a-eip158Test.o: cpp-ethereum/libethashseal/genesis/eip158Test.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/genesis/libvds_common_a-eip158Test.o -MD -MP -MF cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-eip158Test.Tpo -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-eip158Test.o `test -f 'cpp-ethereum/libethashseal/genesis/eip158Test.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/genesis/eip158Test.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-eip158Test.Tpo cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-eip158Test.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/genesis/eip158Test.cpp' object='cpp-ethereum/libethashseal/genesis/libvds_common_a-eip158Test.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-eip158Test.o `test -f 'cpp-ethereum/libethashseal/genesis/eip158Test.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/genesis/eip158Test.cpp

cpp-ethereum/libethashseal/genesis/libvds_common_a-eip158Test.obj: cpp-ethereum/libethashseal/genesis/eip158Test.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/genesis/libvds_common_a-eip158Test.obj -MD -MP -MF cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-eip158Test.Tpo -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-eip158Test.obj `if test -f 'cpp-ethereum/libethashseal/genesis/eip158Test.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/genesis/eip158Test.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/genesis/eip158Test.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-eip158Test.Tpo cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-eip158Test.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/genesis/eip158Test.cpp' object='cpp-ethereum/libethashseal/genesis/libvds_common_a-eip158Test.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-eip158Test.obj `if test -f 'cpp-ethereum/libethashseal/genesis/eip158Test.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/genesis/eip158Test.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/genesis/eip158Test.cpp'; fi`

cpp-ethereum/libethashseal/genesis/libvds_common_a-frontierTest.o: cpp-ethereum/libethashseal/genesis/frontierTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/genesis/libvds_common_a-frontierTest.o -MD -MP -MF cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-frontierTest.Tpo -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-frontierTest.o `test -f 'cpp-ethereum/libethashseal/genesis/frontierTest.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/genesis/frontierTest.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-frontierTest.Tpo cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-frontierTest.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/genesis/frontierTest.cpp' object='cpp-ethereum/libethashseal/genesis/libvds_common_a-frontierTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-frontierTest.o `test -f 'cpp-ethereum/libethashseal/genesis/frontierTest.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/genesis/frontierTest.cpp

cpp-ethereum/libethashseal/genesis/libvds_common_a-frontierTest.obj: cpp-ethereum/libethashseal/genesis/frontierTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/genesis/libvds_common_a-frontierTest.obj -MD -MP -MF cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-frontierTest.Tpo -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-frontierTest.obj `if test -f 'cpp-ethereum/libethashseal/genesis/frontierTest.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/genesis/frontierTest.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/genesis/frontierTest.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-frontierTest.Tpo cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-frontierTest.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/genesis/frontierTest.cpp' object='cpp-ethereum/libethashseal/genesis/libvds_common_a-frontierTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-frontierTest.obj `if test -f 'cpp-ethereum/libethashseal/genesis/frontierTest.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/genesis/frontierTest.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/genesis/frontierTest.cpp'; fi`

cpp-ethereum/libethashseal/genesis/libvds_common_a-homesteadTest.o: cpp-ethereum/libethashseal/genesis/homesteadTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/genesis/libvds_common_a-homesteadTest.o -MD -MP -MF cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-homesteadTest.Tpo -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-homesteadTest.o `test -f 'cpp-ethereum/libethashseal/genesis/homesteadTest.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/genesis/homesteadTest.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-homesteadTest.Tpo cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-homesteadTest.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/genesis/homesteadTest.cpp' object='cpp-ethereum/libethashseal/genesis/libvds_common_a-homesteadTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-homesteadTest.o `test -f 'cpp-ethereum/libethashseal/genesis/homesteadTest.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/genesis/homesteadTest.cpp

cpp-ethereum/libethashseal/genesis/libvds_common_a-homesteadTest.obj: cpp-ethereum/libethashseal/genesis/homesteadTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/genesis/libvds_common_a-homesteadTest.obj -MD -MP -MF cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-homesteadTest.Tpo -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-homesteadTest.obj `if test -f 'cpp-ethereum/libethashseal/genesis/homesteadTest.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/genesis/homesteadTest.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/genesis/homesteadTest.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-homesteadTest.Tpo cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-homesteadTest.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/genesis/homesteadTest.cpp' object='cpp-ethereum/libethashseal/genesis/libvds_common_a-homesteadTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-homesteadTest.obj `if test -f 'cpp-ethereum/libethashseal/genesis/homesteadTest.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/genesis/homesteadTest.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/genesis/homesteadTest.cpp'; fi`

cpp-ethereum/libethashseal/genesis/libvds_common_a-mainNetworkTest.o: cpp-ethereum/libethashseal/genesis/mainNetworkTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/genesis/libvds_common_a-mainNetworkTest.o -MD -MP -MF cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-mainNetworkTest.Tpo -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-mainNetworkTest.o `test -f 'cpp-ethereum/libethashseal/genesis/mainNetworkTest.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/genesis/mainNetworkTest.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-mainNetworkTest.Tpo cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-mainNetworkTest.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/genesis/mainNetworkTest.cpp' object='cpp-ethereum/libethashseal/genesis/libvds_common_a-mainNetworkTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-mainNetworkTest.o `test -f 'cpp-ethereum/libethashseal/genesis/mainNetworkTest.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/genesis/mainNetworkTest.cpp

cpp-ethereum/libethashseal/genesis/libvds_common_a-mainNetworkTest.obj: cpp-ethereum/libethashseal/genesis/mainNetworkTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/genesis/libvds_common_a-mainNetworkTest.obj -MD -MP -MF cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-mainNetworkTest.Tpo -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-mainNetworkTest.obj `if test -f 'cpp-ethereum/libethashseal/genesis/mainNetworkTest.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/genesis/mainNetworkTest.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/genesis/mainNetworkTest.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-mainNetworkTest.Tpo cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-mainNetworkTest.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/genesis/mainNetworkTest.cpp' object='cpp-ethereum/libethashseal/genesis/libvds_common_a-mainNetworkTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-mainNetworkTest.obj `if test -f 'cpp-ethereum/libethashseal/genesis/mainNetworkTest.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/genesis/mainNetworkTest.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/genesis/mainNetworkTest.cpp'; fi`

cpp-ethereum/libethashseal/genesis/libvds_common_a-metropolisTest.o: cpp-ethereum/libethashseal/genesis/metropolisTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/genesis/libvds_common_a-metropolisTest.o -MD -MP -MF cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-metropolisTest.Tpo -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-metropolisTest.o `test -f 'cpp-ethereum/libethashseal/genesis/metropolisTest.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/genesis/metropolisTest.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-metropolisTest.Tpo cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-metropolisTest.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/genesis/metropolisTest.cpp' object='cpp-ethereum/libethashseal/genesis/libvds_common_a-metropolisTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-metropolisTest.o `test -f 'cpp-ethereum/libethashseal/genesis/metropolisTest.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/genesis/metropolisTest.cpp

cpp-ethereum/libethashseal/genesis/libvds_common_a-metropolisTest.obj: cpp-ethereum/libethashseal/genesis/metropolisTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/genesis/libvds_common_a-metropolisTest.obj -MD -MP -MF cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-metropolisTest.Tpo -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-metropolisTest.obj `if test -f 'cpp-ethereum/libethashseal/genesis/metropolisTest.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/genesis/metropolisTest.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/genesis/metropolisTest.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-metropolisTest.Tpo cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-metropolisTest.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/genesis/metropolisTest.cpp' object='cpp-ethereum/libethashseal/genesis/libvds_common_a-metropolisTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-metropolisTest.obj `if test -f 'cpp-ethereum/libethashseal/genesis/metropolisTest.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/genesis/metropolisTest.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/genesis/metropolisTest.cpp'; fi`

cpp-ethereum/libethashseal/genesis/libvds_common_a-qtumMainNetwork.o: cpp-ethereum/libethashseal/genesis/qtumMainNetwork.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/genesis/libvds_common_a-qtumMainNetwork.o -MD -MP -MF cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-qtumMainNetwork.Tpo -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-qtumMainNetwork.o `test -f 'cpp-ethereum/libethashseal/genesis/qtumMainNetwork.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/genesis/qtumMainNetwork.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-qtumMainNetwork.Tpo cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-qtumMainNetwork.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/genesis/qtumMainNetwork.cpp' object='cpp-ethereum/libethashseal/genesis/libvds_common_a-qtumMainNetwork.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-qtumMainNetwork.o `test -f 'cpp-ethereum/libethashseal/genesis/qtumMainNetwork.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/genesis/qtumMainNetwork.cpp

cpp-ethereum/libethashseal/genesis/libvds_common_a-qtumMainNetwork.obj: cpp-ethereum/libethashseal/genesis/qtumMainNetwork.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/genesis/libvds_common_a-qtumMainNetwork.obj -MD -MP -MF cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-qtumMainNetwork.Tpo -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-qtumMainNetwork.obj `if test -f 'cpp-ethereum/libethashseal/genesis/qtumMainNetwork.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/genesis/qtumMainNetwork.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/genesis/qtumMainNetwork.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-qtumMainNetwork.Tpo cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-qtumMainNetwork.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/genesis/qtumMainNetwork.cpp' object='cpp-ethereum/libethashseal/genesis/libvds_common_a-qtumMainNetwork.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-qtumMainNetwork.obj `if test -f 'cpp-ethereum/libethashseal/genesis/qtumMainNetwork.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/genesis/qtumMainNetwork.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/genesis/qtumMainNetwork.cpp'; fi`

cpp-ethereum/libethashseal/genesis/libvds_common_a-qtumTestNetwork.o: cpp-ethereum/libethashseal/genesis/qtumTestNetwork.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/genesis/libvds_common_a-qtumTestNetwork.o -MD -MP -MF cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-qtumTestNetwork.Tpo -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-qtumTestNetwork.o `test -f 'cpp-ethereum/libethashseal/genesis/qtumTestNetwork.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/genesis/qtumTestNetwork.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-qtumTestNetwork.Tpo cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-qtumTestNetwork.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/genesis/qtumTestNetwork.cpp' object='cpp-ethereum/libethashseal/genesis/libvds_common_a-qtumTestNetwork.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-qtumTestNetwork.o `test -f 'cpp-ethereum/libethashseal/genesis/qtumTestNetwork.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/genesis/qtumTestNetwork.cpp

cpp-ethereum/libethashseal/genesis/libvds_common_a-qtumTestNetwork.obj: cpp-ethereum/libethashseal/genesis/qtumTestNetwork.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/genesis/libvds_common_a-qtumTestNetwork.obj -MD -MP -MF cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-qtumTestNetwork.Tpo -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-qtumTestNetwork.obj `if test -f 'cpp-ethereum/libethashseal/genesis/qtumTestNetwork.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/genesis/qtumTestNetwork.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/genesis/qtumTestNetwork.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-qtumTestNetwork.Tpo cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-qtumTestNetwork.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/genesis/qtumTestNetwork.cpp' object='cpp-ethereum/libethashseal/genesis/libvds_common_a-qtumTestNetwork.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-qtumTestNetwork.obj `if test -f 'cpp-ethereum/libethashseal/genesis/qtumTestNetwork.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/genesis/qtumTestNetwork.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/genesis/qtumTestNetwork.cpp'; fi`

cpp-ethereum/libethashseal/genesis/libvds_common_a-ropsten.o: cpp-ethereum/libethashseal/genesis/ropsten.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/genesis/libvds_common_a-ropsten.o -MD -MP -MF cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-ropsten.Tpo -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-ropsten.o `test -f 'cpp-ethereum/libethashseal/genesis/ropsten.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/genesis/ropsten.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-ropsten.Tpo cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-ropsten.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/genesis/ropsten.cpp' object='cpp-ethereum/libethashseal/genesis/libvds_common_a-ropsten.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-ropsten.o `test -f 'cpp-ethereum/libethashseal/genesis/ropsten.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/genesis/ropsten.cpp

cpp-ethereum/libethashseal/genesis/libvds_common_a-ropsten.obj: cpp-ethereum/libethashseal/genesis/ropsten.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/genesis/libvds_common_a-ropsten.obj -MD -MP -MF cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-ropsten.Tpo -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-ropsten.obj `if test -f 'cpp-ethereum/libethashseal/genesis/ropsten.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/genesis/ropsten.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/genesis/ropsten.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-ropsten.Tpo cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-ropsten.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/genesis/ropsten.cpp' object='cpp-ethereum/libethashseal/genesis/libvds_common_a-ropsten.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-ropsten.obj `if test -f 'cpp-ethereum/libethashseal/genesis/ropsten.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/genesis/ropsten.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/genesis/ropsten.cpp'; fi`

cpp-ethereum/libethashseal/genesis/libvds_common_a-transitionnetTest.o: cpp-ethereum/libethashseal/genesis/transitionnetTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/genesis/libvds_common_a-transitionnetTest.o -MD -MP -MF cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-transitionnetTest.Tpo -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-transitionnetTest.o `test -f 'cpp-ethereum/libethashseal/genesis/transitionnetTest.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/genesis/transitionnetTest.cpp
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-transitionnetTest.Tpo cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-transitionnetTest.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/genesis/transitionnetTest.cpp' object='cpp-ethereum/libethashseal/genesis/libvds_common_a-transitionnetTest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-transitionnetTest.o `test -f 'cpp-ethereum/libethashseal/genesis/transitionnetTest.cpp' || echo '$(srcdir)/'`cpp-ethereum/libethashseal/genesis/transitionnetTest.cpp

cpp-ethereum/libethashseal/genesis/libvds_common_a-transitionnetTest.obj: cpp-ethereum/libethashseal/genesis/transitionnetTest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -MT cpp-ethereum/libethashseal/genesis/libvds_common_a-transitionnetTest.obj -MD -MP -MF cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-transitionnetTest.Tpo -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-transitionnetTest.obj `if test -f 'cpp-ethereum/libethashseal/genesis/transitionnetTest.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/genesis/transitionnetTest.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/genesis/transitionnetTest.cpp'; fi`
	$(AM_V_at)$(am__mv) cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-transitionnetTest.Tpo cpp-ethereum/libethashseal/genesis/$(DEPDIR)/libvds_common_a-transitionnetTest.Po
#	$(AM_V_CXX)source='cpp-ethereum/libethashseal/genesis/transitionnetTest.cpp' object='cpp-ethereum/libethashseal/genesis/libvds_common_a-transitionnetTest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_common_a_CPPFLAGS) $(CPPFLAGS) $(libvds_common_a_CXXFLAGS) $(CXXFLAGS) -c -o cpp-ethereum/libethashseal/genesis/libvds_common_a-transitionnetTest.obj `if test -f 'cpp-ethereum/libethashseal/genesis/transitionnetTest.cpp'; then $(CYGPATH_W) 'cpp-ethereum/libethashseal/genesis/transitionnetTest.cpp'; else $(CYGPATH_W) '$(srcdir)/cpp-ethereum/libethashseal/genesis/transitionnetTest.cpp'; fi`

crypto/libvds_consensus_a-equihash.o: crypto/equihash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libvds_consensus_a-equihash.o -MD -MP -MF crypto/$(DEPDIR)/libvds_consensus_a-equihash.Tpo -c -o crypto/libvds_consensus_a-equihash.o `test -f 'crypto/equihash.cpp' || echo '$(srcdir)/'`crypto/equihash.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libvds_consensus_a-equihash.Tpo crypto/$(DEPDIR)/libvds_consensus_a-equihash.Po
#	$(AM_V_CXX)source='crypto/equihash.cpp' object='crypto/libvds_consensus_a-equihash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libvds_consensus_a-equihash.o `test -f 'crypto/equihash.cpp' || echo '$(srcdir)/'`crypto/equihash.cpp

crypto/libvds_consensus_a-equihash.obj: crypto/equihash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libvds_consensus_a-equihash.obj -MD -MP -MF crypto/$(DEPDIR)/libvds_consensus_a-equihash.Tpo -c -o crypto/libvds_consensus_a-equihash.obj `if test -f 'crypto/equihash.cpp'; then $(CYGPATH_W) 'crypto/equihash.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/equihash.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libvds_consensus_a-equihash.Tpo crypto/$(DEPDIR)/libvds_consensus_a-equihash.Po
#	$(AM_V_CXX)source='crypto/equihash.cpp' object='crypto/libvds_consensus_a-equihash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libvds_consensus_a-equihash.obj `if test -f 'crypto/equihash.cpp'; then $(CYGPATH_W) 'crypto/equihash.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/equihash.cpp'; fi`

crypto/libvds_consensus_a-hmac_sha512.o: crypto/hmac_sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libvds_consensus_a-hmac_sha512.o -MD -MP -MF crypto/$(DEPDIR)/libvds_consensus_a-hmac_sha512.Tpo -c -o crypto/libvds_consensus_a-hmac_sha512.o `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libvds_consensus_a-hmac_sha512.Tpo crypto/$(DEPDIR)/libvds_consensus_a-hmac_sha512.Po
#	$(AM_V_CXX)source='crypto/hmac_sha512.cpp' object='crypto/libvds_consensus_a-hmac_sha512.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libvds_consensus_a-hmac_sha512.o `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp

crypto/libvds_consensus_a-hmac_sha512.obj: crypto/hmac_sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libvds_consensus_a-hmac_sha512.obj -MD -MP -MF crypto/$(DEPDIR)/libvds_consensus_a-hmac_sha512.Tpo -c -o crypto/libvds_consensus_a-hmac_sha512.obj `if test -f 'crypto/hmac_sha512.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha512.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libvds_consensus_a-hmac_sha512.Tpo crypto/$(DEPDIR)/libvds_consensus_a-hmac_sha512.Po
#	$(AM_V_CXX)source='crypto/hmac_sha512.cpp' object='crypto/libvds_consensus_a-hmac_sha512.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libvds_consensus_a-hmac_sha512.obj `if test -f 'crypto/hmac_sha512.cpp'; then $(CYGPATH_W) 'crypto/hmac_sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/hmac_sha512.cpp'; fi`

crypto/libvds_consensus_a-ripemd160.o: crypto/ripemd160.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libvds_consensus_a-ripemd160.o -MD -MP -MF crypto/$(DEPDIR)/libvds_consensus_a-ripemd160.Tpo -c -o crypto/libvds_consensus_a-ripemd160.o `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libvds_consensus_a-ripemd160.Tpo crypto/$(DEPDIR)/libvds_consensus_a-ripemd160.Po
#	$(AM_V_CXX)source='crypto/ripemd160.cpp' object='crypto/libvds_consensus_a-ripemd160.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libvds_consensus_a-ripemd160.o `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp

crypto/libvds_consensus_a-ripemd160.obj: crypto/ripemd160.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libvds_consensus_a-ripemd160.obj -MD -MP -MF crypto/$(DEPDIR)/libvds_consensus_a-ripemd160.Tpo -c -o crypto/libvds_consensus_a-ripemd160.obj `if test -f 'crypto/ripemd160.cpp'; then $(CYGPATH_W) 'crypto/ripemd160.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/ripemd160.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libvds_consensus_a-ripemd160.Tpo crypto/$(DEPDIR)/libvds_consensus_a-ripemd160.Po
#	$(AM_V_CXX)source='crypto/ripemd160.cpp' object='crypto/libvds_consensus_a-ripemd160.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libvds_consensus_a-ripemd160.obj `if test -f 'crypto/ripemd160.cpp'; then $(CYGPATH_W) 'crypto/ripemd160.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/ripemd160.cpp'; fi`

crypto/libvds_consensus_a-sha1.o: crypto/sha1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libvds_consensus_a-sha1.o -MD -MP -MF crypto/$(DEPDIR)/libvds_consensus_a-sha1.Tpo -c -o crypto/libvds_consensus_a-sha1.o `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libvds_consensus_a-sha1.Tpo crypto/$(DEPDIR)/libvds_consensus_a-sha1.Po
#	$(AM_V_CXX)source='crypto/sha1.cpp' object='crypto/libvds_consensus_a-sha1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libvds_consensus_a-sha1.o `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp

crypto/libvds_consensus_a-sha1.obj: crypto/sha1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libvds_consensus_a-sha1.obj -MD -MP -MF crypto/$(DEPDIR)/libvds_consensus_a-sha1.Tpo -c -o crypto/libvds_consensus_a-sha1.obj `if test -f 'crypto/sha1.cpp'; then $(CYGPATH_W) 'crypto/sha1.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha1.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libvds_consensus_a-sha1.Tpo crypto/$(DEPDIR)/libvds_consensus_a-sha1.Po
#	$(AM_V_CXX)source='crypto/sha1.cpp' object='crypto/libvds_consensus_a-sha1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libvds_consensus_a-sha1.obj `if test -f 'crypto/sha1.cpp'; then $(CYGPATH_W) 'crypto/sha1.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha1.cpp'; fi`

crypto/libvds_consensus_a-sha256.o: crypto/sha256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libvds_consensus_a-sha256.o -MD -MP -MF crypto/$(DEPDIR)/libvds_consensus_a-sha256.Tpo -c -o crypto/libvds_consensus_a-sha256.o `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libvds_consensus_a-sha256.Tpo crypto/$(DEPDIR)/libvds_consensus_a-sha256.Po
#	$(AM_V_CXX)source='crypto/sha256.cpp' object='crypto/libvds_consensus_a-sha256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libvds_consensus_a-sha256.o `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp

crypto/libvds_consensus_a-sha256.obj: crypto/sha256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libvds_consensus_a-sha256.obj -MD -MP -MF crypto/$(DEPDIR)/libvds_consensus_a-sha256.Tpo -c -o crypto/libvds_consensus_a-sha256.obj `if test -f 'crypto/sha256.cpp'; then $(CYGPATH_W) 'crypto/sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libvds_consensus_a-sha256.Tpo crypto/$(DEPDIR)/libvds_consensus_a-sha256.Po
#	$(AM_V_CXX)source='crypto/sha256.cpp' object='crypto/libvds_consensus_a-sha256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libvds_consensus_a-sha256.obj `if test -f 'crypto/sha256.cpp'; then $(CYGPATH_W) 'crypto/sha256.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha256.cpp'; fi`

crypto/libvds_consensus_a-sha512.o: crypto/sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libvds_consensus_a-sha512.o -MD -MP -MF crypto/$(DEPDIR)/libvds_consensus_a-sha512.Tpo -c -o crypto/libvds_consensus_a-sha512.o `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libvds_consensus_a-sha512.Tpo crypto/$(DEPDIR)/libvds_consensus_a-sha512.Po
#	$(AM_V_CXX)source='crypto/sha512.cpp' object='crypto/libvds_consensus_a-sha512.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libvds_consensus_a-sha512.o `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp

crypto/libvds_consensus_a-sha512.obj: crypto/sha512.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT crypto/libvds_consensus_a-sha512.obj -MD -MP -MF crypto/$(DEPDIR)/libvds_consensus_a-sha512.Tpo -c -o crypto/libvds_consensus_a-sha512.obj `if test -f 'crypto/sha512.cpp'; then $(CYGPATH_W) 'crypto/sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha512.cpp'; fi`
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libvds_consensus_a-sha512.Tpo crypto/$(DEPDIR)/libvds_consensus_a-sha512.Po
#	$(AM_V_CXX)source='crypto/sha512.cpp' object='crypto/libvds_consensus_a-sha512.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libvds_consensus_a-sha512.obj `if test -f 'crypto/sha512.cpp'; then $(CYGPATH_W) 'crypto/sha512.cpp'; else $(CYGPATH_W) '$(srcdir)/crypto/sha512.cpp'; fi`

libvds_consensus_a-eccryptoverify.o: eccryptoverify.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_consensus_a-eccryptoverify.o -MD -MP -MF $(DEPDIR)/libvds_consensus_a-eccryptoverify.Tpo -c -o libvds_consensus_a-eccryptoverify.o `test -f 'eccryptoverify.cpp' || echo '$(srcdir)/'`eccryptoverify.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_consensus_a-eccryptoverify.Tpo $(DEPDIR)/libvds_consensus_a-eccryptoverify.Po
#	$(AM_V_CXX)source='eccryptoverify.cpp' object='libvds_consensus_a-eccryptoverify.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_consensus_a-eccryptoverify.o `test -f 'eccryptoverify.cpp' || echo '$(srcdir)/'`eccryptoverify.cpp

libvds_consensus_a-eccryptoverify.obj: eccryptoverify.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_consensus_a-eccryptoverify.obj -MD -MP -MF $(DEPDIR)/libvds_consensus_a-eccryptoverify.Tpo -c -o libvds_consensus_a-eccryptoverify.obj `if test -f 'eccryptoverify.cpp'; then $(CYGPATH_W) 'eccryptoverify.cpp'; else $(CYGPATH_W) '$(srcdir)/eccryptoverify.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_consensus_a-eccryptoverify.Tpo $(DEPDIR)/libvds_consensus_a-eccryptoverify.Po
#	$(AM_V_CXX)source='eccryptoverify.cpp' object='libvds_consensus_a-eccryptoverify.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_consensus_a-eccryptoverify.obj `if test -f 'eccryptoverify.cpp'; then $(CYGPATH_W) 'eccryptoverify.cpp'; else $(CYGPATH_W) '$(srcdir)/eccryptoverify.cpp'; fi`

libvds_consensus_a-ecwrapper.o: ecwrapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_consensus_a-ecwrapper.o -MD -MP -MF $(DEPDIR)/libvds_consensus_a-ecwrapper.Tpo -c -o libvds_consensus_a-ecwrapper.o `test -f 'ecwrapper.cpp' || echo '$(srcdir)/'`ecwrapper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_consensus_a-ecwrapper.Tpo $(DEPDIR)/libvds_consensus_a-ecwrapper.Po
#	$(AM_V_CXX)source='ecwrapper.cpp' object='libvds_consensus_a-ecwrapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_consensus_a-ecwrapper.o `test -f 'ecwrapper.cpp' || echo '$(srcdir)/'`ecwrapper.cpp

libvds_consensus_a-ecwrapper.obj: ecwrapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_consensus_a-ecwrapper.obj -MD -MP -MF $(DEPDIR)/libvds_consensus_a-ecwrapper.Tpo -c -o libvds_consensus_a-ecwrapper.obj `if test -f 'ecwrapper.cpp'; then $(CYGPATH_W) 'ecwrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/ecwrapper.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_consensus_a-ecwrapper.Tpo $(DEPDIR)/libvds_consensus_a-ecwrapper.Po
#	$(AM_V_CXX)source='ecwrapper.cpp' object='libvds_consensus_a-ecwrapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_consensus_a-ecwrapper.obj `if test -f 'ecwrapper.cpp'; then $(CYGPATH_W) 'ecwrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/ecwrapper.cpp'; fi`

libvds_consensus_a-hash.o: hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_consensus_a-hash.o -MD -MP -MF $(DEPDIR)/libvds_consensus_a-hash.Tpo -c -o libvds_consensus_a-hash.o `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_consensus_a-hash.Tpo $(DEPDIR)/libvds_consensus_a-hash.Po
#	$(AM_V_CXX)source='hash.cpp' object='libvds_consensus_a-hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_consensus_a-hash.o `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp

libvds_consensus_a-hash.obj: hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_consensus_a-hash.obj -MD -MP -MF $(DEPDIR)/libvds_consensus_a-hash.Tpo -c -o libvds_consensus_a-hash.obj `if test -f 'hash.cpp'; then $(CYGPATH_W) 'hash.cpp'; else $(CYGPATH_W) '$(srcdir)/hash.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_consensus_a-hash.Tpo $(DEPDIR)/libvds_consensus_a-hash.Po
#	$(AM_V_CXX)source='hash.cpp' object='libvds_consensus_a-hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_consensus_a-hash.obj `if test -f 'hash.cpp'; then $(CYGPATH_W) 'hash.cpp'; else $(CYGPATH_W) '$(srcdir)/hash.cpp'; fi`

primitives/libvds_consensus_a-transaction.o: primitives/transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libvds_consensus_a-transaction.o -MD -MP -MF primitives/$(DEPDIR)/libvds_consensus_a-transaction.Tpo -c -o primitives/libvds_consensus_a-transaction.o `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libvds_consensus_a-transaction.Tpo primitives/$(DEPDIR)/libvds_consensus_a-transaction.Po
#	$(AM_V_CXX)source='primitives/transaction.cpp' object='primitives/libvds_consensus_a-transaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libvds_consensus_a-transaction.o `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp

primitives/libvds_consensus_a-transaction.obj: primitives/transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT primitives/libvds_consensus_a-transaction.obj -MD -MP -MF primitives/$(DEPDIR)/libvds_consensus_a-transaction.Tpo -c -o primitives/libvds_consensus_a-transaction.obj `if test -f 'primitives/transaction.cpp'; then $(CYGPATH_W) 'primitives/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/transaction.cpp'; fi`
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libvds_consensus_a-transaction.Tpo primitives/$(DEPDIR)/libvds_consensus_a-transaction.Po
#	$(AM_V_CXX)source='primitives/transaction.cpp' object='primitives/libvds_consensus_a-transaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libvds_consensus_a-transaction.obj `if test -f 'primitives/transaction.cpp'; then $(CYGPATH_W) 'primitives/transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/primitives/transaction.cpp'; fi`

libvds_consensus_a-pubkey.o: pubkey.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_consensus_a-pubkey.o -MD -MP -MF $(DEPDIR)/libvds_consensus_a-pubkey.Tpo -c -o libvds_consensus_a-pubkey.o `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_consensus_a-pubkey.Tpo $(DEPDIR)/libvds_consensus_a-pubkey.Po
#	$(AM_V_CXX)source='pubkey.cpp' object='libvds_consensus_a-pubkey.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_consensus_a-pubkey.o `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp

libvds_consensus_a-pubkey.obj: pubkey.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_consensus_a-pubkey.obj -MD -MP -MF $(DEPDIR)/libvds_consensus_a-pubkey.Tpo -c -o libvds_consensus_a-pubkey.obj `if test -f 'pubkey.cpp'; then $(CYGPATH_W) 'pubkey.cpp'; else $(CYGPATH_W) '$(srcdir)/pubkey.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_consensus_a-pubkey.Tpo $(DEPDIR)/libvds_consensus_a-pubkey.Po
#	$(AM_V_CXX)source='pubkey.cpp' object='libvds_consensus_a-pubkey.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_consensus_a-pubkey.obj `if test -f 'pubkey.cpp'; then $(CYGPATH_W) 'pubkey.cpp'; else $(CYGPATH_W) '$(srcdir)/pubkey.cpp'; fi`

script/libvds_consensus_a-vdsconsensus.o: script/vdsconsensus.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libvds_consensus_a-vdsconsensus.o -MD -MP -MF script/$(DEPDIR)/libvds_consensus_a-vdsconsensus.Tpo -c -o script/libvds_consensus_a-vdsconsensus.o `test -f 'script/vdsconsensus.cpp' || echo '$(srcdir)/'`script/vdsconsensus.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libvds_consensus_a-vdsconsensus.Tpo script/$(DEPDIR)/libvds_consensus_a-vdsconsensus.Po
#	$(AM_V_CXX)source='script/vdsconsensus.cpp' object='script/libvds_consensus_a-vdsconsensus.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libvds_consensus_a-vdsconsensus.o `test -f 'script/vdsconsensus.cpp' || echo '$(srcdir)/'`script/vdsconsensus.cpp

script/libvds_consensus_a-vdsconsensus.obj: script/vdsconsensus.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libvds_consensus_a-vdsconsensus.obj -MD -MP -MF script/$(DEPDIR)/libvds_consensus_a-vdsconsensus.Tpo -c -o script/libvds_consensus_a-vdsconsensus.obj `if test -f 'script/vdsconsensus.cpp'; then $(CYGPATH_W) 'script/vdsconsensus.cpp'; else $(CYGPATH_W) '$(srcdir)/script/vdsconsensus.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libvds_consensus_a-vdsconsensus.Tpo script/$(DEPDIR)/libvds_consensus_a-vdsconsensus.Po
#	$(AM_V_CXX)source='script/vdsconsensus.cpp' object='script/libvds_consensus_a-vdsconsensus.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libvds_consensus_a-vdsconsensus.obj `if test -f 'script/vdsconsensus.cpp'; then $(CYGPATH_W) 'script/vdsconsensus.cpp'; else $(CYGPATH_W) '$(srcdir)/script/vdsconsensus.cpp'; fi`

script/libvds_consensus_a-interpreter.o: script/interpreter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libvds_consensus_a-interpreter.o -MD -MP -MF script/$(DEPDIR)/libvds_consensus_a-interpreter.Tpo -c -o script/libvds_consensus_a-interpreter.o `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libvds_consensus_a-interpreter.Tpo script/$(DEPDIR)/libvds_consensus_a-interpreter.Po
#	$(AM_V_CXX)source='script/interpreter.cpp' object='script/libvds_consensus_a-interpreter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libvds_consensus_a-interpreter.o `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp

script/libvds_consensus_a-interpreter.obj: script/interpreter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libvds_consensus_a-interpreter.obj -MD -MP -MF script/$(DEPDIR)/libvds_consensus_a-interpreter.Tpo -c -o script/libvds_consensus_a-interpreter.obj `if test -f 'script/interpreter.cpp'; then $(CYGPATH_W) 'script/interpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/script/interpreter.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libvds_consensus_a-interpreter.Tpo script/$(DEPDIR)/libvds_consensus_a-interpreter.Po
#	$(AM_V_CXX)source='script/interpreter.cpp' object='script/libvds_consensus_a-interpreter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libvds_consensus_a-interpreter.obj `if test -f 'script/interpreter.cpp'; then $(CYGPATH_W) 'script/interpreter.cpp'; else $(CYGPATH_W) '$(srcdir)/script/interpreter.cpp'; fi`

script/libvds_consensus_a-script.o: script/script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libvds_consensus_a-script.o -MD -MP -MF script/$(DEPDIR)/libvds_consensus_a-script.Tpo -c -o script/libvds_consensus_a-script.o `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libvds_consensus_a-script.Tpo script/$(DEPDIR)/libvds_consensus_a-script.Po
#	$(AM_V_CXX)source='script/script.cpp' object='script/libvds_consensus_a-script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libvds_consensus_a-script.o `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp

script/libvds_consensus_a-script.obj: script/script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT script/libvds_consensus_a-script.obj -MD -MP -MF script/$(DEPDIR)/libvds_consensus_a-script.Tpo -c -o script/libvds_consensus_a-script.obj `if test -f 'script/script.cpp'; then $(CYGPATH_W) 'script/script.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libvds_consensus_a-script.Tpo script/$(DEPDIR)/libvds_consensus_a-script.Po
#	$(AM_V_CXX)source='script/script.cpp' object='script/libvds_consensus_a-script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o script/libvds_consensus_a-script.obj `if test -f 'script/script.cpp'; then $(CYGPATH_W) 'script/script.cpp'; else $(CYGPATH_W) '$(srcdir)/script/script.cpp'; fi`

libvds_consensus_a-uint256.o: uint256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_consensus_a-uint256.o -MD -MP -MF $(DEPDIR)/libvds_consensus_a-uint256.Tpo -c -o libvds_consensus_a-uint256.o `test -f 'uint256.cpp' || echo '$(srcdir)/'`uint256.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_consensus_a-uint256.Tpo $(DEPDIR)/libvds_consensus_a-uint256.Po
#	$(AM_V_CXX)source='uint256.cpp' object='libvds_consensus_a-uint256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_consensus_a-uint256.o `test -f 'uint256.cpp' || echo '$(srcdir)/'`uint256.cpp

libvds_consensus_a-uint256.obj: uint256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_consensus_a-uint256.obj -MD -MP -MF $(DEPDIR)/libvds_consensus_a-uint256.Tpo -c -o libvds_consensus_a-uint256.obj `if test -f 'uint256.cpp'; then $(CYGPATH_W) 'uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/uint256.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_consensus_a-uint256.Tpo $(DEPDIR)/libvds_consensus_a-uint256.Po
#	$(AM_V_CXX)source='uint256.cpp' object='libvds_consensus_a-uint256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_consensus_a-uint256.obj `if test -f 'uint256.cpp'; then $(CYGPATH_W) 'uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/uint256.cpp'; fi`

libvds_consensus_a-utilstrencodings.o: utilstrencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_consensus_a-utilstrencodings.o -MD -MP -MF $(DEPDIR)/libvds_consensus_a-utilstrencodings.Tpo -c -o libvds_consensus_a-utilstrencodings.o `test -f 'utilstrencodings.cpp' || echo '$(srcdir)/'`utilstrencodings.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_consensus_a-utilstrencodings.Tpo $(DEPDIR)/libvds_consensus_a-utilstrencodings.Po
#	$(AM_V_CXX)source='utilstrencodings.cpp' object='libvds_consensus_a-utilstrencodings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_consensus_a-utilstrencodings.o `test -f 'utilstrencodings.cpp' || echo '$(srcdir)/'`utilstrencodings.cpp

libvds_consensus_a-utilstrencodings.obj: utilstrencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -MT libvds_consensus_a-utilstrencodings.obj -MD -MP -MF $(DEPDIR)/libvds_consensus_a-utilstrencodings.Tpo -c -o libvds_consensus_a-utilstrencodings.obj `if test -f 'utilstrencodings.cpp'; then $(CYGPATH_W) 'utilstrencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/utilstrencodings.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_consensus_a-utilstrencodings.Tpo $(DEPDIR)/libvds_consensus_a-utilstrencodings.Po
#	$(AM_V_CXX)source='utilstrencodings.cpp' object='libvds_consensus_a-utilstrencodings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_consensus_a_CPPFLAGS) $(CPPFLAGS) $(libvds_consensus_a_CXXFLAGS) $(CXXFLAGS) -c -o libvds_consensus_a-utilstrencodings.obj `if test -f 'utilstrencodings.cpp'; then $(CYGPATH_W) 'utilstrencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/utilstrencodings.cpp'; fi`

amqp/libvds_proton_a-amqpabstractnotifier.o: amqp/amqpabstractnotifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_proton_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT amqp/libvds_proton_a-amqpabstractnotifier.o -MD -MP -MF amqp/$(DEPDIR)/libvds_proton_a-amqpabstractnotifier.Tpo -c -o amqp/libvds_proton_a-amqpabstractnotifier.o `test -f 'amqp/amqpabstractnotifier.cpp' || echo '$(srcdir)/'`amqp/amqpabstractnotifier.cpp
	$(AM_V_at)$(am__mv) amqp/$(DEPDIR)/libvds_proton_a-amqpabstractnotifier.Tpo amqp/$(DEPDIR)/libvds_proton_a-amqpabstractnotifier.Po
#	$(AM_V_CXX)source='amqp/amqpabstractnotifier.cpp' object='amqp/libvds_proton_a-amqpabstractnotifier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_proton_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o amqp/libvds_proton_a-amqpabstractnotifier.o `test -f 'amqp/amqpabstractnotifier.cpp' || echo '$(srcdir)/'`amqp/amqpabstractnotifier.cpp

amqp/libvds_proton_a-amqpabstractnotifier.obj: amqp/amqpabstractnotifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_proton_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT amqp/libvds_proton_a-amqpabstractnotifier.obj -MD -MP -MF amqp/$(DEPDIR)/libvds_proton_a-amqpabstractnotifier.Tpo -c -o amqp/libvds_proton_a-amqpabstractnotifier.obj `if test -f 'amqp/amqpabstractnotifier.cpp'; then $(CYGPATH_W) 'amqp/amqpabstractnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/amqp/amqpabstractnotifier.cpp'; fi`
	$(AM_V_at)$(am__mv) amqp/$(DEPDIR)/libvds_proton_a-amqpabstractnotifier.Tpo amqp/$(DEPDIR)/libvds_proton_a-amqpabstractnotifier.Po
#	$(AM_V_CXX)source='amqp/amqpabstractnotifier.cpp' object='amqp/libvds_proton_a-amqpabstractnotifier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_proton_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o amqp/libvds_proton_a-amqpabstractnotifier.obj `if test -f 'amqp/amqpabstractnotifier.cpp'; then $(CYGPATH_W) 'amqp/amqpabstractnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/amqp/amqpabstractnotifier.cpp'; fi`

amqp/libvds_proton_a-amqpnotificationinterface.o: amqp/amqpnotificationinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_proton_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT amqp/libvds_proton_a-amqpnotificationinterface.o -MD -MP -MF amqp/$(DEPDIR)/libvds_proton_a-amqpnotificationinterface.Tpo -c -o amqp/libvds_proton_a-amqpnotificationinterface.o `test -f 'amqp/amqpnotificationinterface.cpp' || echo '$(srcdir)/'`amqp/amqpnotificationinterface.cpp
	$(AM_V_at)$(am__mv) amqp/$(DEPDIR)/libvds_proton_a-amqpnotificationinterface.Tpo amqp/$(DEPDIR)/libvds_proton_a-amqpnotificationinterface.Po
#	$(AM_V_CXX)source='amqp/amqpnotificationinterface.cpp' object='amqp/libvds_proton_a-amqpnotificationinterface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_proton_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o amqp/libvds_proton_a-amqpnotificationinterface.o `test -f 'amqp/amqpnotificationinterface.cpp' || echo '$(srcdir)/'`amqp/amqpnotificationinterface.cpp

amqp/libvds_proton_a-amqpnotificationinterface.obj: amqp/amqpnotificationinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_proton_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT amqp/libvds_proton_a-amqpnotificationinterface.obj -MD -MP -MF amqp/$(DEPDIR)/libvds_proton_a-amqpnotificationinterface.Tpo -c -o amqp/libvds_proton_a-amqpnotificationinterface.obj `if test -f 'amqp/amqpnotificationinterface.cpp'; then $(CYGPATH_W) 'amqp/amqpnotificationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/amqp/amqpnotificationinterface.cpp'; fi`
	$(AM_V_at)$(am__mv) amqp/$(DEPDIR)/libvds_proton_a-amqpnotificationinterface.Tpo amqp/$(DEPDIR)/libvds_proton_a-amqpnotificationinterface.Po
#	$(AM_V_CXX)source='amqp/amqpnotificationinterface.cpp' object='amqp/libvds_proton_a-amqpnotificationinterface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_proton_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o amqp/libvds_proton_a-amqpnotificationinterface.obj `if test -f 'amqp/amqpnotificationinterface.cpp'; then $(CYGPATH_W) 'amqp/amqpnotificationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/amqp/amqpnotificationinterface.cpp'; fi`

amqp/libvds_proton_a-amqppublishnotifier.o: amqp/amqppublishnotifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_proton_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT amqp/libvds_proton_a-amqppublishnotifier.o -MD -MP -MF amqp/$(DEPDIR)/libvds_proton_a-amqppublishnotifier.Tpo -c -o amqp/libvds_proton_a-amqppublishnotifier.o `test -f 'amqp/amqppublishnotifier.cpp' || echo '$(srcdir)/'`amqp/amqppublishnotifier.cpp
	$(AM_V_at)$(am__mv) amqp/$(DEPDIR)/libvds_proton_a-amqppublishnotifier.Tpo amqp/$(DEPDIR)/libvds_proton_a-amqppublishnotifier.Po
#	$(AM_V_CXX)source='amqp/amqppublishnotifier.cpp' object='amqp/libvds_proton_a-amqppublishnotifier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_proton_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o amqp/libvds_proton_a-amqppublishnotifier.o `test -f 'amqp/amqppublishnotifier.cpp' || echo '$(srcdir)/'`amqp/amqppublishnotifier.cpp

amqp/libvds_proton_a-amqppublishnotifier.obj: amqp/amqppublishnotifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_proton_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT amqp/libvds_proton_a-amqppublishnotifier.obj -MD -MP -MF amqp/$(DEPDIR)/libvds_proton_a-amqppublishnotifier.Tpo -c -o amqp/libvds_proton_a-amqppublishnotifier.obj `if test -f 'amqp/amqppublishnotifier.cpp'; then $(CYGPATH_W) 'amqp/amqppublishnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/amqp/amqppublishnotifier.cpp'; fi`
	$(AM_V_at)$(am__mv) amqp/$(DEPDIR)/libvds_proton_a-amqppublishnotifier.Tpo amqp/$(DEPDIR)/libvds_proton_a-amqppublishnotifier.Po
#	$(AM_V_CXX)source='amqp/amqppublishnotifier.cpp' object='amqp/libvds_proton_a-amqppublishnotifier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_proton_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o amqp/libvds_proton_a-amqppublishnotifier.obj `if test -f 'amqp/amqppublishnotifier.cpp'; then $(CYGPATH_W) 'amqp/amqppublishnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/amqp/amqppublishnotifier.cpp'; fi`

libvds_server_a-sendalert.o: sendalert.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-sendalert.o -MD -MP -MF $(DEPDIR)/libvds_server_a-sendalert.Tpo -c -o libvds_server_a-sendalert.o `test -f 'sendalert.cpp' || echo '$(srcdir)/'`sendalert.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-sendalert.Tpo $(DEPDIR)/libvds_server_a-sendalert.Po
#	$(AM_V_CXX)source='sendalert.cpp' object='libvds_server_a-sendalert.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-sendalert.o `test -f 'sendalert.cpp' || echo '$(srcdir)/'`sendalert.cpp

libvds_server_a-sendalert.obj: sendalert.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-sendalert.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-sendalert.Tpo -c -o libvds_server_a-sendalert.obj `if test -f 'sendalert.cpp'; then $(CYGPATH_W) 'sendalert.cpp'; else $(CYGPATH_W) '$(srcdir)/sendalert.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-sendalert.Tpo $(DEPDIR)/libvds_server_a-sendalert.Po
#	$(AM_V_CXX)source='sendalert.cpp' object='libvds_server_a-sendalert.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-sendalert.obj `if test -f 'sendalert.cpp'; then $(CYGPATH_W) 'sendalert.cpp'; else $(CYGPATH_W) '$(srcdir)/sendalert.cpp'; fi`

libvds_server_a-addrman.o: addrman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-addrman.o -MD -MP -MF $(DEPDIR)/libvds_server_a-addrman.Tpo -c -o libvds_server_a-addrman.o `test -f 'addrman.cpp' || echo '$(srcdir)/'`addrman.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-addrman.Tpo $(DEPDIR)/libvds_server_a-addrman.Po
#	$(AM_V_CXX)source='addrman.cpp' object='libvds_server_a-addrman.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-addrman.o `test -f 'addrman.cpp' || echo '$(srcdir)/'`addrman.cpp

libvds_server_a-addrman.obj: addrman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-addrman.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-addrman.Tpo -c -o libvds_server_a-addrman.obj `if test -f 'addrman.cpp'; then $(CYGPATH_W) 'addrman.cpp'; else $(CYGPATH_W) '$(srcdir)/addrman.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-addrman.Tpo $(DEPDIR)/libvds_server_a-addrman.Po
#	$(AM_V_CXX)source='addrman.cpp' object='libvds_server_a-addrman.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-addrman.obj `if test -f 'addrman.cpp'; then $(CYGPATH_W) 'addrman.cpp'; else $(CYGPATH_W) '$(srcdir)/addrman.cpp'; fi`

libvds_server_a-addrdb.o: addrdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-addrdb.o -MD -MP -MF $(DEPDIR)/libvds_server_a-addrdb.Tpo -c -o libvds_server_a-addrdb.o `test -f 'addrdb.cpp' || echo '$(srcdir)/'`addrdb.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-addrdb.Tpo $(DEPDIR)/libvds_server_a-addrdb.Po
#	$(AM_V_CXX)source='addrdb.cpp' object='libvds_server_a-addrdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-addrdb.o `test -f 'addrdb.cpp' || echo '$(srcdir)/'`addrdb.cpp

libvds_server_a-addrdb.obj: addrdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-addrdb.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-addrdb.Tpo -c -o libvds_server_a-addrdb.obj `if test -f 'addrdb.cpp'; then $(CYGPATH_W) 'addrdb.cpp'; else $(CYGPATH_W) '$(srcdir)/addrdb.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-addrdb.Tpo $(DEPDIR)/libvds_server_a-addrdb.Po
#	$(AM_V_CXX)source='addrdb.cpp' object='libvds_server_a-addrdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-addrdb.obj `if test -f 'addrdb.cpp'; then $(CYGPATH_W) 'addrdb.cpp'; else $(CYGPATH_W) '$(srcdir)/addrdb.cpp'; fi`

libvds_server_a-alert.o: alert.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-alert.o -MD -MP -MF $(DEPDIR)/libvds_server_a-alert.Tpo -c -o libvds_server_a-alert.o `test -f 'alert.cpp' || echo '$(srcdir)/'`alert.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-alert.Tpo $(DEPDIR)/libvds_server_a-alert.Po
#	$(AM_V_CXX)source='alert.cpp' object='libvds_server_a-alert.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-alert.o `test -f 'alert.cpp' || echo '$(srcdir)/'`alert.cpp

libvds_server_a-alert.obj: alert.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-alert.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-alert.Tpo -c -o libvds_server_a-alert.obj `if test -f 'alert.cpp'; then $(CYGPATH_W) 'alert.cpp'; else $(CYGPATH_W) '$(srcdir)/alert.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-alert.Tpo $(DEPDIR)/libvds_server_a-alert.Po
#	$(AM_V_CXX)source='alert.cpp' object='libvds_server_a-alert.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-alert.obj `if test -f 'alert.cpp'; then $(CYGPATH_W) 'alert.cpp'; else $(CYGPATH_W) '$(srcdir)/alert.cpp'; fi`

libvds_server_a-asyncrpcoperation.o: asyncrpcoperation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-asyncrpcoperation.o -MD -MP -MF $(DEPDIR)/libvds_server_a-asyncrpcoperation.Tpo -c -o libvds_server_a-asyncrpcoperation.o `test -f 'asyncrpcoperation.cpp' || echo '$(srcdir)/'`asyncrpcoperation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-asyncrpcoperation.Tpo $(DEPDIR)/libvds_server_a-asyncrpcoperation.Po
#	$(AM_V_CXX)source='asyncrpcoperation.cpp' object='libvds_server_a-asyncrpcoperation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-asyncrpcoperation.o `test -f 'asyncrpcoperation.cpp' || echo '$(srcdir)/'`asyncrpcoperation.cpp

libvds_server_a-asyncrpcoperation.obj: asyncrpcoperation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-asyncrpcoperation.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-asyncrpcoperation.Tpo -c -o libvds_server_a-asyncrpcoperation.obj `if test -f 'asyncrpcoperation.cpp'; then $(CYGPATH_W) 'asyncrpcoperation.cpp'; else $(CYGPATH_W) '$(srcdir)/asyncrpcoperation.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-asyncrpcoperation.Tpo $(DEPDIR)/libvds_server_a-asyncrpcoperation.Po
#	$(AM_V_CXX)source='asyncrpcoperation.cpp' object='libvds_server_a-asyncrpcoperation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-asyncrpcoperation.obj `if test -f 'asyncrpcoperation.cpp'; then $(CYGPATH_W) 'asyncrpcoperation.cpp'; else $(CYGPATH_W) '$(srcdir)/asyncrpcoperation.cpp'; fi`

libvds_server_a-asyncrpcqueue.o: asyncrpcqueue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-asyncrpcqueue.o -MD -MP -MF $(DEPDIR)/libvds_server_a-asyncrpcqueue.Tpo -c -o libvds_server_a-asyncrpcqueue.o `test -f 'asyncrpcqueue.cpp' || echo '$(srcdir)/'`asyncrpcqueue.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-asyncrpcqueue.Tpo $(DEPDIR)/libvds_server_a-asyncrpcqueue.Po
#	$(AM_V_CXX)source='asyncrpcqueue.cpp' object='libvds_server_a-asyncrpcqueue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-asyncrpcqueue.o `test -f 'asyncrpcqueue.cpp' || echo '$(srcdir)/'`asyncrpcqueue.cpp

libvds_server_a-asyncrpcqueue.obj: asyncrpcqueue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-asyncrpcqueue.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-asyncrpcqueue.Tpo -c -o libvds_server_a-asyncrpcqueue.obj `if test -f 'asyncrpcqueue.cpp'; then $(CYGPATH_W) 'asyncrpcqueue.cpp'; else $(CYGPATH_W) '$(srcdir)/asyncrpcqueue.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-asyncrpcqueue.Tpo $(DEPDIR)/libvds_server_a-asyncrpcqueue.Po
#	$(AM_V_CXX)source='asyncrpcqueue.cpp' object='libvds_server_a-asyncrpcqueue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-asyncrpcqueue.obj `if test -f 'asyncrpcqueue.cpp'; then $(CYGPATH_W) 'asyncrpcqueue.cpp'; else $(CYGPATH_W) '$(srcdir)/asyncrpcqueue.cpp'; fi`

libvds_server_a-bloom.o: bloom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-bloom.o -MD -MP -MF $(DEPDIR)/libvds_server_a-bloom.Tpo -c -o libvds_server_a-bloom.o `test -f 'bloom.cpp' || echo '$(srcdir)/'`bloom.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-bloom.Tpo $(DEPDIR)/libvds_server_a-bloom.Po
#	$(AM_V_CXX)source='bloom.cpp' object='libvds_server_a-bloom.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-bloom.o `test -f 'bloom.cpp' || echo '$(srcdir)/'`bloom.cpp

libvds_server_a-bloom.obj: bloom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-bloom.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-bloom.Tpo -c -o libvds_server_a-bloom.obj `if test -f 'bloom.cpp'; then $(CYGPATH_W) 'bloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bloom.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-bloom.Tpo $(DEPDIR)/libvds_server_a-bloom.Po
#	$(AM_V_CXX)source='bloom.cpp' object='libvds_server_a-bloom.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-bloom.obj `if test -f 'bloom.cpp'; then $(CYGPATH_W) 'bloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bloom.cpp'; fi`

libvds_server_a-chain.o: chain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-chain.o -MD -MP -MF $(DEPDIR)/libvds_server_a-chain.Tpo -c -o libvds_server_a-chain.o `test -f 'chain.cpp' || echo '$(srcdir)/'`chain.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-chain.Tpo $(DEPDIR)/libvds_server_a-chain.Po
#	$(AM_V_CXX)source='chain.cpp' object='libvds_server_a-chain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-chain.o `test -f 'chain.cpp' || echo '$(srcdir)/'`chain.cpp

libvds_server_a-chain.obj: chain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-chain.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-chain.Tpo -c -o libvds_server_a-chain.obj `if test -f 'chain.cpp'; then $(CYGPATH_W) 'chain.cpp'; else $(CYGPATH_W) '$(srcdir)/chain.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-chain.Tpo $(DEPDIR)/libvds_server_a-chain.Po
#	$(AM_V_CXX)source='chain.cpp' object='libvds_server_a-chain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-chain.obj `if test -f 'chain.cpp'; then $(CYGPATH_W) 'chain.cpp'; else $(CYGPATH_W) '$(srcdir)/chain.cpp'; fi`

libvds_server_a-checkpoints.o: checkpoints.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-checkpoints.o -MD -MP -MF $(DEPDIR)/libvds_server_a-checkpoints.Tpo -c -o libvds_server_a-checkpoints.o `test -f 'checkpoints.cpp' || echo '$(srcdir)/'`checkpoints.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-checkpoints.Tpo $(DEPDIR)/libvds_server_a-checkpoints.Po
#	$(AM_V_CXX)source='checkpoints.cpp' object='libvds_server_a-checkpoints.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-checkpoints.o `test -f 'checkpoints.cpp' || echo '$(srcdir)/'`checkpoints.cpp

libvds_server_a-checkpoints.obj: checkpoints.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-checkpoints.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-checkpoints.Tpo -c -o libvds_server_a-checkpoints.obj `if test -f 'checkpoints.cpp'; then $(CYGPATH_W) 'checkpoints.cpp'; else $(CYGPATH_W) '$(srcdir)/checkpoints.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-checkpoints.Tpo $(DEPDIR)/libvds_server_a-checkpoints.Po
#	$(AM_V_CXX)source='checkpoints.cpp' object='libvds_server_a-checkpoints.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-checkpoints.obj `if test -f 'checkpoints.cpp'; then $(CYGPATH_W) 'checkpoints.cpp'; else $(CYGPATH_W) '$(srcdir)/checkpoints.cpp'; fi`

libvds_server_a-clue.o: clue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-clue.o -MD -MP -MF $(DEPDIR)/libvds_server_a-clue.Tpo -c -o libvds_server_a-clue.o `test -f 'clue.cpp' || echo '$(srcdir)/'`clue.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-clue.Tpo $(DEPDIR)/libvds_server_a-clue.Po
#	$(AM_V_CXX)source='clue.cpp' object='libvds_server_a-clue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-clue.o `test -f 'clue.cpp' || echo '$(srcdir)/'`clue.cpp

libvds_server_a-clue.obj: clue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-clue.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-clue.Tpo -c -o libvds_server_a-clue.obj `if test -f 'clue.cpp'; then $(CYGPATH_W) 'clue.cpp'; else $(CYGPATH_W) '$(srcdir)/clue.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-clue.Tpo $(DEPDIR)/libvds_server_a-clue.Po
#	$(AM_V_CXX)source='clue.cpp' object='libvds_server_a-clue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-clue.obj `if test -f 'clue.cpp'; then $(CYGPATH_W) 'clue.cpp'; else $(CYGPATH_W) '$(srcdir)/clue.cpp'; fi`

libvds_server_a-cluedb.o: cluedb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-cluedb.o -MD -MP -MF $(DEPDIR)/libvds_server_a-cluedb.Tpo -c -o libvds_server_a-cluedb.o `test -f 'cluedb.cpp' || echo '$(srcdir)/'`cluedb.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-cluedb.Tpo $(DEPDIR)/libvds_server_a-cluedb.Po
#	$(AM_V_CXX)source='cluedb.cpp' object='libvds_server_a-cluedb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-cluedb.o `test -f 'cluedb.cpp' || echo '$(srcdir)/'`cluedb.cpp

libvds_server_a-cluedb.obj: cluedb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-cluedb.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-cluedb.Tpo -c -o libvds_server_a-cluedb.obj `if test -f 'cluedb.cpp'; then $(CYGPATH_W) 'cluedb.cpp'; else $(CYGPATH_W) '$(srcdir)/cluedb.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-cluedb.Tpo $(DEPDIR)/libvds_server_a-cluedb.Po
#	$(AM_V_CXX)source='cluedb.cpp' object='libvds_server_a-cluedb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-cluedb.obj `if test -f 'cluedb.cpp'; then $(CYGPATH_W) 'cluedb.cpp'; else $(CYGPATH_W) '$(srcdir)/cluedb.cpp'; fi`

libvds_server_a-deprecation.o: deprecation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-deprecation.o -MD -MP -MF $(DEPDIR)/libvds_server_a-deprecation.Tpo -c -o libvds_server_a-deprecation.o `test -f 'deprecation.cpp' || echo '$(srcdir)/'`deprecation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-deprecation.Tpo $(DEPDIR)/libvds_server_a-deprecation.Po
#	$(AM_V_CXX)source='deprecation.cpp' object='libvds_server_a-deprecation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-deprecation.o `test -f 'deprecation.cpp' || echo '$(srcdir)/'`deprecation.cpp

libvds_server_a-deprecation.obj: deprecation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-deprecation.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-deprecation.Tpo -c -o libvds_server_a-deprecation.obj `if test -f 'deprecation.cpp'; then $(CYGPATH_W) 'deprecation.cpp'; else $(CYGPATH_W) '$(srcdir)/deprecation.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-deprecation.Tpo $(DEPDIR)/libvds_server_a-deprecation.Po
#	$(AM_V_CXX)source='deprecation.cpp' object='libvds_server_a-deprecation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-deprecation.obj `if test -f 'deprecation.cpp'; then $(CYGPATH_W) 'deprecation.cpp'; else $(CYGPATH_W) '$(srcdir)/deprecation.cpp'; fi`

libvds_server_a-httprpc.o: httprpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-httprpc.o -MD -MP -MF $(DEPDIR)/libvds_server_a-httprpc.Tpo -c -o libvds_server_a-httprpc.o `test -f 'httprpc.cpp' || echo '$(srcdir)/'`httprpc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-httprpc.Tpo $(DEPDIR)/libvds_server_a-httprpc.Po
#	$(AM_V_CXX)source='httprpc.cpp' object='libvds_server_a-httprpc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-httprpc.o `test -f 'httprpc.cpp' || echo '$(srcdir)/'`httprpc.cpp

libvds_server_a-httprpc.obj: httprpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-httprpc.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-httprpc.Tpo -c -o libvds_server_a-httprpc.obj `if test -f 'httprpc.cpp'; then $(CYGPATH_W) 'httprpc.cpp'; else $(CYGPATH_W) '$(srcdir)/httprpc.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-httprpc.Tpo $(DEPDIR)/libvds_server_a-httprpc.Po
#	$(AM_V_CXX)source='httprpc.cpp' object='libvds_server_a-httprpc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-httprpc.obj `if test -f 'httprpc.cpp'; then $(CYGPATH_W) 'httprpc.cpp'; else $(CYGPATH_W) '$(srcdir)/httprpc.cpp'; fi`

libvds_server_a-httpserver.o: httpserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-httpserver.o -MD -MP -MF $(DEPDIR)/libvds_server_a-httpserver.Tpo -c -o libvds_server_a-httpserver.o `test -f 'httpserver.cpp' || echo '$(srcdir)/'`httpserver.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-httpserver.Tpo $(DEPDIR)/libvds_server_a-httpserver.Po
#	$(AM_V_CXX)source='httpserver.cpp' object='libvds_server_a-httpserver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-httpserver.o `test -f 'httpserver.cpp' || echo '$(srcdir)/'`httpserver.cpp

libvds_server_a-httpserver.obj: httpserver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-httpserver.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-httpserver.Tpo -c -o libvds_server_a-httpserver.obj `if test -f 'httpserver.cpp'; then $(CYGPATH_W) 'httpserver.cpp'; else $(CYGPATH_W) '$(srcdir)/httpserver.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-httpserver.Tpo $(DEPDIR)/libvds_server_a-httpserver.Po
#	$(AM_V_CXX)source='httpserver.cpp' object='libvds_server_a-httpserver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-httpserver.obj `if test -f 'httpserver.cpp'; then $(CYGPATH_W) 'httpserver.cpp'; else $(CYGPATH_W) '$(srcdir)/httpserver.cpp'; fi`

libvds_server_a-init.o: init.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-init.o -MD -MP -MF $(DEPDIR)/libvds_server_a-init.Tpo -c -o libvds_server_a-init.o `test -f 'init.cpp' || echo '$(srcdir)/'`init.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-init.Tpo $(DEPDIR)/libvds_server_a-init.Po
#	$(AM_V_CXX)source='init.cpp' object='libvds_server_a-init.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-init.o `test -f 'init.cpp' || echo '$(srcdir)/'`init.cpp

libvds_server_a-init.obj: init.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-init.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-init.Tpo -c -o libvds_server_a-init.obj `if test -f 'init.cpp'; then $(CYGPATH_W) 'init.cpp'; else $(CYGPATH_W) '$(srcdir)/init.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-init.Tpo $(DEPDIR)/libvds_server_a-init.Po
#	$(AM_V_CXX)source='init.cpp' object='libvds_server_a-init.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-init.obj `if test -f 'init.cpp'; then $(CYGPATH_W) 'init.cpp'; else $(CYGPATH_W) '$(srcdir)/init.cpp'; fi`

libvds_server_a-dsnotificationinterface.o: dsnotificationinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-dsnotificationinterface.o -MD -MP -MF $(DEPDIR)/libvds_server_a-dsnotificationinterface.Tpo -c -o libvds_server_a-dsnotificationinterface.o `test -f 'dsnotificationinterface.cpp' || echo '$(srcdir)/'`dsnotificationinterface.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-dsnotificationinterface.Tpo $(DEPDIR)/libvds_server_a-dsnotificationinterface.Po
#	$(AM_V_CXX)source='dsnotificationinterface.cpp' object='libvds_server_a-dsnotificationinterface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-dsnotificationinterface.o `test -f 'dsnotificationinterface.cpp' || echo '$(srcdir)/'`dsnotificationinterface.cpp

libvds_server_a-dsnotificationinterface.obj: dsnotificationinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-dsnotificationinterface.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-dsnotificationinterface.Tpo -c -o libvds_server_a-dsnotificationinterface.obj `if test -f 'dsnotificationinterface.cpp'; then $(CYGPATH_W) 'dsnotificationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/dsnotificationinterface.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-dsnotificationinterface.Tpo $(DEPDIR)/libvds_server_a-dsnotificationinterface.Po
#	$(AM_V_CXX)source='dsnotificationinterface.cpp' object='libvds_server_a-dsnotificationinterface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-dsnotificationinterface.obj `if test -f 'dsnotificationinterface.cpp'; then $(CYGPATH_W) 'dsnotificationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/dsnotificationinterface.cpp'; fi`

libvds_server_a-dbwrapper.o: dbwrapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-dbwrapper.o -MD -MP -MF $(DEPDIR)/libvds_server_a-dbwrapper.Tpo -c -o libvds_server_a-dbwrapper.o `test -f 'dbwrapper.cpp' || echo '$(srcdir)/'`dbwrapper.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-dbwrapper.Tpo $(DEPDIR)/libvds_server_a-dbwrapper.Po
#	$(AM_V_CXX)source='dbwrapper.cpp' object='libvds_server_a-dbwrapper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-dbwrapper.o `test -f 'dbwrapper.cpp' || echo '$(srcdir)/'`dbwrapper.cpp

libvds_server_a-dbwrapper.obj: dbwrapper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-dbwrapper.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-dbwrapper.Tpo -c -o libvds_server_a-dbwrapper.obj `if test -f 'dbwrapper.cpp'; then $(CYGPATH_W) 'dbwrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/dbwrapper.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-dbwrapper.Tpo $(DEPDIR)/libvds_server_a-dbwrapper.Po
#	$(AM_V_CXX)source='dbwrapper.cpp' object='libvds_server_a-dbwrapper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-dbwrapper.obj `if test -f 'dbwrapper.cpp'; then $(CYGPATH_W) 'dbwrapper.cpp'; else $(CYGPATH_W) '$(srcdir)/dbwrapper.cpp'; fi`

libvds_server_a-masternode.o: masternode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-masternode.o -MD -MP -MF $(DEPDIR)/libvds_server_a-masternode.Tpo -c -o libvds_server_a-masternode.o `test -f 'masternode.cpp' || echo '$(srcdir)/'`masternode.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-masternode.Tpo $(DEPDIR)/libvds_server_a-masternode.Po
#	$(AM_V_CXX)source='masternode.cpp' object='libvds_server_a-masternode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-masternode.o `test -f 'masternode.cpp' || echo '$(srcdir)/'`masternode.cpp

libvds_server_a-masternode.obj: masternode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-masternode.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-masternode.Tpo -c -o libvds_server_a-masternode.obj `if test -f 'masternode.cpp'; then $(CYGPATH_W) 'masternode.cpp'; else $(CYGPATH_W) '$(srcdir)/masternode.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-masternode.Tpo $(DEPDIR)/libvds_server_a-masternode.Po
#	$(AM_V_CXX)source='masternode.cpp' object='libvds_server_a-masternode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-masternode.obj `if test -f 'masternode.cpp'; then $(CYGPATH_W) 'masternode.cpp'; else $(CYGPATH_W) '$(srcdir)/masternode.cpp'; fi`

libvds_server_a-masternode-payments.o: masternode-payments.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-masternode-payments.o -MD -MP -MF $(DEPDIR)/libvds_server_a-masternode-payments.Tpo -c -o libvds_server_a-masternode-payments.o `test -f 'masternode-payments.cpp' || echo '$(srcdir)/'`masternode-payments.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-masternode-payments.Tpo $(DEPDIR)/libvds_server_a-masternode-payments.Po
#	$(AM_V_CXX)source='masternode-payments.cpp' object='libvds_server_a-masternode-payments.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-masternode-payments.o `test -f 'masternode-payments.cpp' || echo '$(srcdir)/'`masternode-payments.cpp

libvds_server_a-masternode-payments.obj: masternode-payments.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-masternode-payments.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-masternode-payments.Tpo -c -o libvds_server_a-masternode-payments.obj `if test -f 'masternode-payments.cpp'; then $(CYGPATH_W) 'masternode-payments.cpp'; else $(CYGPATH_W) '$(srcdir)/masternode-payments.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-masternode-payments.Tpo $(DEPDIR)/libvds_server_a-masternode-payments.Po
#	$(AM_V_CXX)source='masternode-payments.cpp' object='libvds_server_a-masternode-payments.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-masternode-payments.obj `if test -f 'masternode-payments.cpp'; then $(CYGPATH_W) 'masternode-payments.cpp'; else $(CYGPATH_W) '$(srcdir)/masternode-payments.cpp'; fi`

libvds_server_a-masternode-sync.o: masternode-sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-masternode-sync.o -MD -MP -MF $(DEPDIR)/libvds_server_a-masternode-sync.Tpo -c -o libvds_server_a-masternode-sync.o `test -f 'masternode-sync.cpp' || echo '$(srcdir)/'`masternode-sync.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-masternode-sync.Tpo $(DEPDIR)/libvds_server_a-masternode-sync.Po
#	$(AM_V_CXX)source='masternode-sync.cpp' object='libvds_server_a-masternode-sync.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-masternode-sync.o `test -f 'masternode-sync.cpp' || echo '$(srcdir)/'`masternode-sync.cpp

libvds_server_a-masternode-sync.obj: masternode-sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-masternode-sync.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-masternode-sync.Tpo -c -o libvds_server_a-masternode-sync.obj `if test -f 'masternode-sync.cpp'; then $(CYGPATH_W) 'masternode-sync.cpp'; else $(CYGPATH_W) '$(srcdir)/masternode-sync.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-masternode-sync.Tpo $(DEPDIR)/libvds_server_a-masternode-sync.Po
#	$(AM_V_CXX)source='masternode-sync.cpp' object='libvds_server_a-masternode-sync.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-masternode-sync.obj `if test -f 'masternode-sync.cpp'; then $(CYGPATH_W) 'masternode-sync.cpp'; else $(CYGPATH_W) '$(srcdir)/masternode-sync.cpp'; fi`

libvds_server_a-masternodeconfig.o: masternodeconfig.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-masternodeconfig.o -MD -MP -MF $(DEPDIR)/libvds_server_a-masternodeconfig.Tpo -c -o libvds_server_a-masternodeconfig.o `test -f 'masternodeconfig.cpp' || echo '$(srcdir)/'`masternodeconfig.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-masternodeconfig.Tpo $(DEPDIR)/libvds_server_a-masternodeconfig.Po
#	$(AM_V_CXX)source='masternodeconfig.cpp' object='libvds_server_a-masternodeconfig.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-masternodeconfig.o `test -f 'masternodeconfig.cpp' || echo '$(srcdir)/'`masternodeconfig.cpp

libvds_server_a-masternodeconfig.obj: masternodeconfig.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-masternodeconfig.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-masternodeconfig.Tpo -c -o libvds_server_a-masternodeconfig.obj `if test -f 'masternodeconfig.cpp'; then $(CYGPATH_W) 'masternodeconfig.cpp'; else $(CYGPATH_W) '$(srcdir)/masternodeconfig.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-masternodeconfig.Tpo $(DEPDIR)/libvds_server_a-masternodeconfig.Po
#	$(AM_V_CXX)source='masternodeconfig.cpp' object='libvds_server_a-masternodeconfig.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-masternodeconfig.obj `if test -f 'masternodeconfig.cpp'; then $(CYGPATH_W) 'masternodeconfig.cpp'; else $(CYGPATH_W) '$(srcdir)/masternodeconfig.cpp'; fi`

libvds_server_a-masternodeman.o: masternodeman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-masternodeman.o -MD -MP -MF $(DEPDIR)/libvds_server_a-masternodeman.Tpo -c -o libvds_server_a-masternodeman.o `test -f 'masternodeman.cpp' || echo '$(srcdir)/'`masternodeman.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-masternodeman.Tpo $(DEPDIR)/libvds_server_a-masternodeman.Po
#	$(AM_V_CXX)source='masternodeman.cpp' object='libvds_server_a-masternodeman.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-masternodeman.o `test -f 'masternodeman.cpp' || echo '$(srcdir)/'`masternodeman.cpp

libvds_server_a-masternodeman.obj: masternodeman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-masternodeman.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-masternodeman.Tpo -c -o libvds_server_a-masternodeman.obj `if test -f 'masternodeman.cpp'; then $(CYGPATH_W) 'masternodeman.cpp'; else $(CYGPATH_W) '$(srcdir)/masternodeman.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-masternodeman.Tpo $(DEPDIR)/libvds_server_a-masternodeman.Po
#	$(AM_V_CXX)source='masternodeman.cpp' object='libvds_server_a-masternodeman.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-masternodeman.obj `if test -f 'masternodeman.cpp'; then $(CYGPATH_W) 'masternodeman.cpp'; else $(CYGPATH_W) '$(srcdir)/masternodeman.cpp'; fi`

libvds_server_a-masternodestatistic.o: masternodestatistic.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-masternodestatistic.o -MD -MP -MF $(DEPDIR)/libvds_server_a-masternodestatistic.Tpo -c -o libvds_server_a-masternodestatistic.o `test -f 'masternodestatistic.cpp' || echo '$(srcdir)/'`masternodestatistic.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-masternodestatistic.Tpo $(DEPDIR)/libvds_server_a-masternodestatistic.Po
#	$(AM_V_CXX)source='masternodestatistic.cpp' object='libvds_server_a-masternodestatistic.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-masternodestatistic.o `test -f 'masternodestatistic.cpp' || echo '$(srcdir)/'`masternodestatistic.cpp

libvds_server_a-masternodestatistic.obj: masternodestatistic.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-masternodestatistic.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-masternodestatistic.Tpo -c -o libvds_server_a-masternodestatistic.obj `if test -f 'masternodestatistic.cpp'; then $(CYGPATH_W) 'masternodestatistic.cpp'; else $(CYGPATH_W) '$(srcdir)/masternodestatistic.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-masternodestatistic.Tpo $(DEPDIR)/libvds_server_a-masternodestatistic.Po
#	$(AM_V_CXX)source='masternodestatistic.cpp' object='libvds_server_a-masternodestatistic.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-masternodestatistic.obj `if test -f 'masternodestatistic.cpp'; then $(CYGPATH_W) 'masternodestatistic.cpp'; else $(CYGPATH_W) '$(srcdir)/masternodestatistic.cpp'; fi`

libvds_server_a-merkleblock.o: merkleblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-merkleblock.o -MD -MP -MF $(DEPDIR)/libvds_server_a-merkleblock.Tpo -c -o libvds_server_a-merkleblock.o `test -f 'merkleblock.cpp' || echo '$(srcdir)/'`merkleblock.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-merkleblock.Tpo $(DEPDIR)/libvds_server_a-merkleblock.Po
#	$(AM_V_CXX)source='merkleblock.cpp' object='libvds_server_a-merkleblock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-merkleblock.o `test -f 'merkleblock.cpp' || echo '$(srcdir)/'`merkleblock.cpp

libvds_server_a-merkleblock.obj: merkleblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-merkleblock.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-merkleblock.Tpo -c -o libvds_server_a-merkleblock.obj `if test -f 'merkleblock.cpp'; then $(CYGPATH_W) 'merkleblock.cpp'; else $(CYGPATH_W) '$(srcdir)/merkleblock.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-merkleblock.Tpo $(DEPDIR)/libvds_server_a-merkleblock.Po
#	$(AM_V_CXX)source='merkleblock.cpp' object='libvds_server_a-merkleblock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-merkleblock.obj `if test -f 'merkleblock.cpp'; then $(CYGPATH_W) 'merkleblock.cpp'; else $(CYGPATH_W) '$(srcdir)/merkleblock.cpp'; fi`

libvds_server_a-metrics.o: metrics.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-metrics.o -MD -MP -MF $(DEPDIR)/libvds_server_a-metrics.Tpo -c -o libvds_server_a-metrics.o `test -f 'metrics.cpp' || echo '$(srcdir)/'`metrics.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-metrics.Tpo $(DEPDIR)/libvds_server_a-metrics.Po
#	$(AM_V_CXX)source='metrics.cpp' object='libvds_server_a-metrics.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-metrics.o `test -f 'metrics.cpp' || echo '$(srcdir)/'`metrics.cpp

libvds_server_a-metrics.obj: metrics.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-metrics.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-metrics.Tpo -c -o libvds_server_a-metrics.obj `if test -f 'metrics.cpp'; then $(CYGPATH_W) 'metrics.cpp'; else $(CYGPATH_W) '$(srcdir)/metrics.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-metrics.Tpo $(DEPDIR)/libvds_server_a-metrics.Po
#	$(AM_V_CXX)source='metrics.cpp' object='libvds_server_a-metrics.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-metrics.obj `if test -f 'metrics.cpp'; then $(CYGPATH_W) 'metrics.cpp'; else $(CYGPATH_W) '$(srcdir)/metrics.cpp'; fi`

libvds_server_a-messagesigner.o: messagesigner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-messagesigner.o -MD -MP -MF $(DEPDIR)/libvds_server_a-messagesigner.Tpo -c -o libvds_server_a-messagesigner.o `test -f 'messagesigner.cpp' || echo '$(srcdir)/'`messagesigner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-messagesigner.Tpo $(DEPDIR)/libvds_server_a-messagesigner.Po
#	$(AM_V_CXX)source='messagesigner.cpp' object='libvds_server_a-messagesigner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-messagesigner.o `test -f 'messagesigner.cpp' || echo '$(srcdir)/'`messagesigner.cpp

libvds_server_a-messagesigner.obj: messagesigner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-messagesigner.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-messagesigner.Tpo -c -o libvds_server_a-messagesigner.obj `if test -f 'messagesigner.cpp'; then $(CYGPATH_W) 'messagesigner.cpp'; else $(CYGPATH_W) '$(srcdir)/messagesigner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-messagesigner.Tpo $(DEPDIR)/libvds_server_a-messagesigner.Po
#	$(AM_V_CXX)source='messagesigner.cpp' object='libvds_server_a-messagesigner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-messagesigner.obj `if test -f 'messagesigner.cpp'; then $(CYGPATH_W) 'messagesigner.cpp'; else $(CYGPATH_W) '$(srcdir)/messagesigner.cpp'; fi`

consensus/libvds_server_a-merkle.o: consensus/merkle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT consensus/libvds_server_a-merkle.o -MD -MP -MF consensus/$(DEPDIR)/libvds_server_a-merkle.Tpo -c -o consensus/libvds_server_a-merkle.o `test -f 'consensus/merkle.cpp' || echo '$(srcdir)/'`consensus/merkle.cpp
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libvds_server_a-merkle.Tpo consensus/$(DEPDIR)/libvds_server_a-merkle.Po
#	$(AM_V_CXX)source='consensus/merkle.cpp' object='consensus/libvds_server_a-merkle.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libvds_server_a-merkle.o `test -f 'consensus/merkle.cpp' || echo '$(srcdir)/'`consensus/merkle.cpp

consensus/libvds_server_a-merkle.obj: consensus/merkle.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT consensus/libvds_server_a-merkle.obj -MD -MP -MF consensus/$(DEPDIR)/libvds_server_a-merkle.Tpo -c -o consensus/libvds_server_a-merkle.obj `if test -f 'consensus/merkle.cpp'; then $(CYGPATH_W) 'consensus/merkle.cpp'; else $(CYGPATH_W) '$(srcdir)/consensus/merkle.cpp'; fi`
	$(AM_V_at)$(am__mv) consensus/$(DEPDIR)/libvds_server_a-merkle.Tpo consensus/$(DEPDIR)/libvds_server_a-merkle.Po
#	$(AM_V_CXX)source='consensus/merkle.cpp' object='consensus/libvds_server_a-merkle.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o consensus/libvds_server_a-merkle.obj `if test -f 'consensus/merkle.cpp'; then $(CYGPATH_W) 'consensus/merkle.cpp'; else $(CYGPATH_W) '$(srcdir)/consensus/merkle.cpp'; fi`

libvds_server_a-net.o: net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-net.o -MD -MP -MF $(DEPDIR)/libvds_server_a-net.Tpo -c -o libvds_server_a-net.o `test -f 'net.cpp' || echo '$(srcdir)/'`net.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-net.Tpo $(DEPDIR)/libvds_server_a-net.Po
#	$(AM_V_CXX)source='net.cpp' object='libvds_server_a-net.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-net.o `test -f 'net.cpp' || echo '$(srcdir)/'`net.cpp

libvds_server_a-net.obj: net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-net.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-net.Tpo -c -o libvds_server_a-net.obj `if test -f 'net.cpp'; then $(CYGPATH_W) 'net.cpp'; else $(CYGPATH_W) '$(srcdir)/net.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-net.Tpo $(DEPDIR)/libvds_server_a-net.Po
#	$(AM_V_CXX)source='net.cpp' object='libvds_server_a-net.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-net.obj `if test -f 'net.cpp'; then $(CYGPATH_W) 'net.cpp'; else $(CYGPATH_W) '$(srcdir)/net.cpp'; fi`

libvds_server_a-netfulfilledman.o: netfulfilledman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-netfulfilledman.o -MD -MP -MF $(DEPDIR)/libvds_server_a-netfulfilledman.Tpo -c -o libvds_server_a-netfulfilledman.o `test -f 'netfulfilledman.cpp' || echo '$(srcdir)/'`netfulfilledman.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-netfulfilledman.Tpo $(DEPDIR)/libvds_server_a-netfulfilledman.Po
#	$(AM_V_CXX)source='netfulfilledman.cpp' object='libvds_server_a-netfulfilledman.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-netfulfilledman.o `test -f 'netfulfilledman.cpp' || echo '$(srcdir)/'`netfulfilledman.cpp

libvds_server_a-netfulfilledman.obj: netfulfilledman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-netfulfilledman.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-netfulfilledman.Tpo -c -o libvds_server_a-netfulfilledman.obj `if test -f 'netfulfilledman.cpp'; then $(CYGPATH_W) 'netfulfilledman.cpp'; else $(CYGPATH_W) '$(srcdir)/netfulfilledman.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-netfulfilledman.Tpo $(DEPDIR)/libvds_server_a-netfulfilledman.Po
#	$(AM_V_CXX)source='netfulfilledman.cpp' object='libvds_server_a-netfulfilledman.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-netfulfilledman.obj `if test -f 'netfulfilledman.cpp'; then $(CYGPATH_W) 'netfulfilledman.cpp'; else $(CYGPATH_W) '$(srcdir)/netfulfilledman.cpp'; fi`

libvds_server_a-net_processing.o: net_processing.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-net_processing.o -MD -MP -MF $(DEPDIR)/libvds_server_a-net_processing.Tpo -c -o libvds_server_a-net_processing.o `test -f 'net_processing.cpp' || echo '$(srcdir)/'`net_processing.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-net_processing.Tpo $(DEPDIR)/libvds_server_a-net_processing.Po
#	$(AM_V_CXX)source='net_processing.cpp' object='libvds_server_a-net_processing.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-net_processing.o `test -f 'net_processing.cpp' || echo '$(srcdir)/'`net_processing.cpp

libvds_server_a-net_processing.obj: net_processing.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-net_processing.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-net_processing.Tpo -c -o libvds_server_a-net_processing.obj `if test -f 'net_processing.cpp'; then $(CYGPATH_W) 'net_processing.cpp'; else $(CYGPATH_W) '$(srcdir)/net_processing.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-net_processing.Tpo $(DEPDIR)/libvds_server_a-net_processing.Po
#	$(AM_V_CXX)source='net_processing.cpp' object='libvds_server_a-net_processing.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-net_processing.obj `if test -f 'net_processing.cpp'; then $(CYGPATH_W) 'net_processing.cpp'; else $(CYGPATH_W) '$(srcdir)/net_processing.cpp'; fi`

libvds_server_a-noui.o: noui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-noui.o -MD -MP -MF $(DEPDIR)/libvds_server_a-noui.Tpo -c -o libvds_server_a-noui.o `test -f 'noui.cpp' || echo '$(srcdir)/'`noui.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-noui.Tpo $(DEPDIR)/libvds_server_a-noui.Po
#	$(AM_V_CXX)source='noui.cpp' object='libvds_server_a-noui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-noui.o `test -f 'noui.cpp' || echo '$(srcdir)/'`noui.cpp

libvds_server_a-noui.obj: noui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-noui.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-noui.Tpo -c -o libvds_server_a-noui.obj `if test -f 'noui.cpp'; then $(CYGPATH_W) 'noui.cpp'; else $(CYGPATH_W) '$(srcdir)/noui.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-noui.Tpo $(DEPDIR)/libvds_server_a-noui.Po
#	$(AM_V_CXX)source='noui.cpp' object='libvds_server_a-noui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-noui.obj `if test -f 'noui.cpp'; then $(CYGPATH_W) 'noui.cpp'; else $(CYGPATH_W) '$(srcdir)/noui.cpp'; fi`

policy/libvds_server_a-fees.o: policy/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT policy/libvds_server_a-fees.o -MD -MP -MF policy/$(DEPDIR)/libvds_server_a-fees.Tpo -c -o policy/libvds_server_a-fees.o `test -f 'policy/fees.cpp' || echo '$(srcdir)/'`policy/fees.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libvds_server_a-fees.Tpo policy/$(DEPDIR)/libvds_server_a-fees.Po
#	$(AM_V_CXX)source='policy/fees.cpp' object='policy/libvds_server_a-fees.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o policy/libvds_server_a-fees.o `test -f 'policy/fees.cpp' || echo '$(srcdir)/'`policy/fees.cpp

policy/libvds_server_a-fees.obj: policy/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT policy/libvds_server_a-fees.obj -MD -MP -MF policy/$(DEPDIR)/libvds_server_a-fees.Tpo -c -o policy/libvds_server_a-fees.obj `if test -f 'policy/fees.cpp'; then $(CYGPATH_W) 'policy/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/fees.cpp'; fi`
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libvds_server_a-fees.Tpo policy/$(DEPDIR)/libvds_server_a-fees.Po
#	$(AM_V_CXX)source='policy/fees.cpp' object='policy/libvds_server_a-fees.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o policy/libvds_server_a-fees.obj `if test -f 'policy/fees.cpp'; then $(CYGPATH_W) 'policy/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/fees.cpp'; fi`

policy/libvds_server_a-feerate.o: policy/feerate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT policy/libvds_server_a-feerate.o -MD -MP -MF policy/$(DEPDIR)/libvds_server_a-feerate.Tpo -c -o policy/libvds_server_a-feerate.o `test -f 'policy/feerate.cpp' || echo '$(srcdir)/'`policy/feerate.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libvds_server_a-feerate.Tpo policy/$(DEPDIR)/libvds_server_a-feerate.Po
#	$(AM_V_CXX)source='policy/feerate.cpp' object='policy/libvds_server_a-feerate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o policy/libvds_server_a-feerate.o `test -f 'policy/feerate.cpp' || echo '$(srcdir)/'`policy/feerate.cpp

policy/libvds_server_a-feerate.obj: policy/feerate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT policy/libvds_server_a-feerate.obj -MD -MP -MF policy/$(DEPDIR)/libvds_server_a-feerate.Tpo -c -o policy/libvds_server_a-feerate.obj `if test -f 'policy/feerate.cpp'; then $(CYGPATH_W) 'policy/feerate.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/feerate.cpp'; fi`
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libvds_server_a-feerate.Tpo policy/$(DEPDIR)/libvds_server_a-feerate.Po
#	$(AM_V_CXX)source='policy/feerate.cpp' object='policy/libvds_server_a-feerate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o policy/libvds_server_a-feerate.obj `if test -f 'policy/feerate.cpp'; then $(CYGPATH_W) 'policy/feerate.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/feerate.cpp'; fi`

policy/libvds_server_a-policy.o: policy/policy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT policy/libvds_server_a-policy.o -MD -MP -MF policy/$(DEPDIR)/libvds_server_a-policy.Tpo -c -o policy/libvds_server_a-policy.o `test -f 'policy/policy.cpp' || echo '$(srcdir)/'`policy/policy.cpp
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libvds_server_a-policy.Tpo policy/$(DEPDIR)/libvds_server_a-policy.Po
#	$(AM_V_CXX)source='policy/policy.cpp' object='policy/libvds_server_a-policy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o policy/libvds_server_a-policy.o `test -f 'policy/policy.cpp' || echo '$(srcdir)/'`policy/policy.cpp

policy/libvds_server_a-policy.obj: policy/policy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT policy/libvds_server_a-policy.obj -MD -MP -MF policy/$(DEPDIR)/libvds_server_a-policy.Tpo -c -o policy/libvds_server_a-policy.obj `if test -f 'policy/policy.cpp'; then $(CYGPATH_W) 'policy/policy.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/policy.cpp'; fi`
	$(AM_V_at)$(am__mv) policy/$(DEPDIR)/libvds_server_a-policy.Tpo policy/$(DEPDIR)/libvds_server_a-policy.Po
#	$(AM_V_CXX)source='policy/policy.cpp' object='policy/libvds_server_a-policy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o policy/libvds_server_a-policy.obj `if test -f 'policy/policy.cpp'; then $(CYGPATH_W) 'policy/policy.cpp'; else $(CYGPATH_W) '$(srcdir)/policy/policy.cpp'; fi`

libvds_server_a-pow.o: pow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-pow.o -MD -MP -MF $(DEPDIR)/libvds_server_a-pow.Tpo -c -o libvds_server_a-pow.o `test -f 'pow.cpp' || echo '$(srcdir)/'`pow.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-pow.Tpo $(DEPDIR)/libvds_server_a-pow.Po
#	$(AM_V_CXX)source='pow.cpp' object='libvds_server_a-pow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-pow.o `test -f 'pow.cpp' || echo '$(srcdir)/'`pow.cpp

libvds_server_a-pow.obj: pow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-pow.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-pow.Tpo -c -o libvds_server_a-pow.obj `if test -f 'pow.cpp'; then $(CYGPATH_W) 'pow.cpp'; else $(CYGPATH_W) '$(srcdir)/pow.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-pow.Tpo $(DEPDIR)/libvds_server_a-pow.Po
#	$(AM_V_CXX)source='pow.cpp' object='libvds_server_a-pow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-pow.obj `if test -f 'pow.cpp'; then $(CYGPATH_W) 'pow.cpp'; else $(CYGPATH_W) '$(srcdir)/pow.cpp'; fi`

libvds_server_a-rest.o: rest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-rest.o -MD -MP -MF $(DEPDIR)/libvds_server_a-rest.Tpo -c -o libvds_server_a-rest.o `test -f 'rest.cpp' || echo '$(srcdir)/'`rest.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-rest.Tpo $(DEPDIR)/libvds_server_a-rest.Po
#	$(AM_V_CXX)source='rest.cpp' object='libvds_server_a-rest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-rest.o `test -f 'rest.cpp' || echo '$(srcdir)/'`rest.cpp

libvds_server_a-rest.obj: rest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-rest.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-rest.Tpo -c -o libvds_server_a-rest.obj `if test -f 'rest.cpp'; then $(CYGPATH_W) 'rest.cpp'; else $(CYGPATH_W) '$(srcdir)/rest.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-rest.Tpo $(DEPDIR)/libvds_server_a-rest.Po
#	$(AM_V_CXX)source='rest.cpp' object='libvds_server_a-rest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-rest.obj `if test -f 'rest.cpp'; then $(CYGPATH_W) 'rest.cpp'; else $(CYGPATH_W) '$(srcdir)/rest.cpp'; fi`

rpc/libvds_server_a-blockchain.o: rpc/blockchain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/libvds_server_a-blockchain.o -MD -MP -MF rpc/$(DEPDIR)/libvds_server_a-blockchain.Tpo -c -o rpc/libvds_server_a-blockchain.o `test -f 'rpc/blockchain.cpp' || echo '$(srcdir)/'`rpc/blockchain.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libvds_server_a-blockchain.Tpo rpc/$(DEPDIR)/libvds_server_a-blockchain.Po
#	$(AM_V_CXX)source='rpc/blockchain.cpp' object='rpc/libvds_server_a-blockchain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libvds_server_a-blockchain.o `test -f 'rpc/blockchain.cpp' || echo '$(srcdir)/'`rpc/blockchain.cpp

rpc/libvds_server_a-blockchain.obj: rpc/blockchain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/libvds_server_a-blockchain.obj -MD -MP -MF rpc/$(DEPDIR)/libvds_server_a-blockchain.Tpo -c -o rpc/libvds_server_a-blockchain.obj `if test -f 'rpc/blockchain.cpp'; then $(CYGPATH_W) 'rpc/blockchain.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/blockchain.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libvds_server_a-blockchain.Tpo rpc/$(DEPDIR)/libvds_server_a-blockchain.Po
#	$(AM_V_CXX)source='rpc/blockchain.cpp' object='rpc/libvds_server_a-blockchain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libvds_server_a-blockchain.obj `if test -f 'rpc/blockchain.cpp'; then $(CYGPATH_W) 'rpc/blockchain.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/blockchain.cpp'; fi`

rpc/libvds_server_a-masternode.o: rpc/masternode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/libvds_server_a-masternode.o -MD -MP -MF rpc/$(DEPDIR)/libvds_server_a-masternode.Tpo -c -o rpc/libvds_server_a-masternode.o `test -f 'rpc/masternode.cpp' || echo '$(srcdir)/'`rpc/masternode.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libvds_server_a-masternode.Tpo rpc/$(DEPDIR)/libvds_server_a-masternode.Po
#	$(AM_V_CXX)source='rpc/masternode.cpp' object='rpc/libvds_server_a-masternode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libvds_server_a-masternode.o `test -f 'rpc/masternode.cpp' || echo '$(srcdir)/'`rpc/masternode.cpp

rpc/libvds_server_a-masternode.obj: rpc/masternode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/libvds_server_a-masternode.obj -MD -MP -MF rpc/$(DEPDIR)/libvds_server_a-masternode.Tpo -c -o rpc/libvds_server_a-masternode.obj `if test -f 'rpc/masternode.cpp'; then $(CYGPATH_W) 'rpc/masternode.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/masternode.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libvds_server_a-masternode.Tpo rpc/$(DEPDIR)/libvds_server_a-masternode.Po
#	$(AM_V_CXX)source='rpc/masternode.cpp' object='rpc/libvds_server_a-masternode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libvds_server_a-masternode.obj `if test -f 'rpc/masternode.cpp'; then $(CYGPATH_W) 'rpc/masternode.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/masternode.cpp'; fi`

rpc/libvds_server_a-misc.o: rpc/misc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/libvds_server_a-misc.o -MD -MP -MF rpc/$(DEPDIR)/libvds_server_a-misc.Tpo -c -o rpc/libvds_server_a-misc.o `test -f 'rpc/misc.cpp' || echo '$(srcdir)/'`rpc/misc.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libvds_server_a-misc.Tpo rpc/$(DEPDIR)/libvds_server_a-misc.Po
#	$(AM_V_CXX)source='rpc/misc.cpp' object='rpc/libvds_server_a-misc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libvds_server_a-misc.o `test -f 'rpc/misc.cpp' || echo '$(srcdir)/'`rpc/misc.cpp

rpc/libvds_server_a-misc.obj: rpc/misc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/libvds_server_a-misc.obj -MD -MP -MF rpc/$(DEPDIR)/libvds_server_a-misc.Tpo -c -o rpc/libvds_server_a-misc.obj `if test -f 'rpc/misc.cpp'; then $(CYGPATH_W) 'rpc/misc.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/misc.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libvds_server_a-misc.Tpo rpc/$(DEPDIR)/libvds_server_a-misc.Po
#	$(AM_V_CXX)source='rpc/misc.cpp' object='rpc/libvds_server_a-misc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libvds_server_a-misc.obj `if test -f 'rpc/misc.cpp'; then $(CYGPATH_W) 'rpc/misc.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/misc.cpp'; fi`

rpc/libvds_server_a-net.o: rpc/net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/libvds_server_a-net.o -MD -MP -MF rpc/$(DEPDIR)/libvds_server_a-net.Tpo -c -o rpc/libvds_server_a-net.o `test -f 'rpc/net.cpp' || echo '$(srcdir)/'`rpc/net.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libvds_server_a-net.Tpo rpc/$(DEPDIR)/libvds_server_a-net.Po
#	$(AM_V_CXX)source='rpc/net.cpp' object='rpc/libvds_server_a-net.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libvds_server_a-net.o `test -f 'rpc/net.cpp' || echo '$(srcdir)/'`rpc/net.cpp

rpc/libvds_server_a-net.obj: rpc/net.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/libvds_server_a-net.obj -MD -MP -MF rpc/$(DEPDIR)/libvds_server_a-net.Tpo -c -o rpc/libvds_server_a-net.obj `if test -f 'rpc/net.cpp'; then $(CYGPATH_W) 'rpc/net.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/net.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libvds_server_a-net.Tpo rpc/$(DEPDIR)/libvds_server_a-net.Po
#	$(AM_V_CXX)source='rpc/net.cpp' object='rpc/libvds_server_a-net.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libvds_server_a-net.obj `if test -f 'rpc/net.cpp'; then $(CYGPATH_W) 'rpc/net.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/net.cpp'; fi`

rpc/libvds_server_a-ad.o: rpc/ad.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/libvds_server_a-ad.o -MD -MP -MF rpc/$(DEPDIR)/libvds_server_a-ad.Tpo -c -o rpc/libvds_server_a-ad.o `test -f 'rpc/ad.cpp' || echo '$(srcdir)/'`rpc/ad.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libvds_server_a-ad.Tpo rpc/$(DEPDIR)/libvds_server_a-ad.Po
#	$(AM_V_CXX)source='rpc/ad.cpp' object='rpc/libvds_server_a-ad.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libvds_server_a-ad.o `test -f 'rpc/ad.cpp' || echo '$(srcdir)/'`rpc/ad.cpp

rpc/libvds_server_a-ad.obj: rpc/ad.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/libvds_server_a-ad.obj -MD -MP -MF rpc/$(DEPDIR)/libvds_server_a-ad.Tpo -c -o rpc/libvds_server_a-ad.obj `if test -f 'rpc/ad.cpp'; then $(CYGPATH_W) 'rpc/ad.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/ad.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libvds_server_a-ad.Tpo rpc/$(DEPDIR)/libvds_server_a-ad.Po
#	$(AM_V_CXX)source='rpc/ad.cpp' object='rpc/libvds_server_a-ad.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libvds_server_a-ad.obj `if test -f 'rpc/ad.cpp'; then $(CYGPATH_W) 'rpc/ad.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/ad.cpp'; fi`

rpc/libvds_server_a-rawtransaction.o: rpc/rawtransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/libvds_server_a-rawtransaction.o -MD -MP -MF rpc/$(DEPDIR)/libvds_server_a-rawtransaction.Tpo -c -o rpc/libvds_server_a-rawtransaction.o `test -f 'rpc/rawtransaction.cpp' || echo '$(srcdir)/'`rpc/rawtransaction.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libvds_server_a-rawtransaction.Tpo rpc/$(DEPDIR)/libvds_server_a-rawtransaction.Po
#	$(AM_V_CXX)source='rpc/rawtransaction.cpp' object='rpc/libvds_server_a-rawtransaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libvds_server_a-rawtransaction.o `test -f 'rpc/rawtransaction.cpp' || echo '$(srcdir)/'`rpc/rawtransaction.cpp

rpc/libvds_server_a-rawtransaction.obj: rpc/rawtransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/libvds_server_a-rawtransaction.obj -MD -MP -MF rpc/$(DEPDIR)/libvds_server_a-rawtransaction.Tpo -c -o rpc/libvds_server_a-rawtransaction.obj `if test -f 'rpc/rawtransaction.cpp'; then $(CYGPATH_W) 'rpc/rawtransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rawtransaction.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libvds_server_a-rawtransaction.Tpo rpc/$(DEPDIR)/libvds_server_a-rawtransaction.Po
#	$(AM_V_CXX)source='rpc/rawtransaction.cpp' object='rpc/libvds_server_a-rawtransaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libvds_server_a-rawtransaction.obj `if test -f 'rpc/rawtransaction.cpp'; then $(CYGPATH_W) 'rpc/rawtransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/rawtransaction.cpp'; fi`

rpc/libvds_server_a-server.o: rpc/server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/libvds_server_a-server.o -MD -MP -MF rpc/$(DEPDIR)/libvds_server_a-server.Tpo -c -o rpc/libvds_server_a-server.o `test -f 'rpc/server.cpp' || echo '$(srcdir)/'`rpc/server.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libvds_server_a-server.Tpo rpc/$(DEPDIR)/libvds_server_a-server.Po
#	$(AM_V_CXX)source='rpc/server.cpp' object='rpc/libvds_server_a-server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libvds_server_a-server.o `test -f 'rpc/server.cpp' || echo '$(srcdir)/'`rpc/server.cpp

rpc/libvds_server_a-server.obj: rpc/server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/libvds_server_a-server.obj -MD -MP -MF rpc/$(DEPDIR)/libvds_server_a-server.Tpo -c -o rpc/libvds_server_a-server.obj `if test -f 'rpc/server.cpp'; then $(CYGPATH_W) 'rpc/server.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/server.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libvds_server_a-server.Tpo rpc/$(DEPDIR)/libvds_server_a-server.Po
#	$(AM_V_CXX)source='rpc/server.cpp' object='rpc/libvds_server_a-server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libvds_server_a-server.obj `if test -f 'rpc/server.cpp'; then $(CYGPATH_W) 'rpc/server.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/server.cpp'; fi`

script/libvds_server_a-sigcache.o: script/sigcache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT script/libvds_server_a-sigcache.o -MD -MP -MF script/$(DEPDIR)/libvds_server_a-sigcache.Tpo -c -o script/libvds_server_a-sigcache.o `test -f 'script/sigcache.cpp' || echo '$(srcdir)/'`script/sigcache.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libvds_server_a-sigcache.Tpo script/$(DEPDIR)/libvds_server_a-sigcache.Po
#	$(AM_V_CXX)source='script/sigcache.cpp' object='script/libvds_server_a-sigcache.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o script/libvds_server_a-sigcache.o `test -f 'script/sigcache.cpp' || echo '$(srcdir)/'`script/sigcache.cpp

script/libvds_server_a-sigcache.obj: script/sigcache.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT script/libvds_server_a-sigcache.obj -MD -MP -MF script/$(DEPDIR)/libvds_server_a-sigcache.Tpo -c -o script/libvds_server_a-sigcache.obj `if test -f 'script/sigcache.cpp'; then $(CYGPATH_W) 'script/sigcache.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sigcache.cpp'; fi`
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libvds_server_a-sigcache.Tpo script/$(DEPDIR)/libvds_server_a-sigcache.Po
#	$(AM_V_CXX)source='script/sigcache.cpp' object='script/libvds_server_a-sigcache.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o script/libvds_server_a-sigcache.obj `if test -f 'script/sigcache.cpp'; then $(CYGPATH_W) 'script/sigcache.cpp'; else $(CYGPATH_W) '$(srcdir)/script/sigcache.cpp'; fi`

libvds_server_a-tandiadb.o: tandiadb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-tandiadb.o -MD -MP -MF $(DEPDIR)/libvds_server_a-tandiadb.Tpo -c -o libvds_server_a-tandiadb.o `test -f 'tandiadb.cpp' || echo '$(srcdir)/'`tandiadb.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-tandiadb.Tpo $(DEPDIR)/libvds_server_a-tandiadb.Po
#	$(AM_V_CXX)source='tandiadb.cpp' object='libvds_server_a-tandiadb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-tandiadb.o `test -f 'tandiadb.cpp' || echo '$(srcdir)/'`tandiadb.cpp

libvds_server_a-tandiadb.obj: tandiadb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-tandiadb.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-tandiadb.Tpo -c -o libvds_server_a-tandiadb.obj `if test -f 'tandiadb.cpp'; then $(CYGPATH_W) 'tandiadb.cpp'; else $(CYGPATH_W) '$(srcdir)/tandiadb.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-tandiadb.Tpo $(DEPDIR)/libvds_server_a-tandiadb.Po
#	$(AM_V_CXX)source='tandiadb.cpp' object='libvds_server_a-tandiadb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-tandiadb.obj `if test -f 'tandiadb.cpp'; then $(CYGPATH_W) 'tandiadb.cpp'; else $(CYGPATH_W) '$(srcdir)/tandiadb.cpp'; fi`

libvds_server_a-timedata.o: timedata.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-timedata.o -MD -MP -MF $(DEPDIR)/libvds_server_a-timedata.Tpo -c -o libvds_server_a-timedata.o `test -f 'timedata.cpp' || echo '$(srcdir)/'`timedata.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-timedata.Tpo $(DEPDIR)/libvds_server_a-timedata.Po
#	$(AM_V_CXX)source='timedata.cpp' object='libvds_server_a-timedata.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-timedata.o `test -f 'timedata.cpp' || echo '$(srcdir)/'`timedata.cpp

libvds_server_a-timedata.obj: timedata.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-timedata.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-timedata.Tpo -c -o libvds_server_a-timedata.obj `if test -f 'timedata.cpp'; then $(CYGPATH_W) 'timedata.cpp'; else $(CYGPATH_W) '$(srcdir)/timedata.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-timedata.Tpo $(DEPDIR)/libvds_server_a-timedata.Po
#	$(AM_V_CXX)source='timedata.cpp' object='libvds_server_a-timedata.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-timedata.obj `if test -f 'timedata.cpp'; then $(CYGPATH_W) 'timedata.cpp'; else $(CYGPATH_W) '$(srcdir)/timedata.cpp'; fi`

libvds_server_a-torcontrol.o: torcontrol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-torcontrol.o -MD -MP -MF $(DEPDIR)/libvds_server_a-torcontrol.Tpo -c -o libvds_server_a-torcontrol.o `test -f 'torcontrol.cpp' || echo '$(srcdir)/'`torcontrol.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-torcontrol.Tpo $(DEPDIR)/libvds_server_a-torcontrol.Po
#	$(AM_V_CXX)source='torcontrol.cpp' object='libvds_server_a-torcontrol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-torcontrol.o `test -f 'torcontrol.cpp' || echo '$(srcdir)/'`torcontrol.cpp

libvds_server_a-torcontrol.obj: torcontrol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-torcontrol.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-torcontrol.Tpo -c -o libvds_server_a-torcontrol.obj `if test -f 'torcontrol.cpp'; then $(CYGPATH_W) 'torcontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/torcontrol.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-torcontrol.Tpo $(DEPDIR)/libvds_server_a-torcontrol.Po
#	$(AM_V_CXX)source='torcontrol.cpp' object='libvds_server_a-torcontrol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-torcontrol.obj `if test -f 'torcontrol.cpp'; then $(CYGPATH_W) 'torcontrol.cpp'; else $(CYGPATH_W) '$(srcdir)/torcontrol.cpp'; fi`

libvds_server_a-txdb.o: txdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-txdb.o -MD -MP -MF $(DEPDIR)/libvds_server_a-txdb.Tpo -c -o libvds_server_a-txdb.o `test -f 'txdb.cpp' || echo '$(srcdir)/'`txdb.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-txdb.Tpo $(DEPDIR)/libvds_server_a-txdb.Po
#	$(AM_V_CXX)source='txdb.cpp' object='libvds_server_a-txdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-txdb.o `test -f 'txdb.cpp' || echo '$(srcdir)/'`txdb.cpp

libvds_server_a-txdb.obj: txdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-txdb.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-txdb.Tpo -c -o libvds_server_a-txdb.obj `if test -f 'txdb.cpp'; then $(CYGPATH_W) 'txdb.cpp'; else $(CYGPATH_W) '$(srcdir)/txdb.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-txdb.Tpo $(DEPDIR)/libvds_server_a-txdb.Po
#	$(AM_V_CXX)source='txdb.cpp' object='libvds_server_a-txdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-txdb.obj `if test -f 'txdb.cpp'; then $(CYGPATH_W) 'txdb.cpp'; else $(CYGPATH_W) '$(srcdir)/txdb.cpp'; fi`

libvds_server_a-txdestinationtool.o: txdestinationtool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-txdestinationtool.o -MD -MP -MF $(DEPDIR)/libvds_server_a-txdestinationtool.Tpo -c -o libvds_server_a-txdestinationtool.o `test -f 'txdestinationtool.cpp' || echo '$(srcdir)/'`txdestinationtool.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-txdestinationtool.Tpo $(DEPDIR)/libvds_server_a-txdestinationtool.Po
#	$(AM_V_CXX)source='txdestinationtool.cpp' object='libvds_server_a-txdestinationtool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-txdestinationtool.o `test -f 'txdestinationtool.cpp' || echo '$(srcdir)/'`txdestinationtool.cpp

libvds_server_a-txdestinationtool.obj: txdestinationtool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-txdestinationtool.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-txdestinationtool.Tpo -c -o libvds_server_a-txdestinationtool.obj `if test -f 'txdestinationtool.cpp'; then $(CYGPATH_W) 'txdestinationtool.cpp'; else $(CYGPATH_W) '$(srcdir)/txdestinationtool.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-txdestinationtool.Tpo $(DEPDIR)/libvds_server_a-txdestinationtool.Po
#	$(AM_V_CXX)source='txdestinationtool.cpp' object='libvds_server_a-txdestinationtool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-txdestinationtool.obj `if test -f 'txdestinationtool.cpp'; then $(CYGPATH_W) 'txdestinationtool.cpp'; else $(CYGPATH_W) '$(srcdir)/txdestinationtool.cpp'; fi`

libvds_server_a-addb.o: addb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-addb.o -MD -MP -MF $(DEPDIR)/libvds_server_a-addb.Tpo -c -o libvds_server_a-addb.o `test -f 'addb.cpp' || echo '$(srcdir)/'`addb.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-addb.Tpo $(DEPDIR)/libvds_server_a-addb.Po
#	$(AM_V_CXX)source='addb.cpp' object='libvds_server_a-addb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-addb.o `test -f 'addb.cpp' || echo '$(srcdir)/'`addb.cpp

libvds_server_a-addb.obj: addb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-addb.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-addb.Tpo -c -o libvds_server_a-addb.obj `if test -f 'addb.cpp'; then $(CYGPATH_W) 'addb.cpp'; else $(CYGPATH_W) '$(srcdir)/addb.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-addb.Tpo $(DEPDIR)/libvds_server_a-addb.Po
#	$(AM_V_CXX)source='addb.cpp' object='libvds_server_a-addb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-addb.obj `if test -f 'addb.cpp'; then $(CYGPATH_W) 'addb.cpp'; else $(CYGPATH_W) '$(srcdir)/addb.cpp'; fi`

libvds_server_a-txmempool.o: txmempool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-txmempool.o -MD -MP -MF $(DEPDIR)/libvds_server_a-txmempool.Tpo -c -o libvds_server_a-txmempool.o `test -f 'txmempool.cpp' || echo '$(srcdir)/'`txmempool.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-txmempool.Tpo $(DEPDIR)/libvds_server_a-txmempool.Po
#	$(AM_V_CXX)source='txmempool.cpp' object='libvds_server_a-txmempool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-txmempool.o `test -f 'txmempool.cpp' || echo '$(srcdir)/'`txmempool.cpp

libvds_server_a-txmempool.obj: txmempool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-txmempool.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-txmempool.Tpo -c -o libvds_server_a-txmempool.obj `if test -f 'txmempool.cpp'; then $(CYGPATH_W) 'txmempool.cpp'; else $(CYGPATH_W) '$(srcdir)/txmempool.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-txmempool.Tpo $(DEPDIR)/libvds_server_a-txmempool.Po
#	$(AM_V_CXX)source='txmempool.cpp' object='libvds_server_a-txmempool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-txmempool.obj `if test -f 'txmempool.cpp'; then $(CYGPATH_W) 'txmempool.cpp'; else $(CYGPATH_W) '$(srcdir)/txmempool.cpp'; fi`

libvds_server_a-ui_interface.o: ui_interface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-ui_interface.o -MD -MP -MF $(DEPDIR)/libvds_server_a-ui_interface.Tpo -c -o libvds_server_a-ui_interface.o `test -f 'ui_interface.cpp' || echo '$(srcdir)/'`ui_interface.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-ui_interface.Tpo $(DEPDIR)/libvds_server_a-ui_interface.Po
#	$(AM_V_CXX)source='ui_interface.cpp' object='libvds_server_a-ui_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-ui_interface.o `test -f 'ui_interface.cpp' || echo '$(srcdir)/'`ui_interface.cpp

libvds_server_a-ui_interface.obj: ui_interface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-ui_interface.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-ui_interface.Tpo -c -o libvds_server_a-ui_interface.obj `if test -f 'ui_interface.cpp'; then $(CYGPATH_W) 'ui_interface.cpp'; else $(CYGPATH_W) '$(srcdir)/ui_interface.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-ui_interface.Tpo $(DEPDIR)/libvds_server_a-ui_interface.Po
#	$(AM_V_CXX)source='ui_interface.cpp' object='libvds_server_a-ui_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-ui_interface.obj `if test -f 'ui_interface.cpp'; then $(CYGPATH_W) 'ui_interface.cpp'; else $(CYGPATH_W) '$(srcdir)/ui_interface.cpp'; fi`

libvds_server_a-validation.o: validation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-validation.o -MD -MP -MF $(DEPDIR)/libvds_server_a-validation.Tpo -c -o libvds_server_a-validation.o `test -f 'validation.cpp' || echo '$(srcdir)/'`validation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-validation.Tpo $(DEPDIR)/libvds_server_a-validation.Po
#	$(AM_V_CXX)source='validation.cpp' object='libvds_server_a-validation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-validation.o `test -f 'validation.cpp' || echo '$(srcdir)/'`validation.cpp

libvds_server_a-validation.obj: validation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-validation.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-validation.Tpo -c -o libvds_server_a-validation.obj `if test -f 'validation.cpp'; then $(CYGPATH_W) 'validation.cpp'; else $(CYGPATH_W) '$(srcdir)/validation.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-validation.Tpo $(DEPDIR)/libvds_server_a-validation.Po
#	$(AM_V_CXX)source='validation.cpp' object='libvds_server_a-validation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-validation.obj `if test -f 'validation.cpp'; then $(CYGPATH_W) 'validation.cpp'; else $(CYGPATH_W) '$(srcdir)/validation.cpp'; fi`

libvds_server_a-validationinterface.o: validationinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-validationinterface.o -MD -MP -MF $(DEPDIR)/libvds_server_a-validationinterface.Tpo -c -o libvds_server_a-validationinterface.o `test -f 'validationinterface.cpp' || echo '$(srcdir)/'`validationinterface.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-validationinterface.Tpo $(DEPDIR)/libvds_server_a-validationinterface.Po
#	$(AM_V_CXX)source='validationinterface.cpp' object='libvds_server_a-validationinterface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-validationinterface.o `test -f 'validationinterface.cpp' || echo '$(srcdir)/'`validationinterface.cpp

libvds_server_a-validationinterface.obj: validationinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-validationinterface.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-validationinterface.Tpo -c -o libvds_server_a-validationinterface.obj `if test -f 'validationinterface.cpp'; then $(CYGPATH_W) 'validationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/validationinterface.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-validationinterface.Tpo $(DEPDIR)/libvds_server_a-validationinterface.Po
#	$(AM_V_CXX)source='validationinterface.cpp' object='libvds_server_a-validationinterface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-validationinterface.obj `if test -f 'validationinterface.cpp'; then $(CYGPATH_W) 'validationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/validationinterface.cpp'; fi`

libvds_server_a-versionbits.o: versionbits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-versionbits.o -MD -MP -MF $(DEPDIR)/libvds_server_a-versionbits.Tpo -c -o libvds_server_a-versionbits.o `test -f 'versionbits.cpp' || echo '$(srcdir)/'`versionbits.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-versionbits.Tpo $(DEPDIR)/libvds_server_a-versionbits.Po
#	$(AM_V_CXX)source='versionbits.cpp' object='libvds_server_a-versionbits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-versionbits.o `test -f 'versionbits.cpp' || echo '$(srcdir)/'`versionbits.cpp

libvds_server_a-versionbits.obj: versionbits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_server_a-versionbits.obj -MD -MP -MF $(DEPDIR)/libvds_server_a-versionbits.Tpo -c -o libvds_server_a-versionbits.obj `if test -f 'versionbits.cpp'; then $(CYGPATH_W) 'versionbits.cpp'; else $(CYGPATH_W) '$(srcdir)/versionbits.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_server_a-versionbits.Tpo $(DEPDIR)/libvds_server_a-versionbits.Po
#	$(AM_V_CXX)source='versionbits.cpp' object='libvds_server_a-versionbits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_server_a-versionbits.obj `if test -f 'versionbits.cpp'; then $(CYGPATH_W) 'versionbits.cpp'; else $(CYGPATH_W) '$(srcdir)/versionbits.cpp'; fi`

qtum/libvds_server_a-qtumstate.o: qtum/qtumstate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qtum/libvds_server_a-qtumstate.o -MD -MP -MF qtum/$(DEPDIR)/libvds_server_a-qtumstate.Tpo -c -o qtum/libvds_server_a-qtumstate.o `test -f 'qtum/qtumstate.cpp' || echo '$(srcdir)/'`qtum/qtumstate.cpp
	$(AM_V_at)$(am__mv) qtum/$(DEPDIR)/libvds_server_a-qtumstate.Tpo qtum/$(DEPDIR)/libvds_server_a-qtumstate.Po
#	$(AM_V_CXX)source='qtum/qtumstate.cpp' object='qtum/libvds_server_a-qtumstate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qtum/libvds_server_a-qtumstate.o `test -f 'qtum/qtumstate.cpp' || echo '$(srcdir)/'`qtum/qtumstate.cpp

qtum/libvds_server_a-qtumstate.obj: qtum/qtumstate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qtum/libvds_server_a-qtumstate.obj -MD -MP -MF qtum/$(DEPDIR)/libvds_server_a-qtumstate.Tpo -c -o qtum/libvds_server_a-qtumstate.obj `if test -f 'qtum/qtumstate.cpp'; then $(CYGPATH_W) 'qtum/qtumstate.cpp'; else $(CYGPATH_W) '$(srcdir)/qtum/qtumstate.cpp'; fi`
	$(AM_V_at)$(am__mv) qtum/$(DEPDIR)/libvds_server_a-qtumstate.Tpo qtum/$(DEPDIR)/libvds_server_a-qtumstate.Po
#	$(AM_V_CXX)source='qtum/qtumstate.cpp' object='qtum/libvds_server_a-qtumstate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qtum/libvds_server_a-qtumstate.obj `if test -f 'qtum/qtumstate.cpp'; then $(CYGPATH_W) 'qtum/qtumstate.cpp'; else $(CYGPATH_W) '$(srcdir)/qtum/qtumstate.cpp'; fi`

qtum/libvds_server_a-qtumtransaction.o: qtum/qtumtransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qtum/libvds_server_a-qtumtransaction.o -MD -MP -MF qtum/$(DEPDIR)/libvds_server_a-qtumtransaction.Tpo -c -o qtum/libvds_server_a-qtumtransaction.o `test -f 'qtum/qtumtransaction.cpp' || echo '$(srcdir)/'`qtum/qtumtransaction.cpp
	$(AM_V_at)$(am__mv) qtum/$(DEPDIR)/libvds_server_a-qtumtransaction.Tpo qtum/$(DEPDIR)/libvds_server_a-qtumtransaction.Po
#	$(AM_V_CXX)source='qtum/qtumtransaction.cpp' object='qtum/libvds_server_a-qtumtransaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qtum/libvds_server_a-qtumtransaction.o `test -f 'qtum/qtumtransaction.cpp' || echo '$(srcdir)/'`qtum/qtumtransaction.cpp

qtum/libvds_server_a-qtumtransaction.obj: qtum/qtumtransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qtum/libvds_server_a-qtumtransaction.obj -MD -MP -MF qtum/$(DEPDIR)/libvds_server_a-qtumtransaction.Tpo -c -o qtum/libvds_server_a-qtumtransaction.obj `if test -f 'qtum/qtumtransaction.cpp'; then $(CYGPATH_W) 'qtum/qtumtransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/qtum/qtumtransaction.cpp'; fi`
	$(AM_V_at)$(am__mv) qtum/$(DEPDIR)/libvds_server_a-qtumtransaction.Tpo qtum/$(DEPDIR)/libvds_server_a-qtumtransaction.Po
#	$(AM_V_CXX)source='qtum/qtumtransaction.cpp' object='qtum/libvds_server_a-qtumtransaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qtum/libvds_server_a-qtumtransaction.obj `if test -f 'qtum/qtumtransaction.cpp'; then $(CYGPATH_W) 'qtum/qtumtransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/qtum/qtumtransaction.cpp'; fi`

qtum/libvds_server_a-qtumDGP.o: qtum/qtumDGP.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qtum/libvds_server_a-qtumDGP.o -MD -MP -MF qtum/$(DEPDIR)/libvds_server_a-qtumDGP.Tpo -c -o qtum/libvds_server_a-qtumDGP.o `test -f 'qtum/qtumDGP.cpp' || echo '$(srcdir)/'`qtum/qtumDGP.cpp
	$(AM_V_at)$(am__mv) qtum/$(DEPDIR)/libvds_server_a-qtumDGP.Tpo qtum/$(DEPDIR)/libvds_server_a-qtumDGP.Po
#	$(AM_V_CXX)source='qtum/qtumDGP.cpp' object='qtum/libvds_server_a-qtumDGP.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qtum/libvds_server_a-qtumDGP.o `test -f 'qtum/qtumDGP.cpp' || echo '$(srcdir)/'`qtum/qtumDGP.cpp

qtum/libvds_server_a-qtumDGP.obj: qtum/qtumDGP.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qtum/libvds_server_a-qtumDGP.obj -MD -MP -MF qtum/$(DEPDIR)/libvds_server_a-qtumDGP.Tpo -c -o qtum/libvds_server_a-qtumDGP.obj `if test -f 'qtum/qtumDGP.cpp'; then $(CYGPATH_W) 'qtum/qtumDGP.cpp'; else $(CYGPATH_W) '$(srcdir)/qtum/qtumDGP.cpp'; fi`
	$(AM_V_at)$(am__mv) qtum/$(DEPDIR)/libvds_server_a-qtumDGP.Tpo qtum/$(DEPDIR)/libvds_server_a-qtumDGP.Po
#	$(AM_V_CXX)source='qtum/qtumDGP.cpp' object='qtum/libvds_server_a-qtumDGP.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qtum/libvds_server_a-qtumDGP.obj `if test -f 'qtum/qtumDGP.cpp'; then $(CYGPATH_W) 'qtum/qtumDGP.cpp'; else $(CYGPATH_W) '$(srcdir)/qtum/qtumDGP.cpp'; fi`

qtum/libvds_server_a-storageresults.o: qtum/storageresults.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qtum/libvds_server_a-storageresults.o -MD -MP -MF qtum/$(DEPDIR)/libvds_server_a-storageresults.Tpo -c -o qtum/libvds_server_a-storageresults.o `test -f 'qtum/storageresults.cpp' || echo '$(srcdir)/'`qtum/storageresults.cpp
	$(AM_V_at)$(am__mv) qtum/$(DEPDIR)/libvds_server_a-storageresults.Tpo qtum/$(DEPDIR)/libvds_server_a-storageresults.Po
#	$(AM_V_CXX)source='qtum/storageresults.cpp' object='qtum/libvds_server_a-storageresults.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qtum/libvds_server_a-storageresults.o `test -f 'qtum/storageresults.cpp' || echo '$(srcdir)/'`qtum/storageresults.cpp

qtum/libvds_server_a-storageresults.obj: qtum/storageresults.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qtum/libvds_server_a-storageresults.obj -MD -MP -MF qtum/$(DEPDIR)/libvds_server_a-storageresults.Tpo -c -o qtum/libvds_server_a-storageresults.obj `if test -f 'qtum/storageresults.cpp'; then $(CYGPATH_W) 'qtum/storageresults.cpp'; else $(CYGPATH_W) '$(srcdir)/qtum/storageresults.cpp'; fi`
	$(AM_V_at)$(am__mv) qtum/$(DEPDIR)/libvds_server_a-storageresults.Tpo qtum/$(DEPDIR)/libvds_server_a-storageresults.Po
#	$(AM_V_CXX)source='qtum/storageresults.cpp' object='qtum/libvds_server_a-storageresults.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_server_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qtum/libvds_server_a-storageresults.obj `if test -f 'qtum/storageresults.cpp'; then $(CYGPATH_W) 'qtum/storageresults.cpp'; else $(CYGPATH_W) '$(srcdir)/qtum/storageresults.cpp'; fi`

support/libvds_util_a-pagelocker.o: support/pagelocker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT support/libvds_util_a-pagelocker.o -MD -MP -MF support/$(DEPDIR)/libvds_util_a-pagelocker.Tpo -c -o support/libvds_util_a-pagelocker.o `test -f 'support/pagelocker.cpp' || echo '$(srcdir)/'`support/pagelocker.cpp
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libvds_util_a-pagelocker.Tpo support/$(DEPDIR)/libvds_util_a-pagelocker.Po
#	$(AM_V_CXX)source='support/pagelocker.cpp' object='support/libvds_util_a-pagelocker.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o support/libvds_util_a-pagelocker.o `test -f 'support/pagelocker.cpp' || echo '$(srcdir)/'`support/pagelocker.cpp

support/libvds_util_a-pagelocker.obj: support/pagelocker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT support/libvds_util_a-pagelocker.obj -MD -MP -MF support/$(DEPDIR)/libvds_util_a-pagelocker.Tpo -c -o support/libvds_util_a-pagelocker.obj `if test -f 'support/pagelocker.cpp'; then $(CYGPATH_W) 'support/pagelocker.cpp'; else $(CYGPATH_W) '$(srcdir)/support/pagelocker.cpp'; fi`
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libvds_util_a-pagelocker.Tpo support/$(DEPDIR)/libvds_util_a-pagelocker.Po
#	$(AM_V_CXX)source='support/pagelocker.cpp' object='support/libvds_util_a-pagelocker.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o support/libvds_util_a-pagelocker.obj `if test -f 'support/pagelocker.cpp'; then $(CYGPATH_W) 'support/pagelocker.cpp'; else $(CYGPATH_W) '$(srcdir)/support/pagelocker.cpp'; fi`

support/libvds_util_a-lockedpool.o: support/lockedpool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT support/libvds_util_a-lockedpool.o -MD -MP -MF support/$(DEPDIR)/libvds_util_a-lockedpool.Tpo -c -o support/libvds_util_a-lockedpool.o `test -f 'support/lockedpool.cpp' || echo '$(srcdir)/'`support/lockedpool.cpp
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libvds_util_a-lockedpool.Tpo support/$(DEPDIR)/libvds_util_a-lockedpool.Po
#	$(AM_V_CXX)source='support/lockedpool.cpp' object='support/libvds_util_a-lockedpool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o support/libvds_util_a-lockedpool.o `test -f 'support/lockedpool.cpp' || echo '$(srcdir)/'`support/lockedpool.cpp

support/libvds_util_a-lockedpool.obj: support/lockedpool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT support/libvds_util_a-lockedpool.obj -MD -MP -MF support/$(DEPDIR)/libvds_util_a-lockedpool.Tpo -c -o support/libvds_util_a-lockedpool.obj `if test -f 'support/lockedpool.cpp'; then $(CYGPATH_W) 'support/lockedpool.cpp'; else $(CYGPATH_W) '$(srcdir)/support/lockedpool.cpp'; fi`
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libvds_util_a-lockedpool.Tpo support/$(DEPDIR)/libvds_util_a-lockedpool.Po
#	$(AM_V_CXX)source='support/lockedpool.cpp' object='support/libvds_util_a-lockedpool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o support/libvds_util_a-lockedpool.obj `if test -f 'support/lockedpool.cpp'; then $(CYGPATH_W) 'support/lockedpool.cpp'; else $(CYGPATH_W) '$(srcdir)/support/lockedpool.cpp'; fi`

libvds_util_a-chainparamsbase.o: chainparamsbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_util_a-chainparamsbase.o -MD -MP -MF $(DEPDIR)/libvds_util_a-chainparamsbase.Tpo -c -o libvds_util_a-chainparamsbase.o `test -f 'chainparamsbase.cpp' || echo '$(srcdir)/'`chainparamsbase.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_util_a-chainparamsbase.Tpo $(DEPDIR)/libvds_util_a-chainparamsbase.Po
#	$(AM_V_CXX)source='chainparamsbase.cpp' object='libvds_util_a-chainparamsbase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_util_a-chainparamsbase.o `test -f 'chainparamsbase.cpp' || echo '$(srcdir)/'`chainparamsbase.cpp

libvds_util_a-chainparamsbase.obj: chainparamsbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_util_a-chainparamsbase.obj -MD -MP -MF $(DEPDIR)/libvds_util_a-chainparamsbase.Tpo -c -o libvds_util_a-chainparamsbase.obj `if test -f 'chainparamsbase.cpp'; then $(CYGPATH_W) 'chainparamsbase.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparamsbase.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_util_a-chainparamsbase.Tpo $(DEPDIR)/libvds_util_a-chainparamsbase.Po
#	$(AM_V_CXX)source='chainparamsbase.cpp' object='libvds_util_a-chainparamsbase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_util_a-chainparamsbase.obj `if test -f 'chainparamsbase.cpp'; then $(CYGPATH_W) 'chainparamsbase.cpp'; else $(CYGPATH_W) '$(srcdir)/chainparamsbase.cpp'; fi`

libvds_util_a-clientversion.o: clientversion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_util_a-clientversion.o -MD -MP -MF $(DEPDIR)/libvds_util_a-clientversion.Tpo -c -o libvds_util_a-clientversion.o `test -f 'clientversion.cpp' || echo '$(srcdir)/'`clientversion.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_util_a-clientversion.Tpo $(DEPDIR)/libvds_util_a-clientversion.Po
#	$(AM_V_CXX)source='clientversion.cpp' object='libvds_util_a-clientversion.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_util_a-clientversion.o `test -f 'clientversion.cpp' || echo '$(srcdir)/'`clientversion.cpp

libvds_util_a-clientversion.obj: clientversion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_util_a-clientversion.obj -MD -MP -MF $(DEPDIR)/libvds_util_a-clientversion.Tpo -c -o libvds_util_a-clientversion.obj `if test -f 'clientversion.cpp'; then $(CYGPATH_W) 'clientversion.cpp'; else $(CYGPATH_W) '$(srcdir)/clientversion.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_util_a-clientversion.Tpo $(DEPDIR)/libvds_util_a-clientversion.Po
#	$(AM_V_CXX)source='clientversion.cpp' object='libvds_util_a-clientversion.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_util_a-clientversion.obj `if test -f 'clientversion.cpp'; then $(CYGPATH_W) 'clientversion.cpp'; else $(CYGPATH_W) '$(srcdir)/clientversion.cpp'; fi`

compat/libvds_util_a-glibc_sanity.o: compat/glibc_sanity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/libvds_util_a-glibc_sanity.o -MD -MP -MF compat/$(DEPDIR)/libvds_util_a-glibc_sanity.Tpo -c -o compat/libvds_util_a-glibc_sanity.o `test -f 'compat/glibc_sanity.cpp' || echo '$(srcdir)/'`compat/glibc_sanity.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libvds_util_a-glibc_sanity.Tpo compat/$(DEPDIR)/libvds_util_a-glibc_sanity.Po
#	$(AM_V_CXX)source='compat/glibc_sanity.cpp' object='compat/libvds_util_a-glibc_sanity.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/libvds_util_a-glibc_sanity.o `test -f 'compat/glibc_sanity.cpp' || echo '$(srcdir)/'`compat/glibc_sanity.cpp

compat/libvds_util_a-glibc_sanity.obj: compat/glibc_sanity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/libvds_util_a-glibc_sanity.obj -MD -MP -MF compat/$(DEPDIR)/libvds_util_a-glibc_sanity.Tpo -c -o compat/libvds_util_a-glibc_sanity.obj `if test -f 'compat/glibc_sanity.cpp'; then $(CYGPATH_W) 'compat/glibc_sanity.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_sanity.cpp'; fi`
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libvds_util_a-glibc_sanity.Tpo compat/$(DEPDIR)/libvds_util_a-glibc_sanity.Po
#	$(AM_V_CXX)source='compat/glibc_sanity.cpp' object='compat/libvds_util_a-glibc_sanity.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/libvds_util_a-glibc_sanity.obj `if test -f 'compat/glibc_sanity.cpp'; then $(CYGPATH_W) 'compat/glibc_sanity.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_sanity.cpp'; fi`

compat/libvds_util_a-glibcxx_sanity.o: compat/glibcxx_sanity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/libvds_util_a-glibcxx_sanity.o -MD -MP -MF compat/$(DEPDIR)/libvds_util_a-glibcxx_sanity.Tpo -c -o compat/libvds_util_a-glibcxx_sanity.o `test -f 'compat/glibcxx_sanity.cpp' || echo '$(srcdir)/'`compat/glibcxx_sanity.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libvds_util_a-glibcxx_sanity.Tpo compat/$(DEPDIR)/libvds_util_a-glibcxx_sanity.Po
#	$(AM_V_CXX)source='compat/glibcxx_sanity.cpp' object='compat/libvds_util_a-glibcxx_sanity.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/libvds_util_a-glibcxx_sanity.o `test -f 'compat/glibcxx_sanity.cpp' || echo '$(srcdir)/'`compat/glibcxx_sanity.cpp

compat/libvds_util_a-glibcxx_sanity.obj: compat/glibcxx_sanity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/libvds_util_a-glibcxx_sanity.obj -MD -MP -MF compat/$(DEPDIR)/libvds_util_a-glibcxx_sanity.Tpo -c -o compat/libvds_util_a-glibcxx_sanity.obj `if test -f 'compat/glibcxx_sanity.cpp'; then $(CYGPATH_W) 'compat/glibcxx_sanity.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibcxx_sanity.cpp'; fi`
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libvds_util_a-glibcxx_sanity.Tpo compat/$(DEPDIR)/libvds_util_a-glibcxx_sanity.Po
#	$(AM_V_CXX)source='compat/glibcxx_sanity.cpp' object='compat/libvds_util_a-glibcxx_sanity.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/libvds_util_a-glibcxx_sanity.obj `if test -f 'compat/glibcxx_sanity.cpp'; then $(CYGPATH_W) 'compat/glibcxx_sanity.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibcxx_sanity.cpp'; fi`

compat/libvds_util_a-strnlen.o: compat/strnlen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/libvds_util_a-strnlen.o -MD -MP -MF compat/$(DEPDIR)/libvds_util_a-strnlen.Tpo -c -o compat/libvds_util_a-strnlen.o `test -f 'compat/strnlen.cpp' || echo '$(srcdir)/'`compat/strnlen.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libvds_util_a-strnlen.Tpo compat/$(DEPDIR)/libvds_util_a-strnlen.Po
#	$(AM_V_CXX)source='compat/strnlen.cpp' object='compat/libvds_util_a-strnlen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/libvds_util_a-strnlen.o `test -f 'compat/strnlen.cpp' || echo '$(srcdir)/'`compat/strnlen.cpp

compat/libvds_util_a-strnlen.obj: compat/strnlen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/libvds_util_a-strnlen.obj -MD -MP -MF compat/$(DEPDIR)/libvds_util_a-strnlen.Tpo -c -o compat/libvds_util_a-strnlen.obj `if test -f 'compat/strnlen.cpp'; then $(CYGPATH_W) 'compat/strnlen.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/strnlen.cpp'; fi`
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libvds_util_a-strnlen.Tpo compat/$(DEPDIR)/libvds_util_a-strnlen.Po
#	$(AM_V_CXX)source='compat/strnlen.cpp' object='compat/libvds_util_a-strnlen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/libvds_util_a-strnlen.obj `if test -f 'compat/strnlen.cpp'; then $(CYGPATH_W) 'compat/strnlen.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/strnlen.cpp'; fi`

libvds_util_a-fs.o: fs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_util_a-fs.o -MD -MP -MF $(DEPDIR)/libvds_util_a-fs.Tpo -c -o libvds_util_a-fs.o `test -f 'fs.cpp' || echo '$(srcdir)/'`fs.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_util_a-fs.Tpo $(DEPDIR)/libvds_util_a-fs.Po
#	$(AM_V_CXX)source='fs.cpp' object='libvds_util_a-fs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_util_a-fs.o `test -f 'fs.cpp' || echo '$(srcdir)/'`fs.cpp

libvds_util_a-fs.obj: fs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_util_a-fs.obj -MD -MP -MF $(DEPDIR)/libvds_util_a-fs.Tpo -c -o libvds_util_a-fs.obj `if test -f 'fs.cpp'; then $(CYGPATH_W) 'fs.cpp'; else $(CYGPATH_W) '$(srcdir)/fs.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_util_a-fs.Tpo $(DEPDIR)/libvds_util_a-fs.Po
#	$(AM_V_CXX)source='fs.cpp' object='libvds_util_a-fs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_util_a-fs.obj `if test -f 'fs.cpp'; then $(CYGPATH_W) 'fs.cpp'; else $(CYGPATH_W) '$(srcdir)/fs.cpp'; fi`

libvds_util_a-random.o: random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_util_a-random.o -MD -MP -MF $(DEPDIR)/libvds_util_a-random.Tpo -c -o libvds_util_a-random.o `test -f 'random.cpp' || echo '$(srcdir)/'`random.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_util_a-random.Tpo $(DEPDIR)/libvds_util_a-random.Po
#	$(AM_V_CXX)source='random.cpp' object='libvds_util_a-random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_util_a-random.o `test -f 'random.cpp' || echo '$(srcdir)/'`random.cpp

libvds_util_a-random.obj: random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_util_a-random.obj -MD -MP -MF $(DEPDIR)/libvds_util_a-random.Tpo -c -o libvds_util_a-random.obj `if test -f 'random.cpp'; then $(CYGPATH_W) 'random.cpp'; else $(CYGPATH_W) '$(srcdir)/random.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_util_a-random.Tpo $(DEPDIR)/libvds_util_a-random.Po
#	$(AM_V_CXX)source='random.cpp' object='libvds_util_a-random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_util_a-random.obj `if test -f 'random.cpp'; then $(CYGPATH_W) 'random.cpp'; else $(CYGPATH_W) '$(srcdir)/random.cpp'; fi`

rpc/libvds_util_a-protocol.o: rpc/protocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/libvds_util_a-protocol.o -MD -MP -MF rpc/$(DEPDIR)/libvds_util_a-protocol.Tpo -c -o rpc/libvds_util_a-protocol.o `test -f 'rpc/protocol.cpp' || echo '$(srcdir)/'`rpc/protocol.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libvds_util_a-protocol.Tpo rpc/$(DEPDIR)/libvds_util_a-protocol.Po
#	$(AM_V_CXX)source='rpc/protocol.cpp' object='rpc/libvds_util_a-protocol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libvds_util_a-protocol.o `test -f 'rpc/protocol.cpp' || echo '$(srcdir)/'`rpc/protocol.cpp

rpc/libvds_util_a-protocol.obj: rpc/protocol.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/libvds_util_a-protocol.obj -MD -MP -MF rpc/$(DEPDIR)/libvds_util_a-protocol.Tpo -c -o rpc/libvds_util_a-protocol.obj `if test -f 'rpc/protocol.cpp'; then $(CYGPATH_W) 'rpc/protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/protocol.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libvds_util_a-protocol.Tpo rpc/$(DEPDIR)/libvds_util_a-protocol.Po
#	$(AM_V_CXX)source='rpc/protocol.cpp' object='rpc/libvds_util_a-protocol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libvds_util_a-protocol.obj `if test -f 'rpc/protocol.cpp'; then $(CYGPATH_W) 'rpc/protocol.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/protocol.cpp'; fi`

support/libvds_util_a-cleanse.o: support/cleanse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT support/libvds_util_a-cleanse.o -MD -MP -MF support/$(DEPDIR)/libvds_util_a-cleanse.Tpo -c -o support/libvds_util_a-cleanse.o `test -f 'support/cleanse.cpp' || echo '$(srcdir)/'`support/cleanse.cpp
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libvds_util_a-cleanse.Tpo support/$(DEPDIR)/libvds_util_a-cleanse.Po
#	$(AM_V_CXX)source='support/cleanse.cpp' object='support/libvds_util_a-cleanse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o support/libvds_util_a-cleanse.o `test -f 'support/cleanse.cpp' || echo '$(srcdir)/'`support/cleanse.cpp

support/libvds_util_a-cleanse.obj: support/cleanse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT support/libvds_util_a-cleanse.obj -MD -MP -MF support/$(DEPDIR)/libvds_util_a-cleanse.Tpo -c -o support/libvds_util_a-cleanse.obj `if test -f 'support/cleanse.cpp'; then $(CYGPATH_W) 'support/cleanse.cpp'; else $(CYGPATH_W) '$(srcdir)/support/cleanse.cpp'; fi`
	$(AM_V_at)$(am__mv) support/$(DEPDIR)/libvds_util_a-cleanse.Tpo support/$(DEPDIR)/libvds_util_a-cleanse.Po
#	$(AM_V_CXX)source='support/cleanse.cpp' object='support/libvds_util_a-cleanse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o support/libvds_util_a-cleanse.obj `if test -f 'support/cleanse.cpp'; then $(CYGPATH_W) 'support/cleanse.cpp'; else $(CYGPATH_W) '$(srcdir)/support/cleanse.cpp'; fi`

libvds_util_a-sync.o: sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_util_a-sync.o -MD -MP -MF $(DEPDIR)/libvds_util_a-sync.Tpo -c -o libvds_util_a-sync.o `test -f 'sync.cpp' || echo '$(srcdir)/'`sync.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_util_a-sync.Tpo $(DEPDIR)/libvds_util_a-sync.Po
#	$(AM_V_CXX)source='sync.cpp' object='libvds_util_a-sync.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_util_a-sync.o `test -f 'sync.cpp' || echo '$(srcdir)/'`sync.cpp

libvds_util_a-sync.obj: sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_util_a-sync.obj -MD -MP -MF $(DEPDIR)/libvds_util_a-sync.Tpo -c -o libvds_util_a-sync.obj `if test -f 'sync.cpp'; then $(CYGPATH_W) 'sync.cpp'; else $(CYGPATH_W) '$(srcdir)/sync.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_util_a-sync.Tpo $(DEPDIR)/libvds_util_a-sync.Po
#	$(AM_V_CXX)source='sync.cpp' object='libvds_util_a-sync.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_util_a-sync.obj `if test -f 'sync.cpp'; then $(CYGPATH_W) 'sync.cpp'; else $(CYGPATH_W) '$(srcdir)/sync.cpp'; fi`

libvds_util_a-uint256.o: uint256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_util_a-uint256.o -MD -MP -MF $(DEPDIR)/libvds_util_a-uint256.Tpo -c -o libvds_util_a-uint256.o `test -f 'uint256.cpp' || echo '$(srcdir)/'`uint256.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_util_a-uint256.Tpo $(DEPDIR)/libvds_util_a-uint256.Po
#	$(AM_V_CXX)source='uint256.cpp' object='libvds_util_a-uint256.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_util_a-uint256.o `test -f 'uint256.cpp' || echo '$(srcdir)/'`uint256.cpp

libvds_util_a-uint256.obj: uint256.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_util_a-uint256.obj -MD -MP -MF $(DEPDIR)/libvds_util_a-uint256.Tpo -c -o libvds_util_a-uint256.obj `if test -f 'uint256.cpp'; then $(CYGPATH_W) 'uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/uint256.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_util_a-uint256.Tpo $(DEPDIR)/libvds_util_a-uint256.Po
#	$(AM_V_CXX)source='uint256.cpp' object='libvds_util_a-uint256.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_util_a-uint256.obj `if test -f 'uint256.cpp'; then $(CYGPATH_W) 'uint256.cpp'; else $(CYGPATH_W) '$(srcdir)/uint256.cpp'; fi`

libvds_util_a-threadinterrupt.o: threadinterrupt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_util_a-threadinterrupt.o -MD -MP -MF $(DEPDIR)/libvds_util_a-threadinterrupt.Tpo -c -o libvds_util_a-threadinterrupt.o `test -f 'threadinterrupt.cpp' || echo '$(srcdir)/'`threadinterrupt.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_util_a-threadinterrupt.Tpo $(DEPDIR)/libvds_util_a-threadinterrupt.Po
#	$(AM_V_CXX)source='threadinterrupt.cpp' object='libvds_util_a-threadinterrupt.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_util_a-threadinterrupt.o `test -f 'threadinterrupt.cpp' || echo '$(srcdir)/'`threadinterrupt.cpp

libvds_util_a-threadinterrupt.obj: threadinterrupt.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_util_a-threadinterrupt.obj -MD -MP -MF $(DEPDIR)/libvds_util_a-threadinterrupt.Tpo -c -o libvds_util_a-threadinterrupt.obj `if test -f 'threadinterrupt.cpp'; then $(CYGPATH_W) 'threadinterrupt.cpp'; else $(CYGPATH_W) '$(srcdir)/threadinterrupt.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_util_a-threadinterrupt.Tpo $(DEPDIR)/libvds_util_a-threadinterrupt.Po
#	$(AM_V_CXX)source='threadinterrupt.cpp' object='libvds_util_a-threadinterrupt.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_util_a-threadinterrupt.obj `if test -f 'threadinterrupt.cpp'; then $(CYGPATH_W) 'threadinterrupt.cpp'; else $(CYGPATH_W) '$(srcdir)/threadinterrupt.cpp'; fi`

libvds_util_a-util.o: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_util_a-util.o -MD -MP -MF $(DEPDIR)/libvds_util_a-util.Tpo -c -o libvds_util_a-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_util_a-util.Tpo $(DEPDIR)/libvds_util_a-util.Po
#	$(AM_V_CXX)source='util.cpp' object='libvds_util_a-util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_util_a-util.o `test -f 'util.cpp' || echo '$(srcdir)/'`util.cpp

libvds_util_a-util.obj: util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_util_a-util.obj -MD -MP -MF $(DEPDIR)/libvds_util_a-util.Tpo -c -o libvds_util_a-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_util_a-util.Tpo $(DEPDIR)/libvds_util_a-util.Po
#	$(AM_V_CXX)source='util.cpp' object='libvds_util_a-util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_util_a-util.obj `if test -f 'util.cpp'; then $(CYGPATH_W) 'util.cpp'; else $(CYGPATH_W) '$(srcdir)/util.cpp'; fi`

libvds_util_a-utilmoneystr.o: utilmoneystr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_util_a-utilmoneystr.o -MD -MP -MF $(DEPDIR)/libvds_util_a-utilmoneystr.Tpo -c -o libvds_util_a-utilmoneystr.o `test -f 'utilmoneystr.cpp' || echo '$(srcdir)/'`utilmoneystr.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_util_a-utilmoneystr.Tpo $(DEPDIR)/libvds_util_a-utilmoneystr.Po
#	$(AM_V_CXX)source='utilmoneystr.cpp' object='libvds_util_a-utilmoneystr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_util_a-utilmoneystr.o `test -f 'utilmoneystr.cpp' || echo '$(srcdir)/'`utilmoneystr.cpp

libvds_util_a-utilmoneystr.obj: utilmoneystr.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_util_a-utilmoneystr.obj -MD -MP -MF $(DEPDIR)/libvds_util_a-utilmoneystr.Tpo -c -o libvds_util_a-utilmoneystr.obj `if test -f 'utilmoneystr.cpp'; then $(CYGPATH_W) 'utilmoneystr.cpp'; else $(CYGPATH_W) '$(srcdir)/utilmoneystr.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_util_a-utilmoneystr.Tpo $(DEPDIR)/libvds_util_a-utilmoneystr.Po
#	$(AM_V_CXX)source='utilmoneystr.cpp' object='libvds_util_a-utilmoneystr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_util_a-utilmoneystr.obj `if test -f 'utilmoneystr.cpp'; then $(CYGPATH_W) 'utilmoneystr.cpp'; else $(CYGPATH_W) '$(srcdir)/utilmoneystr.cpp'; fi`

libvds_util_a-utilstrencodings.o: utilstrencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_util_a-utilstrencodings.o -MD -MP -MF $(DEPDIR)/libvds_util_a-utilstrencodings.Tpo -c -o libvds_util_a-utilstrencodings.o `test -f 'utilstrencodings.cpp' || echo '$(srcdir)/'`utilstrencodings.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_util_a-utilstrencodings.Tpo $(DEPDIR)/libvds_util_a-utilstrencodings.Po
#	$(AM_V_CXX)source='utilstrencodings.cpp' object='libvds_util_a-utilstrencodings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_util_a-utilstrencodings.o `test -f 'utilstrencodings.cpp' || echo '$(srcdir)/'`utilstrencodings.cpp

libvds_util_a-utilstrencodings.obj: utilstrencodings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_util_a-utilstrencodings.obj -MD -MP -MF $(DEPDIR)/libvds_util_a-utilstrencodings.Tpo -c -o libvds_util_a-utilstrencodings.obj `if test -f 'utilstrencodings.cpp'; then $(CYGPATH_W) 'utilstrencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/utilstrencodings.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_util_a-utilstrencodings.Tpo $(DEPDIR)/libvds_util_a-utilstrencodings.Po
#	$(AM_V_CXX)source='utilstrencodings.cpp' object='libvds_util_a-utilstrencodings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_util_a-utilstrencodings.obj `if test -f 'utilstrencodings.cpp'; then $(CYGPATH_W) 'utilstrencodings.cpp'; else $(CYGPATH_W) '$(srcdir)/utilstrencodings.cpp'; fi`

libvds_util_a-utiltime.o: utiltime.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_util_a-utiltime.o -MD -MP -MF $(DEPDIR)/libvds_util_a-utiltime.Tpo -c -o libvds_util_a-utiltime.o `test -f 'utiltime.cpp' || echo '$(srcdir)/'`utiltime.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_util_a-utiltime.Tpo $(DEPDIR)/libvds_util_a-utiltime.Po
#	$(AM_V_CXX)source='utiltime.cpp' object='libvds_util_a-utiltime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_util_a-utiltime.o `test -f 'utiltime.cpp' || echo '$(srcdir)/'`utiltime.cpp

libvds_util_a-utiltime.obj: utiltime.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_util_a-utiltime.obj -MD -MP -MF $(DEPDIR)/libvds_util_a-utiltime.Tpo -c -o libvds_util_a-utiltime.obj `if test -f 'utiltime.cpp'; then $(CYGPATH_W) 'utiltime.cpp'; else $(CYGPATH_W) '$(srcdir)/utiltime.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_util_a-utiltime.Tpo $(DEPDIR)/libvds_util_a-utiltime.Po
#	$(AM_V_CXX)source='utiltime.cpp' object='libvds_util_a-utiltime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_util_a-utiltime.obj `if test -f 'utiltime.cpp'; then $(CYGPATH_W) 'utiltime.cpp'; else $(CYGPATH_W) '$(srcdir)/utiltime.cpp'; fi`

compat/libvds_util_a-glibc_compat.o: compat/glibc_compat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/libvds_util_a-glibc_compat.o -MD -MP -MF compat/$(DEPDIR)/libvds_util_a-glibc_compat.Tpo -c -o compat/libvds_util_a-glibc_compat.o `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libvds_util_a-glibc_compat.Tpo compat/$(DEPDIR)/libvds_util_a-glibc_compat.Po
#	$(AM_V_CXX)source='compat/glibc_compat.cpp' object='compat/libvds_util_a-glibc_compat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/libvds_util_a-glibc_compat.o `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp

compat/libvds_util_a-glibc_compat.obj: compat/glibc_compat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/libvds_util_a-glibc_compat.obj -MD -MP -MF compat/$(DEPDIR)/libvds_util_a-glibc_compat.Tpo -c -o compat/libvds_util_a-glibc_compat.obj `if test -f 'compat/glibc_compat.cpp'; then $(CYGPATH_W) 'compat/glibc_compat.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_compat.cpp'; fi`
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libvds_util_a-glibc_compat.Tpo compat/$(DEPDIR)/libvds_util_a-glibc_compat.Po
#	$(AM_V_CXX)source='compat/glibc_compat.cpp' object='compat/libvds_util_a-glibc_compat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_util_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/libvds_util_a-glibc_compat.obj `if test -f 'compat/glibc_compat.cpp'; then $(CYGPATH_W) 'compat/glibc_compat.cpp'; else $(CYGPATH_W) '$(srcdir)/compat/glibc_compat.cpp'; fi`

libvds_wallet_a-ui_interface.o: ui_interface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-ui_interface.o -MD -MP -MF $(DEPDIR)/libvds_wallet_a-ui_interface.Tpo -c -o libvds_wallet_a-ui_interface.o `test -f 'ui_interface.cpp' || echo '$(srcdir)/'`ui_interface.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-ui_interface.Tpo $(DEPDIR)/libvds_wallet_a-ui_interface.Po
#	$(AM_V_CXX)source='ui_interface.cpp' object='libvds_wallet_a-ui_interface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-ui_interface.o `test -f 'ui_interface.cpp' || echo '$(srcdir)/'`ui_interface.cpp

libvds_wallet_a-ui_interface.obj: ui_interface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-ui_interface.obj -MD -MP -MF $(DEPDIR)/libvds_wallet_a-ui_interface.Tpo -c -o libvds_wallet_a-ui_interface.obj `if test -f 'ui_interface.cpp'; then $(CYGPATH_W) 'ui_interface.cpp'; else $(CYGPATH_W) '$(srcdir)/ui_interface.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-ui_interface.Tpo $(DEPDIR)/libvds_wallet_a-ui_interface.Po
#	$(AM_V_CXX)source='ui_interface.cpp' object='libvds_wallet_a-ui_interface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-ui_interface.obj `if test -f 'ui_interface.cpp'; then $(CYGPATH_W) 'ui_interface.cpp'; else $(CYGPATH_W) '$(srcdir)/ui_interface.cpp'; fi`

libvds_wallet_a-zcbenchmarks.o: zcbenchmarks.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-zcbenchmarks.o -MD -MP -MF $(DEPDIR)/libvds_wallet_a-zcbenchmarks.Tpo -c -o libvds_wallet_a-zcbenchmarks.o `test -f 'zcbenchmarks.cpp' || echo '$(srcdir)/'`zcbenchmarks.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-zcbenchmarks.Tpo $(DEPDIR)/libvds_wallet_a-zcbenchmarks.Po
#	$(AM_V_CXX)source='zcbenchmarks.cpp' object='libvds_wallet_a-zcbenchmarks.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-zcbenchmarks.o `test -f 'zcbenchmarks.cpp' || echo '$(srcdir)/'`zcbenchmarks.cpp

libvds_wallet_a-zcbenchmarks.obj: zcbenchmarks.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-zcbenchmarks.obj -MD -MP -MF $(DEPDIR)/libvds_wallet_a-zcbenchmarks.Tpo -c -o libvds_wallet_a-zcbenchmarks.obj `if test -f 'zcbenchmarks.cpp'; then $(CYGPATH_W) 'zcbenchmarks.cpp'; else $(CYGPATH_W) '$(srcdir)/zcbenchmarks.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-zcbenchmarks.Tpo $(DEPDIR)/libvds_wallet_a-zcbenchmarks.Po
#	$(AM_V_CXX)source='zcbenchmarks.cpp' object='libvds_wallet_a-zcbenchmarks.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-zcbenchmarks.obj `if test -f 'zcbenchmarks.cpp'; then $(CYGPATH_W) 'zcbenchmarks.cpp'; else $(CYGPATH_W) '$(srcdir)/zcbenchmarks.cpp'; fi`

libvds_wallet_a-activemasternode.o: activemasternode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-activemasternode.o -MD -MP -MF $(DEPDIR)/libvds_wallet_a-activemasternode.Tpo -c -o libvds_wallet_a-activemasternode.o `test -f 'activemasternode.cpp' || echo '$(srcdir)/'`activemasternode.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-activemasternode.Tpo $(DEPDIR)/libvds_wallet_a-activemasternode.Po
#	$(AM_V_CXX)source='activemasternode.cpp' object='libvds_wallet_a-activemasternode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-activemasternode.o `test -f 'activemasternode.cpp' || echo '$(srcdir)/'`activemasternode.cpp

libvds_wallet_a-activemasternode.obj: activemasternode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-activemasternode.obj -MD -MP -MF $(DEPDIR)/libvds_wallet_a-activemasternode.Tpo -c -o libvds_wallet_a-activemasternode.obj `if test -f 'activemasternode.cpp'; then $(CYGPATH_W) 'activemasternode.cpp'; else $(CYGPATH_W) '$(srcdir)/activemasternode.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-activemasternode.Tpo $(DEPDIR)/libvds_wallet_a-activemasternode.Po
#	$(AM_V_CXX)source='activemasternode.cpp' object='libvds_wallet_a-activemasternode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-activemasternode.obj `if test -f 'activemasternode.cpp'; then $(CYGPATH_W) 'activemasternode.cpp'; else $(CYGPATH_W) '$(srcdir)/activemasternode.cpp'; fi`

libvds_wallet_a-contract.o: contract.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-contract.o -MD -MP -MF $(DEPDIR)/libvds_wallet_a-contract.Tpo -c -o libvds_wallet_a-contract.o `test -f 'contract.cpp' || echo '$(srcdir)/'`contract.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-contract.Tpo $(DEPDIR)/libvds_wallet_a-contract.Po
#	$(AM_V_CXX)source='contract.cpp' object='libvds_wallet_a-contract.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-contract.o `test -f 'contract.cpp' || echo '$(srcdir)/'`contract.cpp

libvds_wallet_a-contract.obj: contract.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-contract.obj -MD -MP -MF $(DEPDIR)/libvds_wallet_a-contract.Tpo -c -o libvds_wallet_a-contract.obj `if test -f 'contract.cpp'; then $(CYGPATH_W) 'contract.cpp'; else $(CYGPATH_W) '$(srcdir)/contract.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-contract.Tpo $(DEPDIR)/libvds_wallet_a-contract.Po
#	$(AM_V_CXX)source='contract.cpp' object='libvds_wallet_a-contract.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-contract.obj `if test -f 'contract.cpp'; then $(CYGPATH_W) 'contract.cpp'; else $(CYGPATH_W) '$(srcdir)/contract.cpp'; fi`

libvds_wallet_a-contractabi.o: contractabi.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-contractabi.o -MD -MP -MF $(DEPDIR)/libvds_wallet_a-contractabi.Tpo -c -o libvds_wallet_a-contractabi.o `test -f 'contractabi.cpp' || echo '$(srcdir)/'`contractabi.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-contractabi.Tpo $(DEPDIR)/libvds_wallet_a-contractabi.Po
#	$(AM_V_CXX)source='contractabi.cpp' object='libvds_wallet_a-contractabi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-contractabi.o `test -f 'contractabi.cpp' || echo '$(srcdir)/'`contractabi.cpp

libvds_wallet_a-contractabi.obj: contractabi.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-contractabi.obj -MD -MP -MF $(DEPDIR)/libvds_wallet_a-contractabi.Tpo -c -o libvds_wallet_a-contractabi.obj `if test -f 'contractabi.cpp'; then $(CYGPATH_W) 'contractabi.cpp'; else $(CYGPATH_W) '$(srcdir)/contractabi.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-contractabi.Tpo $(DEPDIR)/libvds_wallet_a-contractabi.Po
#	$(AM_V_CXX)source='contractabi.cpp' object='libvds_wallet_a-contractabi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-contractabi.obj `if test -f 'contractabi.cpp'; then $(CYGPATH_W) 'contractabi.cpp'; else $(CYGPATH_W) '$(srcdir)/contractabi.cpp'; fi`

libvds_wallet_a-contractman.o: contractman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-contractman.o -MD -MP -MF $(DEPDIR)/libvds_wallet_a-contractman.Tpo -c -o libvds_wallet_a-contractman.o `test -f 'contractman.cpp' || echo '$(srcdir)/'`contractman.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-contractman.Tpo $(DEPDIR)/libvds_wallet_a-contractman.Po
#	$(AM_V_CXX)source='contractman.cpp' object='libvds_wallet_a-contractman.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-contractman.o `test -f 'contractman.cpp' || echo '$(srcdir)/'`contractman.cpp

libvds_wallet_a-contractman.obj: contractman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-contractman.obj -MD -MP -MF $(DEPDIR)/libvds_wallet_a-contractman.Tpo -c -o libvds_wallet_a-contractman.obj `if test -f 'contractman.cpp'; then $(CYGPATH_W) 'contractman.cpp'; else $(CYGPATH_W) '$(srcdir)/contractman.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-contractman.Tpo $(DEPDIR)/libvds_wallet_a-contractman.Po
#	$(AM_V_CXX)source='contractman.cpp' object='libvds_wallet_a-contractman.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-contractman.obj `if test -f 'contractman.cpp'; then $(CYGPATH_W) 'contractman.cpp'; else $(CYGPATH_W) '$(srcdir)/contractman.cpp'; fi`

libvds_wallet_a-masternode.o: masternode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-masternode.o -MD -MP -MF $(DEPDIR)/libvds_wallet_a-masternode.Tpo -c -o libvds_wallet_a-masternode.o `test -f 'masternode.cpp' || echo '$(srcdir)/'`masternode.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-masternode.Tpo $(DEPDIR)/libvds_wallet_a-masternode.Po
#	$(AM_V_CXX)source='masternode.cpp' object='libvds_wallet_a-masternode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-masternode.o `test -f 'masternode.cpp' || echo '$(srcdir)/'`masternode.cpp

libvds_wallet_a-masternode.obj: masternode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-masternode.obj -MD -MP -MF $(DEPDIR)/libvds_wallet_a-masternode.Tpo -c -o libvds_wallet_a-masternode.obj `if test -f 'masternode.cpp'; then $(CYGPATH_W) 'masternode.cpp'; else $(CYGPATH_W) '$(srcdir)/masternode.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-masternode.Tpo $(DEPDIR)/libvds_wallet_a-masternode.Po
#	$(AM_V_CXX)source='masternode.cpp' object='libvds_wallet_a-masternode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-masternode.obj `if test -f 'masternode.cpp'; then $(CYGPATH_W) 'masternode.cpp'; else $(CYGPATH_W) '$(srcdir)/masternode.cpp'; fi`

libvds_wallet_a-masternodeman.o: masternodeman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-masternodeman.o -MD -MP -MF $(DEPDIR)/libvds_wallet_a-masternodeman.Tpo -c -o libvds_wallet_a-masternodeman.o `test -f 'masternodeman.cpp' || echo '$(srcdir)/'`masternodeman.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-masternodeman.Tpo $(DEPDIR)/libvds_wallet_a-masternodeman.Po
#	$(AM_V_CXX)source='masternodeman.cpp' object='libvds_wallet_a-masternodeman.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-masternodeman.o `test -f 'masternodeman.cpp' || echo '$(srcdir)/'`masternodeman.cpp

libvds_wallet_a-masternodeman.obj: masternodeman.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-masternodeman.obj -MD -MP -MF $(DEPDIR)/libvds_wallet_a-masternodeman.Tpo -c -o libvds_wallet_a-masternodeman.obj `if test -f 'masternodeman.cpp'; then $(CYGPATH_W) 'masternodeman.cpp'; else $(CYGPATH_W) '$(srcdir)/masternodeman.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-masternodeman.Tpo $(DEPDIR)/libvds_wallet_a-masternodeman.Po
#	$(AM_V_CXX)source='masternodeman.cpp' object='libvds_wallet_a-masternodeman.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-masternodeman.obj `if test -f 'masternodeman.cpp'; then $(CYGPATH_W) 'masternodeman.cpp'; else $(CYGPATH_W) '$(srcdir)/masternodeman.cpp'; fi`

libvds_wallet_a-masternodestatistic.o: masternodestatistic.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-masternodestatistic.o -MD -MP -MF $(DEPDIR)/libvds_wallet_a-masternodestatistic.Tpo -c -o libvds_wallet_a-masternodestatistic.o `test -f 'masternodestatistic.cpp' || echo '$(srcdir)/'`masternodestatistic.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-masternodestatistic.Tpo $(DEPDIR)/libvds_wallet_a-masternodestatistic.Po
#	$(AM_V_CXX)source='masternodestatistic.cpp' object='libvds_wallet_a-masternodestatistic.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-masternodestatistic.o `test -f 'masternodestatistic.cpp' || echo '$(srcdir)/'`masternodestatistic.cpp

libvds_wallet_a-masternodestatistic.obj: masternodestatistic.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-masternodestatistic.obj -MD -MP -MF $(DEPDIR)/libvds_wallet_a-masternodestatistic.Tpo -c -o libvds_wallet_a-masternodestatistic.obj `if test -f 'masternodestatistic.cpp'; then $(CYGPATH_W) 'masternodestatistic.cpp'; else $(CYGPATH_W) '$(srcdir)/masternodestatistic.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-masternodestatistic.Tpo $(DEPDIR)/libvds_wallet_a-masternodestatistic.Po
#	$(AM_V_CXX)source='masternodestatistic.cpp' object='libvds_wallet_a-masternodestatistic.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-masternodestatistic.obj `if test -f 'masternodestatistic.cpp'; then $(CYGPATH_W) 'masternodestatistic.cpp'; else $(CYGPATH_W) '$(srcdir)/masternodestatistic.cpp'; fi`

libvds_wallet_a-masternodeconfig.o: masternodeconfig.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-masternodeconfig.o -MD -MP -MF $(DEPDIR)/libvds_wallet_a-masternodeconfig.Tpo -c -o libvds_wallet_a-masternodeconfig.o `test -f 'masternodeconfig.cpp' || echo '$(srcdir)/'`masternodeconfig.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-masternodeconfig.Tpo $(DEPDIR)/libvds_wallet_a-masternodeconfig.Po
#	$(AM_V_CXX)source='masternodeconfig.cpp' object='libvds_wallet_a-masternodeconfig.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-masternodeconfig.o `test -f 'masternodeconfig.cpp' || echo '$(srcdir)/'`masternodeconfig.cpp

libvds_wallet_a-masternodeconfig.obj: masternodeconfig.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-masternodeconfig.obj -MD -MP -MF $(DEPDIR)/libvds_wallet_a-masternodeconfig.Tpo -c -o libvds_wallet_a-masternodeconfig.obj `if test -f 'masternodeconfig.cpp'; then $(CYGPATH_W) 'masternodeconfig.cpp'; else $(CYGPATH_W) '$(srcdir)/masternodeconfig.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-masternodeconfig.Tpo $(DEPDIR)/libvds_wallet_a-masternodeconfig.Po
#	$(AM_V_CXX)source='masternodeconfig.cpp' object='libvds_wallet_a-masternodeconfig.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-masternodeconfig.obj `if test -f 'masternodeconfig.cpp'; then $(CYGPATH_W) 'masternodeconfig.cpp'; else $(CYGPATH_W) '$(srcdir)/masternodeconfig.cpp'; fi`

libvds_wallet_a-masternode-sync.o: masternode-sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-masternode-sync.o -MD -MP -MF $(DEPDIR)/libvds_wallet_a-masternode-sync.Tpo -c -o libvds_wallet_a-masternode-sync.o `test -f 'masternode-sync.cpp' || echo '$(srcdir)/'`masternode-sync.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-masternode-sync.Tpo $(DEPDIR)/libvds_wallet_a-masternode-sync.Po
#	$(AM_V_CXX)source='masternode-sync.cpp' object='libvds_wallet_a-masternode-sync.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-masternode-sync.o `test -f 'masternode-sync.cpp' || echo '$(srcdir)/'`masternode-sync.cpp

libvds_wallet_a-masternode-sync.obj: masternode-sync.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-masternode-sync.obj -MD -MP -MF $(DEPDIR)/libvds_wallet_a-masternode-sync.Tpo -c -o libvds_wallet_a-masternode-sync.obj `if test -f 'masternode-sync.cpp'; then $(CYGPATH_W) 'masternode-sync.cpp'; else $(CYGPATH_W) '$(srcdir)/masternode-sync.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-masternode-sync.Tpo $(DEPDIR)/libvds_wallet_a-masternode-sync.Po
#	$(AM_V_CXX)source='masternode-sync.cpp' object='libvds_wallet_a-masternode-sync.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-masternode-sync.obj `if test -f 'masternode-sync.cpp'; then $(CYGPATH_W) 'masternode-sync.cpp'; else $(CYGPATH_W) '$(srcdir)/masternode-sync.cpp'; fi`

libvds_wallet_a-masternode-payments.o: masternode-payments.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-masternode-payments.o -MD -MP -MF $(DEPDIR)/libvds_wallet_a-masternode-payments.Tpo -c -o libvds_wallet_a-masternode-payments.o `test -f 'masternode-payments.cpp' || echo '$(srcdir)/'`masternode-payments.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-masternode-payments.Tpo $(DEPDIR)/libvds_wallet_a-masternode-payments.Po
#	$(AM_V_CXX)source='masternode-payments.cpp' object='libvds_wallet_a-masternode-payments.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-masternode-payments.o `test -f 'masternode-payments.cpp' || echo '$(srcdir)/'`masternode-payments.cpp

libvds_wallet_a-masternode-payments.obj: masternode-payments.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-masternode-payments.obj -MD -MP -MF $(DEPDIR)/libvds_wallet_a-masternode-payments.Tpo -c -o libvds_wallet_a-masternode-payments.obj `if test -f 'masternode-payments.cpp'; then $(CYGPATH_W) 'masternode-payments.cpp'; else $(CYGPATH_W) '$(srcdir)/masternode-payments.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-masternode-payments.Tpo $(DEPDIR)/libvds_wallet_a-masternode-payments.Po
#	$(AM_V_CXX)source='masternode-payments.cpp' object='libvds_wallet_a-masternode-payments.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-masternode-payments.obj `if test -f 'masternode-payments.cpp'; then $(CYGPATH_W) 'masternode-payments.cpp'; else $(CYGPATH_W) '$(srcdir)/masternode-payments.cpp'; fi`

libvds_wallet_a-base58.o: base58.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-base58.o -MD -MP -MF $(DEPDIR)/libvds_wallet_a-base58.Tpo -c -o libvds_wallet_a-base58.o `test -f 'base58.cpp' || echo '$(srcdir)/'`base58.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-base58.Tpo $(DEPDIR)/libvds_wallet_a-base58.Po
#	$(AM_V_CXX)source='base58.cpp' object='libvds_wallet_a-base58.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-base58.o `test -f 'base58.cpp' || echo '$(srcdir)/'`base58.cpp

libvds_wallet_a-base58.obj: base58.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-base58.obj -MD -MP -MF $(DEPDIR)/libvds_wallet_a-base58.Tpo -c -o libvds_wallet_a-base58.obj `if test -f 'base58.cpp'; then $(CYGPATH_W) 'base58.cpp'; else $(CYGPATH_W) '$(srcdir)/base58.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-base58.Tpo $(DEPDIR)/libvds_wallet_a-base58.Po
#	$(AM_V_CXX)source='base58.cpp' object='libvds_wallet_a-base58.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-base58.obj `if test -f 'base58.cpp'; then $(CYGPATH_W) 'base58.cpp'; else $(CYGPATH_W) '$(srcdir)/base58.cpp'; fi`

libvds_wallet_a-bip38_key.o: bip38_key.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-bip38_key.o -MD -MP -MF $(DEPDIR)/libvds_wallet_a-bip38_key.Tpo -c -o libvds_wallet_a-bip38_key.o `test -f 'bip38_key.cpp' || echo '$(srcdir)/'`bip38_key.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-bip38_key.Tpo $(DEPDIR)/libvds_wallet_a-bip38_key.Po
#	$(AM_V_CXX)source='bip38_key.cpp' object='libvds_wallet_a-bip38_key.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-bip38_key.o `test -f 'bip38_key.cpp' || echo '$(srcdir)/'`bip38_key.cpp

libvds_wallet_a-bip38_key.obj: bip38_key.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-bip38_key.obj -MD -MP -MF $(DEPDIR)/libvds_wallet_a-bip38_key.Tpo -c -o libvds_wallet_a-bip38_key.obj `if test -f 'bip38_key.cpp'; then $(CYGPATH_W) 'bip38_key.cpp'; else $(CYGPATH_W) '$(srcdir)/bip38_key.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-bip38_key.Tpo $(DEPDIR)/libvds_wallet_a-bip38_key.Po
#	$(AM_V_CXX)source='bip38_key.cpp' object='libvds_wallet_a-bip38_key.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-bip38_key.obj `if test -f 'bip38_key.cpp'; then $(CYGPATH_W) 'bip38_key.cpp'; else $(CYGPATH_W) '$(srcdir)/bip38_key.cpp'; fi`

rpc/libvds_wallet_a-blockchain.o: rpc/blockchain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/libvds_wallet_a-blockchain.o -MD -MP -MF rpc/$(DEPDIR)/libvds_wallet_a-blockchain.Tpo -c -o rpc/libvds_wallet_a-blockchain.o `test -f 'rpc/blockchain.cpp' || echo '$(srcdir)/'`rpc/blockchain.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libvds_wallet_a-blockchain.Tpo rpc/$(DEPDIR)/libvds_wallet_a-blockchain.Po
#	$(AM_V_CXX)source='rpc/blockchain.cpp' object='rpc/libvds_wallet_a-blockchain.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libvds_wallet_a-blockchain.o `test -f 'rpc/blockchain.cpp' || echo '$(srcdir)/'`rpc/blockchain.cpp

rpc/libvds_wallet_a-blockchain.obj: rpc/blockchain.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/libvds_wallet_a-blockchain.obj -MD -MP -MF rpc/$(DEPDIR)/libvds_wallet_a-blockchain.Tpo -c -o rpc/libvds_wallet_a-blockchain.obj `if test -f 'rpc/blockchain.cpp'; then $(CYGPATH_W) 'rpc/blockchain.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/blockchain.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libvds_wallet_a-blockchain.Tpo rpc/$(DEPDIR)/libvds_wallet_a-blockchain.Po
#	$(AM_V_CXX)source='rpc/blockchain.cpp' object='rpc/libvds_wallet_a-blockchain.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libvds_wallet_a-blockchain.obj `if test -f 'rpc/blockchain.cpp'; then $(CYGPATH_W) 'rpc/blockchain.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/blockchain.cpp'; fi`

rpc/libvds_wallet_a-misc.o: rpc/misc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/libvds_wallet_a-misc.o -MD -MP -MF rpc/$(DEPDIR)/libvds_wallet_a-misc.Tpo -c -o rpc/libvds_wallet_a-misc.o `test -f 'rpc/misc.cpp' || echo '$(srcdir)/'`rpc/misc.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libvds_wallet_a-misc.Tpo rpc/$(DEPDIR)/libvds_wallet_a-misc.Po
#	$(AM_V_CXX)source='rpc/misc.cpp' object='rpc/libvds_wallet_a-misc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libvds_wallet_a-misc.o `test -f 'rpc/misc.cpp' || echo '$(srcdir)/'`rpc/misc.cpp

rpc/libvds_wallet_a-misc.obj: rpc/misc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/libvds_wallet_a-misc.obj -MD -MP -MF rpc/$(DEPDIR)/libvds_wallet_a-misc.Tpo -c -o rpc/libvds_wallet_a-misc.obj `if test -f 'rpc/misc.cpp'; then $(CYGPATH_W) 'rpc/misc.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/misc.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libvds_wallet_a-misc.Tpo rpc/$(DEPDIR)/libvds_wallet_a-misc.Po
#	$(AM_V_CXX)source='rpc/misc.cpp' object='rpc/libvds_wallet_a-misc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libvds_wallet_a-misc.obj `if test -f 'rpc/misc.cpp'; then $(CYGPATH_W) 'rpc/misc.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/misc.cpp'; fi`

rpc/libvds_wallet_a-masternode.o: rpc/masternode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/libvds_wallet_a-masternode.o -MD -MP -MF rpc/$(DEPDIR)/libvds_wallet_a-masternode.Tpo -c -o rpc/libvds_wallet_a-masternode.o `test -f 'rpc/masternode.cpp' || echo '$(srcdir)/'`rpc/masternode.cpp
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libvds_wallet_a-masternode.Tpo rpc/$(DEPDIR)/libvds_wallet_a-masternode.Po
#	$(AM_V_CXX)source='rpc/masternode.cpp' object='rpc/libvds_wallet_a-masternode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libvds_wallet_a-masternode.o `test -f 'rpc/masternode.cpp' || echo '$(srcdir)/'`rpc/masternode.cpp

rpc/libvds_wallet_a-masternode.obj: rpc/masternode.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rpc/libvds_wallet_a-masternode.obj -MD -MP -MF rpc/$(DEPDIR)/libvds_wallet_a-masternode.Tpo -c -o rpc/libvds_wallet_a-masternode.obj `if test -f 'rpc/masternode.cpp'; then $(CYGPATH_W) 'rpc/masternode.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/masternode.cpp'; fi`
	$(AM_V_at)$(am__mv) rpc/$(DEPDIR)/libvds_wallet_a-masternode.Tpo rpc/$(DEPDIR)/libvds_wallet_a-masternode.Po
#	$(AM_V_CXX)source='rpc/masternode.cpp' object='rpc/libvds_wallet_a-masternode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rpc/libvds_wallet_a-masternode.obj `if test -f 'rpc/masternode.cpp'; then $(CYGPATH_W) 'rpc/masternode.cpp'; else $(CYGPATH_W) '$(srcdir)/rpc/masternode.cpp'; fi`

wallet/libvds_wallet_a-asyncrpcoperation_sendmany.o: wallet/asyncrpcoperation_sendmany.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-asyncrpcoperation_sendmany.o -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-asyncrpcoperation_sendmany.Tpo -c -o wallet/libvds_wallet_a-asyncrpcoperation_sendmany.o `test -f 'wallet/asyncrpcoperation_sendmany.cpp' || echo '$(srcdir)/'`wallet/asyncrpcoperation_sendmany.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-asyncrpcoperation_sendmany.Tpo wallet/$(DEPDIR)/libvds_wallet_a-asyncrpcoperation_sendmany.Po
#	$(AM_V_CXX)source='wallet/asyncrpcoperation_sendmany.cpp' object='wallet/libvds_wallet_a-asyncrpcoperation_sendmany.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-asyncrpcoperation_sendmany.o `test -f 'wallet/asyncrpcoperation_sendmany.cpp' || echo '$(srcdir)/'`wallet/asyncrpcoperation_sendmany.cpp

wallet/libvds_wallet_a-asyncrpcoperation_sendmany.obj: wallet/asyncrpcoperation_sendmany.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-asyncrpcoperation_sendmany.obj -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-asyncrpcoperation_sendmany.Tpo -c -o wallet/libvds_wallet_a-asyncrpcoperation_sendmany.obj `if test -f 'wallet/asyncrpcoperation_sendmany.cpp'; then $(CYGPATH_W) 'wallet/asyncrpcoperation_sendmany.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/asyncrpcoperation_sendmany.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-asyncrpcoperation_sendmany.Tpo wallet/$(DEPDIR)/libvds_wallet_a-asyncrpcoperation_sendmany.Po
#	$(AM_V_CXX)source='wallet/asyncrpcoperation_sendmany.cpp' object='wallet/libvds_wallet_a-asyncrpcoperation_sendmany.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-asyncrpcoperation_sendmany.obj `if test -f 'wallet/asyncrpcoperation_sendmany.cpp'; then $(CYGPATH_W) 'wallet/asyncrpcoperation_sendmany.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/asyncrpcoperation_sendmany.cpp'; fi`

wallet/libvds_wallet_a-asyncrpcoperation_shieldcoinbase.o: wallet/asyncrpcoperation_shieldcoinbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-asyncrpcoperation_shieldcoinbase.o -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-asyncrpcoperation_shieldcoinbase.Tpo -c -o wallet/libvds_wallet_a-asyncrpcoperation_shieldcoinbase.o `test -f 'wallet/asyncrpcoperation_shieldcoinbase.cpp' || echo '$(srcdir)/'`wallet/asyncrpcoperation_shieldcoinbase.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-asyncrpcoperation_shieldcoinbase.Tpo wallet/$(DEPDIR)/libvds_wallet_a-asyncrpcoperation_shieldcoinbase.Po
#	$(AM_V_CXX)source='wallet/asyncrpcoperation_shieldcoinbase.cpp' object='wallet/libvds_wallet_a-asyncrpcoperation_shieldcoinbase.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-asyncrpcoperation_shieldcoinbase.o `test -f 'wallet/asyncrpcoperation_shieldcoinbase.cpp' || echo '$(srcdir)/'`wallet/asyncrpcoperation_shieldcoinbase.cpp

wallet/libvds_wallet_a-asyncrpcoperation_shieldcoinbase.obj: wallet/asyncrpcoperation_shieldcoinbase.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-asyncrpcoperation_shieldcoinbase.obj -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-asyncrpcoperation_shieldcoinbase.Tpo -c -o wallet/libvds_wallet_a-asyncrpcoperation_shieldcoinbase.obj `if test -f 'wallet/asyncrpcoperation_shieldcoinbase.cpp'; then $(CYGPATH_W) 'wallet/asyncrpcoperation_shieldcoinbase.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/asyncrpcoperation_shieldcoinbase.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-asyncrpcoperation_shieldcoinbase.Tpo wallet/$(DEPDIR)/libvds_wallet_a-asyncrpcoperation_shieldcoinbase.Po
#	$(AM_V_CXX)source='wallet/asyncrpcoperation_shieldcoinbase.cpp' object='wallet/libvds_wallet_a-asyncrpcoperation_shieldcoinbase.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-asyncrpcoperation_shieldcoinbase.obj `if test -f 'wallet/asyncrpcoperation_shieldcoinbase.cpp'; then $(CYGPATH_W) 'wallet/asyncrpcoperation_shieldcoinbase.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/asyncrpcoperation_shieldcoinbase.cpp'; fi`

wallet/libvds_wallet_a-bip39_mnemonic.o: wallet/bip39_mnemonic.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-bip39_mnemonic.o -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-bip39_mnemonic.Tpo -c -o wallet/libvds_wallet_a-bip39_mnemonic.o `test -f 'wallet/bip39_mnemonic.cpp' || echo '$(srcdir)/'`wallet/bip39_mnemonic.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-bip39_mnemonic.Tpo wallet/$(DEPDIR)/libvds_wallet_a-bip39_mnemonic.Po
#	$(AM_V_CXX)source='wallet/bip39_mnemonic.cpp' object='wallet/libvds_wallet_a-bip39_mnemonic.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-bip39_mnemonic.o `test -f 'wallet/bip39_mnemonic.cpp' || echo '$(srcdir)/'`wallet/bip39_mnemonic.cpp

wallet/libvds_wallet_a-bip39_mnemonic.obj: wallet/bip39_mnemonic.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-bip39_mnemonic.obj -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-bip39_mnemonic.Tpo -c -o wallet/libvds_wallet_a-bip39_mnemonic.obj `if test -f 'wallet/bip39_mnemonic.cpp'; then $(CYGPATH_W) 'wallet/bip39_mnemonic.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/bip39_mnemonic.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-bip39_mnemonic.Tpo wallet/$(DEPDIR)/libvds_wallet_a-bip39_mnemonic.Po
#	$(AM_V_CXX)source='wallet/bip39_mnemonic.cpp' object='wallet/libvds_wallet_a-bip39_mnemonic.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-bip39_mnemonic.obj `if test -f 'wallet/bip39_mnemonic.cpp'; then $(CYGPATH_W) 'wallet/bip39_mnemonic.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/bip39_mnemonic.cpp'; fi`

wallet/libvds_wallet_a-crypter.o: wallet/crypter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-crypter.o -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-crypter.Tpo -c -o wallet/libvds_wallet_a-crypter.o `test -f 'wallet/crypter.cpp' || echo '$(srcdir)/'`wallet/crypter.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-crypter.Tpo wallet/$(DEPDIR)/libvds_wallet_a-crypter.Po
#	$(AM_V_CXX)source='wallet/crypter.cpp' object='wallet/libvds_wallet_a-crypter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-crypter.o `test -f 'wallet/crypter.cpp' || echo '$(srcdir)/'`wallet/crypter.cpp

wallet/libvds_wallet_a-crypter.obj: wallet/crypter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-crypter.obj -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-crypter.Tpo -c -o wallet/libvds_wallet_a-crypter.obj `if test -f 'wallet/crypter.cpp'; then $(CYGPATH_W) 'wallet/crypter.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/crypter.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-crypter.Tpo wallet/$(DEPDIR)/libvds_wallet_a-crypter.Po
#	$(AM_V_CXX)source='wallet/crypter.cpp' object='wallet/libvds_wallet_a-crypter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-crypter.obj `if test -f 'wallet/crypter.cpp'; then $(CYGPATH_W) 'wallet/crypter.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/crypter.cpp'; fi`

wallet/libvds_wallet_a-db.o: wallet/db.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-db.o -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-db.Tpo -c -o wallet/libvds_wallet_a-db.o `test -f 'wallet/db.cpp' || echo '$(srcdir)/'`wallet/db.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-db.Tpo wallet/$(DEPDIR)/libvds_wallet_a-db.Po
#	$(AM_V_CXX)source='wallet/db.cpp' object='wallet/libvds_wallet_a-db.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-db.o `test -f 'wallet/db.cpp' || echo '$(srcdir)/'`wallet/db.cpp

wallet/libvds_wallet_a-db.obj: wallet/db.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-db.obj -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-db.Tpo -c -o wallet/libvds_wallet_a-db.obj `if test -f 'wallet/db.cpp'; then $(CYGPATH_W) 'wallet/db.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/db.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-db.Tpo wallet/$(DEPDIR)/libvds_wallet_a-db.Po
#	$(AM_V_CXX)source='wallet/db.cpp' object='wallet/libvds_wallet_a-db.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-db.obj `if test -f 'wallet/db.cpp'; then $(CYGPATH_W) 'wallet/db.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/db.cpp'; fi`

wallet/libvds_wallet_a-feebumper.o: wallet/feebumper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-feebumper.o -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-feebumper.Tpo -c -o wallet/libvds_wallet_a-feebumper.o `test -f 'wallet/feebumper.cpp' || echo '$(srcdir)/'`wallet/feebumper.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-feebumper.Tpo wallet/$(DEPDIR)/libvds_wallet_a-feebumper.Po
#	$(AM_V_CXX)source='wallet/feebumper.cpp' object='wallet/libvds_wallet_a-feebumper.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-feebumper.o `test -f 'wallet/feebumper.cpp' || echo '$(srcdir)/'`wallet/feebumper.cpp

wallet/libvds_wallet_a-feebumper.obj: wallet/feebumper.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-feebumper.obj -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-feebumper.Tpo -c -o wallet/libvds_wallet_a-feebumper.obj `if test -f 'wallet/feebumper.cpp'; then $(CYGPATH_W) 'wallet/feebumper.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/feebumper.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-feebumper.Tpo wallet/$(DEPDIR)/libvds_wallet_a-feebumper.Po
#	$(AM_V_CXX)source='wallet/feebumper.cpp' object='wallet/libvds_wallet_a-feebumper.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-feebumper.obj `if test -f 'wallet/feebumper.cpp'; then $(CYGPATH_W) 'wallet/feebumper.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/feebumper.cpp'; fi`

wallet/libvds_wallet_a-fees.o: wallet/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-fees.o -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-fees.Tpo -c -o wallet/libvds_wallet_a-fees.o `test -f 'wallet/fees.cpp' || echo '$(srcdir)/'`wallet/fees.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-fees.Tpo wallet/$(DEPDIR)/libvds_wallet_a-fees.Po
#	$(AM_V_CXX)source='wallet/fees.cpp' object='wallet/libvds_wallet_a-fees.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-fees.o `test -f 'wallet/fees.cpp' || echo '$(srcdir)/'`wallet/fees.cpp

wallet/libvds_wallet_a-fees.obj: wallet/fees.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-fees.obj -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-fees.Tpo -c -o wallet/libvds_wallet_a-fees.obj `if test -f 'wallet/fees.cpp'; then $(CYGPATH_W) 'wallet/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/fees.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-fees.Tpo wallet/$(DEPDIR)/libvds_wallet_a-fees.Po
#	$(AM_V_CXX)source='wallet/fees.cpp' object='wallet/libvds_wallet_a-fees.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-fees.obj `if test -f 'wallet/fees.cpp'; then $(CYGPATH_W) 'wallet/fees.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/fees.cpp'; fi`

libvds_wallet_a-paymentdisclosure.o: paymentdisclosure.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-paymentdisclosure.o -MD -MP -MF $(DEPDIR)/libvds_wallet_a-paymentdisclosure.Tpo -c -o libvds_wallet_a-paymentdisclosure.o `test -f 'paymentdisclosure.cpp' || echo '$(srcdir)/'`paymentdisclosure.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-paymentdisclosure.Tpo $(DEPDIR)/libvds_wallet_a-paymentdisclosure.Po
#	$(AM_V_CXX)source='paymentdisclosure.cpp' object='libvds_wallet_a-paymentdisclosure.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-paymentdisclosure.o `test -f 'paymentdisclosure.cpp' || echo '$(srcdir)/'`paymentdisclosure.cpp

libvds_wallet_a-paymentdisclosure.obj: paymentdisclosure.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-paymentdisclosure.obj -MD -MP -MF $(DEPDIR)/libvds_wallet_a-paymentdisclosure.Tpo -c -o libvds_wallet_a-paymentdisclosure.obj `if test -f 'paymentdisclosure.cpp'; then $(CYGPATH_W) 'paymentdisclosure.cpp'; else $(CYGPATH_W) '$(srcdir)/paymentdisclosure.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-paymentdisclosure.Tpo $(DEPDIR)/libvds_wallet_a-paymentdisclosure.Po
#	$(AM_V_CXX)source='paymentdisclosure.cpp' object='libvds_wallet_a-paymentdisclosure.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-paymentdisclosure.obj `if test -f 'paymentdisclosure.cpp'; then $(CYGPATH_W) 'paymentdisclosure.cpp'; else $(CYGPATH_W) '$(srcdir)/paymentdisclosure.cpp'; fi`

libvds_wallet_a-paymentdisclosuredb.o: paymentdisclosuredb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-paymentdisclosuredb.o -MD -MP -MF $(DEPDIR)/libvds_wallet_a-paymentdisclosuredb.Tpo -c -o libvds_wallet_a-paymentdisclosuredb.o `test -f 'paymentdisclosuredb.cpp' || echo '$(srcdir)/'`paymentdisclosuredb.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-paymentdisclosuredb.Tpo $(DEPDIR)/libvds_wallet_a-paymentdisclosuredb.Po
#	$(AM_V_CXX)source='paymentdisclosuredb.cpp' object='libvds_wallet_a-paymentdisclosuredb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-paymentdisclosuredb.o `test -f 'paymentdisclosuredb.cpp' || echo '$(srcdir)/'`paymentdisclosuredb.cpp

libvds_wallet_a-paymentdisclosuredb.obj: paymentdisclosuredb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvds_wallet_a-paymentdisclosuredb.obj -MD -MP -MF $(DEPDIR)/libvds_wallet_a-paymentdisclosuredb.Tpo -c -o libvds_wallet_a-paymentdisclosuredb.obj `if test -f 'paymentdisclosuredb.cpp'; then $(CYGPATH_W) 'paymentdisclosuredb.cpp'; else $(CYGPATH_W) '$(srcdir)/paymentdisclosuredb.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvds_wallet_a-paymentdisclosuredb.Tpo $(DEPDIR)/libvds_wallet_a-paymentdisclosuredb.Po
#	$(AM_V_CXX)source='paymentdisclosuredb.cpp' object='libvds_wallet_a-paymentdisclosuredb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvds_wallet_a-paymentdisclosuredb.obj `if test -f 'paymentdisclosuredb.cpp'; then $(CYGPATH_W) 'paymentdisclosuredb.cpp'; else $(CYGPATH_W) '$(srcdir)/paymentdisclosuredb.cpp'; fi`

wallet/libvds_wallet_a-rpcdisclosure.o: wallet/rpcdisclosure.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-rpcdisclosure.o -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-rpcdisclosure.Tpo -c -o wallet/libvds_wallet_a-rpcdisclosure.o `test -f 'wallet/rpcdisclosure.cpp' || echo '$(srcdir)/'`wallet/rpcdisclosure.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-rpcdisclosure.Tpo wallet/$(DEPDIR)/libvds_wallet_a-rpcdisclosure.Po
#	$(AM_V_CXX)source='wallet/rpcdisclosure.cpp' object='wallet/libvds_wallet_a-rpcdisclosure.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-rpcdisclosure.o `test -f 'wallet/rpcdisclosure.cpp' || echo '$(srcdir)/'`wallet/rpcdisclosure.cpp

wallet/libvds_wallet_a-rpcdisclosure.obj: wallet/rpcdisclosure.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-rpcdisclosure.obj -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-rpcdisclosure.Tpo -c -o wallet/libvds_wallet_a-rpcdisclosure.obj `if test -f 'wallet/rpcdisclosure.cpp'; then $(CYGPATH_W) 'wallet/rpcdisclosure.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpcdisclosure.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-rpcdisclosure.Tpo wallet/$(DEPDIR)/libvds_wallet_a-rpcdisclosure.Po
#	$(AM_V_CXX)source='wallet/rpcdisclosure.cpp' object='wallet/libvds_wallet_a-rpcdisclosure.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-rpcdisclosure.obj `if test -f 'wallet/rpcdisclosure.cpp'; then $(CYGPATH_W) 'wallet/rpcdisclosure.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpcdisclosure.cpp'; fi`

wallet/libvds_wallet_a-rpcdump.o: wallet/rpcdump.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-rpcdump.o -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-rpcdump.Tpo -c -o wallet/libvds_wallet_a-rpcdump.o `test -f 'wallet/rpcdump.cpp' || echo '$(srcdir)/'`wallet/rpcdump.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-rpcdump.Tpo wallet/$(DEPDIR)/libvds_wallet_a-rpcdump.Po
#	$(AM_V_CXX)source='wallet/rpcdump.cpp' object='wallet/libvds_wallet_a-rpcdump.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-rpcdump.o `test -f 'wallet/rpcdump.cpp' || echo '$(srcdir)/'`wallet/rpcdump.cpp

wallet/libvds_wallet_a-rpcdump.obj: wallet/rpcdump.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-rpcdump.obj -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-rpcdump.Tpo -c -o wallet/libvds_wallet_a-rpcdump.obj `if test -f 'wallet/rpcdump.cpp'; then $(CYGPATH_W) 'wallet/rpcdump.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpcdump.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-rpcdump.Tpo wallet/$(DEPDIR)/libvds_wallet_a-rpcdump.Po
#	$(AM_V_CXX)source='wallet/rpcdump.cpp' object='wallet/libvds_wallet_a-rpcdump.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-rpcdump.obj `if test -f 'wallet/rpcdump.cpp'; then $(CYGPATH_W) 'wallet/rpcdump.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpcdump.cpp'; fi`

wallet/libvds_wallet_a-rpcwallet.o: wallet/rpcwallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-rpcwallet.o -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-rpcwallet.Tpo -c -o wallet/libvds_wallet_a-rpcwallet.o `test -f 'wallet/rpcwallet.cpp' || echo '$(srcdir)/'`wallet/rpcwallet.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-rpcwallet.Tpo wallet/$(DEPDIR)/libvds_wallet_a-rpcwallet.Po
#	$(AM_V_CXX)source='wallet/rpcwallet.cpp' object='wallet/libvds_wallet_a-rpcwallet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-rpcwallet.o `test -f 'wallet/rpcwallet.cpp' || echo '$(srcdir)/'`wallet/rpcwallet.cpp

wallet/libvds_wallet_a-rpcwallet.obj: wallet/rpcwallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-rpcwallet.obj -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-rpcwallet.Tpo -c -o wallet/libvds_wallet_a-rpcwallet.obj `if test -f 'wallet/rpcwallet.cpp'; then $(CYGPATH_W) 'wallet/rpcwallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpcwallet.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-rpcwallet.Tpo wallet/$(DEPDIR)/libvds_wallet_a-rpcwallet.Po
#	$(AM_V_CXX)source='wallet/rpcwallet.cpp' object='wallet/libvds_wallet_a-rpcwallet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-rpcwallet.obj `if test -f 'wallet/rpcwallet.cpp'; then $(CYGPATH_W) 'wallet/rpcwallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/rpcwallet.cpp'; fi`

wallet/libvds_wallet_a-wallet.o: wallet/wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-wallet.o -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-wallet.Tpo -c -o wallet/libvds_wallet_a-wallet.o `test -f 'wallet/wallet.cpp' || echo '$(srcdir)/'`wallet/wallet.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-wallet.Tpo wallet/$(DEPDIR)/libvds_wallet_a-wallet.Po
#	$(AM_V_CXX)source='wallet/wallet.cpp' object='wallet/libvds_wallet_a-wallet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-wallet.o `test -f 'wallet/wallet.cpp' || echo '$(srcdir)/'`wallet/wallet.cpp

wallet/libvds_wallet_a-wallet.obj: wallet/wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-wallet.obj -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-wallet.Tpo -c -o wallet/libvds_wallet_a-wallet.obj `if test -f 'wallet/wallet.cpp'; then $(CYGPATH_W) 'wallet/wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallet.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-wallet.Tpo wallet/$(DEPDIR)/libvds_wallet_a-wallet.Po
#	$(AM_V_CXX)source='wallet/wallet.cpp' object='wallet/libvds_wallet_a-wallet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-wallet.obj `if test -f 'wallet/wallet.cpp'; then $(CYGPATH_W) 'wallet/wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallet.cpp'; fi`

wallet/libvds_wallet_a-wallet_ismine.o: wallet/wallet_ismine.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-wallet_ismine.o -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-wallet_ismine.Tpo -c -o wallet/libvds_wallet_a-wallet_ismine.o `test -f 'wallet/wallet_ismine.cpp' || echo '$(srcdir)/'`wallet/wallet_ismine.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-wallet_ismine.Tpo wallet/$(DEPDIR)/libvds_wallet_a-wallet_ismine.Po
#	$(AM_V_CXX)source='wallet/wallet_ismine.cpp' object='wallet/libvds_wallet_a-wallet_ismine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-wallet_ismine.o `test -f 'wallet/wallet_ismine.cpp' || echo '$(srcdir)/'`wallet/wallet_ismine.cpp

wallet/libvds_wallet_a-wallet_ismine.obj: wallet/wallet_ismine.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-wallet_ismine.obj -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-wallet_ismine.Tpo -c -o wallet/libvds_wallet_a-wallet_ismine.obj `if test -f 'wallet/wallet_ismine.cpp'; then $(CYGPATH_W) 'wallet/wallet_ismine.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallet_ismine.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-wallet_ismine.Tpo wallet/$(DEPDIR)/libvds_wallet_a-wallet_ismine.Po
#	$(AM_V_CXX)source='wallet/wallet_ismine.cpp' object='wallet/libvds_wallet_a-wallet_ismine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-wallet_ismine.obj `if test -f 'wallet/wallet_ismine.cpp'; then $(CYGPATH_W) 'wallet/wallet_ismine.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/wallet_ismine.cpp'; fi`

wallet/libvds_wallet_a-walletdb.o: wallet/walletdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-walletdb.o -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-walletdb.Tpo -c -o wallet/libvds_wallet_a-walletdb.o `test -f 'wallet/walletdb.cpp' || echo '$(srcdir)/'`wallet/walletdb.cpp
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-walletdb.Tpo wallet/$(DEPDIR)/libvds_wallet_a-walletdb.Po
#	$(AM_V_CXX)source='wallet/walletdb.cpp' object='wallet/libvds_wallet_a-walletdb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-walletdb.o `test -f 'wallet/walletdb.cpp' || echo '$(srcdir)/'`wallet/walletdb.cpp

wallet/libvds_wallet_a-walletdb.obj: wallet/walletdb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/libvds_wallet_a-walletdb.obj -MD -MP -MF wallet/$(DEPDIR)/libvds_wallet_a-walletdb.Tpo -c -o wallet/libvds_wallet_a-walletdb.obj `if test -f 'wallet/walletdb.cpp'; then $(CYGPATH_W) 'wallet/walletdb.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/walletdb.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/$(DEPDIR)/libvds_wallet_a-walletdb.Tpo wallet/$(DEPDIR)/libvds_wallet_a-walletdb.Po
#	$(AM_V_CXX)source='wallet/walletdb.cpp' object='wallet/libvds_wallet_a-walletdb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_wallet_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/libvds_wallet_a-walletdb.obj `if test -f 'wallet/walletdb.cpp'; then $(CYGPATH_W) 'wallet/walletdb.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/walletdb.cpp'; fi`

zmq/libvds_zmq_a-zmqabstractnotifier.o: zmq/zmqabstractnotifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_zmq_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zmq/libvds_zmq_a-zmqabstractnotifier.o -MD -MP -MF zmq/$(DEPDIR)/libvds_zmq_a-zmqabstractnotifier.Tpo -c -o zmq/libvds_zmq_a-zmqabstractnotifier.o `test -f 'zmq/zmqabstractnotifier.cpp' || echo '$(srcdir)/'`zmq/zmqabstractnotifier.cpp
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libvds_zmq_a-zmqabstractnotifier.Tpo zmq/$(DEPDIR)/libvds_zmq_a-zmqabstractnotifier.Po
#	$(AM_V_CXX)source='zmq/zmqabstractnotifier.cpp' object='zmq/libvds_zmq_a-zmqabstractnotifier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_zmq_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libvds_zmq_a-zmqabstractnotifier.o `test -f 'zmq/zmqabstractnotifier.cpp' || echo '$(srcdir)/'`zmq/zmqabstractnotifier.cpp

zmq/libvds_zmq_a-zmqabstractnotifier.obj: zmq/zmqabstractnotifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_zmq_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zmq/libvds_zmq_a-zmqabstractnotifier.obj -MD -MP -MF zmq/$(DEPDIR)/libvds_zmq_a-zmqabstractnotifier.Tpo -c -o zmq/libvds_zmq_a-zmqabstractnotifier.obj `if test -f 'zmq/zmqabstractnotifier.cpp'; then $(CYGPATH_W) 'zmq/zmqabstractnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqabstractnotifier.cpp'; fi`
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libvds_zmq_a-zmqabstractnotifier.Tpo zmq/$(DEPDIR)/libvds_zmq_a-zmqabstractnotifier.Po
#	$(AM_V_CXX)source='zmq/zmqabstractnotifier.cpp' object='zmq/libvds_zmq_a-zmqabstractnotifier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_zmq_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libvds_zmq_a-zmqabstractnotifier.obj `if test -f 'zmq/zmqabstractnotifier.cpp'; then $(CYGPATH_W) 'zmq/zmqabstractnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqabstractnotifier.cpp'; fi`

zmq/libvds_zmq_a-zmqnotificationinterface.o: zmq/zmqnotificationinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_zmq_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zmq/libvds_zmq_a-zmqnotificationinterface.o -MD -MP -MF zmq/$(DEPDIR)/libvds_zmq_a-zmqnotificationinterface.Tpo -c -o zmq/libvds_zmq_a-zmqnotificationinterface.o `test -f 'zmq/zmqnotificationinterface.cpp' || echo '$(srcdir)/'`zmq/zmqnotificationinterface.cpp
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libvds_zmq_a-zmqnotificationinterface.Tpo zmq/$(DEPDIR)/libvds_zmq_a-zmqnotificationinterface.Po
#	$(AM_V_CXX)source='zmq/zmqnotificationinterface.cpp' object='zmq/libvds_zmq_a-zmqnotificationinterface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_zmq_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libvds_zmq_a-zmqnotificationinterface.o `test -f 'zmq/zmqnotificationinterface.cpp' || echo '$(srcdir)/'`zmq/zmqnotificationinterface.cpp

zmq/libvds_zmq_a-zmqnotificationinterface.obj: zmq/zmqnotificationinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_zmq_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zmq/libvds_zmq_a-zmqnotificationinterface.obj -MD -MP -MF zmq/$(DEPDIR)/libvds_zmq_a-zmqnotificationinterface.Tpo -c -o zmq/libvds_zmq_a-zmqnotificationinterface.obj `if test -f 'zmq/zmqnotificationinterface.cpp'; then $(CYGPATH_W) 'zmq/zmqnotificationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqnotificationinterface.cpp'; fi`
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libvds_zmq_a-zmqnotificationinterface.Tpo zmq/$(DEPDIR)/libvds_zmq_a-zmqnotificationinterface.Po
#	$(AM_V_CXX)source='zmq/zmqnotificationinterface.cpp' object='zmq/libvds_zmq_a-zmqnotificationinterface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_zmq_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libvds_zmq_a-zmqnotificationinterface.obj `if test -f 'zmq/zmqnotificationinterface.cpp'; then $(CYGPATH_W) 'zmq/zmqnotificationinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqnotificationinterface.cpp'; fi`

zmq/libvds_zmq_a-zmqpublishnotifier.o: zmq/zmqpublishnotifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_zmq_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zmq/libvds_zmq_a-zmqpublishnotifier.o -MD -MP -MF zmq/$(DEPDIR)/libvds_zmq_a-zmqpublishnotifier.Tpo -c -o zmq/libvds_zmq_a-zmqpublishnotifier.o `test -f 'zmq/zmqpublishnotifier.cpp' || echo '$(srcdir)/'`zmq/zmqpublishnotifier.cpp
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libvds_zmq_a-zmqpublishnotifier.Tpo zmq/$(DEPDIR)/libvds_zmq_a-zmqpublishnotifier.Po
#	$(AM_V_CXX)source='zmq/zmqpublishnotifier.cpp' object='zmq/libvds_zmq_a-zmqpublishnotifier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_zmq_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libvds_zmq_a-zmqpublishnotifier.o `test -f 'zmq/zmqpublishnotifier.cpp' || echo '$(srcdir)/'`zmq/zmqpublishnotifier.cpp

zmq/libvds_zmq_a-zmqpublishnotifier.obj: zmq/zmqpublishnotifier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_zmq_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zmq/libvds_zmq_a-zmqpublishnotifier.obj -MD -MP -MF zmq/$(DEPDIR)/libvds_zmq_a-zmqpublishnotifier.Tpo -c -o zmq/libvds_zmq_a-zmqpublishnotifier.obj `if test -f 'zmq/zmqpublishnotifier.cpp'; then $(CYGPATH_W) 'zmq/zmqpublishnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqpublishnotifier.cpp'; fi`
	$(AM_V_at)$(am__mv) zmq/$(DEPDIR)/libvds_zmq_a-zmqpublishnotifier.Tpo zmq/$(DEPDIR)/libvds_zmq_a-zmqpublishnotifier.Po
#	$(AM_V_CXX)source='zmq/zmqpublishnotifier.cpp' object='zmq/libvds_zmq_a-zmqpublishnotifier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvds_zmq_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zmq/libvds_zmq_a-zmqpublishnotifier.obj `if test -f 'zmq/zmqpublishnotifier.cpp'; then $(CYGPATH_W) 'zmq/zmqpublishnotifier.cpp'; else $(CYGPATH_W) '$(srcdir)/zmq/zmqpublishnotifier.cpp'; fi`

crypto/libvdsconsensus_la-equihash.lo: crypto/equihash.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypto/libvdsconsensus_la-equihash.lo -MD -MP -MF crypto/$(DEPDIR)/libvdsconsensus_la-equihash.Tpo -c -o crypto/libvdsconsensus_la-equihash.lo `test -f 'crypto/equihash.cpp' || echo '$(srcdir)/'`crypto/equihash.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libvdsconsensus_la-equihash.Tpo crypto/$(DEPDIR)/libvdsconsensus_la-equihash.Plo
#	$(AM_V_CXX)source='crypto/equihash.cpp' object='crypto/libvdsconsensus_la-equihash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libvdsconsensus_la-equihash.lo `test -f 'crypto/equihash.cpp' || echo '$(srcdir)/'`crypto/equihash.cpp

crypto/libvdsconsensus_la-hmac_sha512.lo: crypto/hmac_sha512.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypto/libvdsconsensus_la-hmac_sha512.lo -MD -MP -MF crypto/$(DEPDIR)/libvdsconsensus_la-hmac_sha512.Tpo -c -o crypto/libvdsconsensus_la-hmac_sha512.lo `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libvdsconsensus_la-hmac_sha512.Tpo crypto/$(DEPDIR)/libvdsconsensus_la-hmac_sha512.Plo
#	$(AM_V_CXX)source='crypto/hmac_sha512.cpp' object='crypto/libvdsconsensus_la-hmac_sha512.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libvdsconsensus_la-hmac_sha512.lo `test -f 'crypto/hmac_sha512.cpp' || echo '$(srcdir)/'`crypto/hmac_sha512.cpp

crypto/libvdsconsensus_la-ripemd160.lo: crypto/ripemd160.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypto/libvdsconsensus_la-ripemd160.lo -MD -MP -MF crypto/$(DEPDIR)/libvdsconsensus_la-ripemd160.Tpo -c -o crypto/libvdsconsensus_la-ripemd160.lo `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libvdsconsensus_la-ripemd160.Tpo crypto/$(DEPDIR)/libvdsconsensus_la-ripemd160.Plo
#	$(AM_V_CXX)source='crypto/ripemd160.cpp' object='crypto/libvdsconsensus_la-ripemd160.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libvdsconsensus_la-ripemd160.lo `test -f 'crypto/ripemd160.cpp' || echo '$(srcdir)/'`crypto/ripemd160.cpp

crypto/libvdsconsensus_la-sha1.lo: crypto/sha1.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypto/libvdsconsensus_la-sha1.lo -MD -MP -MF crypto/$(DEPDIR)/libvdsconsensus_la-sha1.Tpo -c -o crypto/libvdsconsensus_la-sha1.lo `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libvdsconsensus_la-sha1.Tpo crypto/$(DEPDIR)/libvdsconsensus_la-sha1.Plo
#	$(AM_V_CXX)source='crypto/sha1.cpp' object='crypto/libvdsconsensus_la-sha1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libvdsconsensus_la-sha1.lo `test -f 'crypto/sha1.cpp' || echo '$(srcdir)/'`crypto/sha1.cpp

crypto/libvdsconsensus_la-sha256.lo: crypto/sha256.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypto/libvdsconsensus_la-sha256.lo -MD -MP -MF crypto/$(DEPDIR)/libvdsconsensus_la-sha256.Tpo -c -o crypto/libvdsconsensus_la-sha256.lo `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libvdsconsensus_la-sha256.Tpo crypto/$(DEPDIR)/libvdsconsensus_la-sha256.Plo
#	$(AM_V_CXX)source='crypto/sha256.cpp' object='crypto/libvdsconsensus_la-sha256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libvdsconsensus_la-sha256.lo `test -f 'crypto/sha256.cpp' || echo '$(srcdir)/'`crypto/sha256.cpp

crypto/libvdsconsensus_la-sha512.lo: crypto/sha512.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crypto/libvdsconsensus_la-sha512.lo -MD -MP -MF crypto/$(DEPDIR)/libvdsconsensus_la-sha512.Tpo -c -o crypto/libvdsconsensus_la-sha512.lo `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp
	$(AM_V_at)$(am__mv) crypto/$(DEPDIR)/libvdsconsensus_la-sha512.Tpo crypto/$(DEPDIR)/libvdsconsensus_la-sha512.Plo
#	$(AM_V_CXX)source='crypto/sha512.cpp' object='crypto/libvdsconsensus_la-sha512.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crypto/libvdsconsensus_la-sha512.lo `test -f 'crypto/sha512.cpp' || echo '$(srcdir)/'`crypto/sha512.cpp

libvdsconsensus_la-hash.lo: hash.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvdsconsensus_la-hash.lo -MD -MP -MF $(DEPDIR)/libvdsconsensus_la-hash.Tpo -c -o libvdsconsensus_la-hash.lo `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvdsconsensus_la-hash.Tpo $(DEPDIR)/libvdsconsensus_la-hash.Plo
#	$(AM_V_CXX)source='hash.cpp' object='libvdsconsensus_la-hash.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvdsconsensus_la-hash.lo `test -f 'hash.cpp' || echo '$(srcdir)/'`hash.cpp

primitives/libvdsconsensus_la-transaction.lo: primitives/transaction.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT primitives/libvdsconsensus_la-transaction.lo -MD -MP -MF primitives/$(DEPDIR)/libvdsconsensus_la-transaction.Tpo -c -o primitives/libvdsconsensus_la-transaction.lo `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp
	$(AM_V_at)$(am__mv) primitives/$(DEPDIR)/libvdsconsensus_la-transaction.Tpo primitives/$(DEPDIR)/libvdsconsensus_la-transaction.Plo
#	$(AM_V_CXX)source='primitives/transaction.cpp' object='primitives/libvdsconsensus_la-transaction.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o primitives/libvdsconsensus_la-transaction.lo `test -f 'primitives/transaction.cpp' || echo '$(srcdir)/'`primitives/transaction.cpp

libvdsconsensus_la-pubkey.lo: pubkey.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvdsconsensus_la-pubkey.lo -MD -MP -MF $(DEPDIR)/libvdsconsensus_la-pubkey.Tpo -c -o libvdsconsensus_la-pubkey.lo `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvdsconsensus_la-pubkey.Tpo $(DEPDIR)/libvdsconsensus_la-pubkey.Plo
#	$(AM_V_CXX)source='pubkey.cpp' object='libvdsconsensus_la-pubkey.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvdsconsensus_la-pubkey.lo `test -f 'pubkey.cpp' || echo '$(srcdir)/'`pubkey.cpp

script/libvdsconsensus_la-vdsconsensus.lo: script/vdsconsensus.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT script/libvdsconsensus_la-vdsconsensus.lo -MD -MP -MF script/$(DEPDIR)/libvdsconsensus_la-vdsconsensus.Tpo -c -o script/libvdsconsensus_la-vdsconsensus.lo `test -f 'script/vdsconsensus.cpp' || echo '$(srcdir)/'`script/vdsconsensus.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libvdsconsensus_la-vdsconsensus.Tpo script/$(DEPDIR)/libvdsconsensus_la-vdsconsensus.Plo
#	$(AM_V_CXX)source='script/vdsconsensus.cpp' object='script/libvdsconsensus_la-vdsconsensus.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o script/libvdsconsensus_la-vdsconsensus.lo `test -f 'script/vdsconsensus.cpp' || echo '$(srcdir)/'`script/vdsconsensus.cpp

script/libvdsconsensus_la-interpreter.lo: script/interpreter.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT script/libvdsconsensus_la-interpreter.lo -MD -MP -MF script/$(DEPDIR)/libvdsconsensus_la-interpreter.Tpo -c -o script/libvdsconsensus_la-interpreter.lo `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libvdsconsensus_la-interpreter.Tpo script/$(DEPDIR)/libvdsconsensus_la-interpreter.Plo
#	$(AM_V_CXX)source='script/interpreter.cpp' object='script/libvdsconsensus_la-interpreter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o script/libvdsconsensus_la-interpreter.lo `test -f 'script/interpreter.cpp' || echo '$(srcdir)/'`script/interpreter.cpp

script/libvdsconsensus_la-script.lo: script/script.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT script/libvdsconsensus_la-script.lo -MD -MP -MF script/$(DEPDIR)/libvdsconsensus_la-script.Tpo -c -o script/libvdsconsensus_la-script.lo `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp
	$(AM_V_at)$(am__mv) script/$(DEPDIR)/libvdsconsensus_la-script.Tpo script/$(DEPDIR)/libvdsconsensus_la-script.Plo
#	$(AM_V_CXX)source='script/script.cpp' object='script/libvdsconsensus_la-script.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o script/libvdsconsensus_la-script.lo `test -f 'script/script.cpp' || echo '$(srcdir)/'`script/script.cpp

libvdsconsensus_la-uint256.lo: uint256.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvdsconsensus_la-uint256.lo -MD -MP -MF $(DEPDIR)/libvdsconsensus_la-uint256.Tpo -c -o libvdsconsensus_la-uint256.lo `test -f 'uint256.cpp' || echo '$(srcdir)/'`uint256.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvdsconsensus_la-uint256.Tpo $(DEPDIR)/libvdsconsensus_la-uint256.Plo
#	$(AM_V_CXX)source='uint256.cpp' object='libvdsconsensus_la-uint256.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvdsconsensus_la-uint256.lo `test -f 'uint256.cpp' || echo '$(srcdir)/'`uint256.cpp

libvdsconsensus_la-utilstrencodings.lo: utilstrencodings.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT libvdsconsensus_la-utilstrencodings.lo -MD -MP -MF $(DEPDIR)/libvdsconsensus_la-utilstrencodings.Tpo -c -o libvdsconsensus_la-utilstrencodings.lo `test -f 'utilstrencodings.cpp' || echo '$(srcdir)/'`utilstrencodings.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/libvdsconsensus_la-utilstrencodings.Tpo $(DEPDIR)/libvdsconsensus_la-utilstrencodings.Plo
#	$(AM_V_CXX)source='utilstrencodings.cpp' object='libvdsconsensus_la-utilstrencodings.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o libvdsconsensus_la-utilstrencodings.lo `test -f 'utilstrencodings.cpp' || echo '$(srcdir)/'`utilstrencodings.cpp

compat/libvdsconsensus_la-glibc_compat.lo: compat/glibc_compat.cpp
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT compat/libvdsconsensus_la-glibc_compat.lo -MD -MP -MF compat/$(DEPDIR)/libvdsconsensus_la-glibc_compat.Tpo -c -o compat/libvdsconsensus_la-glibc_compat.lo `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp
	$(AM_V_at)$(am__mv) compat/$(DEPDIR)/libvdsconsensus_la-glibc_compat.Tpo compat/$(DEPDIR)/libvdsconsensus_la-glibc_compat.Plo
#	$(AM_V_CXX)source='compat/glibc_compat.cpp' object='compat/libvdsconsensus_la-glibc_compat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libvdsconsensus_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o compat/libvdsconsensus_la-glibc_compat.lo `test -f 'compat/glibc_compat.cpp' || echo '$(srcdir)/'`compat/glibc_compat.cpp

bench/bench_bench_bitcoin-bench_bitcoin.o: bench/bench_bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-bench_bitcoin.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-bench_bitcoin.Tpo -c -o bench/bench_bench_bitcoin-bench_bitcoin.o `test -f 'bench/bench_bitcoin.cpp' || echo '$(srcdir)/'`bench/bench_bitcoin.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-bench_bitcoin.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-bench_bitcoin.Po
#	$(AM_V_CXX)source='bench/bench_bitcoin.cpp' object='bench/bench_bench_bitcoin-bench_bitcoin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-bench_bitcoin.o `test -f 'bench/bench_bitcoin.cpp' || echo '$(srcdir)/'`bench/bench_bitcoin.cpp

bench/bench_bench_bitcoin-bench_bitcoin.obj: bench/bench_bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-bench_bitcoin.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-bench_bitcoin.Tpo -c -o bench/bench_bench_bitcoin-bench_bitcoin.obj `if test -f 'bench/bench_bitcoin.cpp'; then $(CYGPATH_W) 'bench/bench_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench_bitcoin.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-bench_bitcoin.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-bench_bitcoin.Po
#	$(AM_V_CXX)source='bench/bench_bitcoin.cpp' object='bench/bench_bench_bitcoin-bench_bitcoin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-bench_bitcoin.obj `if test -f 'bench/bench_bitcoin.cpp'; then $(CYGPATH_W) 'bench/bench_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench_bitcoin.cpp'; fi`

bench/bench_bench_bitcoin-bench.o: bench/bench.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-bench.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-bench.Tpo -c -o bench/bench_bench_bitcoin-bench.o `test -f 'bench/bench.cpp' || echo '$(srcdir)/'`bench/bench.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-bench.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-bench.Po
#	$(AM_V_CXX)source='bench/bench.cpp' object='bench/bench_bench_bitcoin-bench.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-bench.o `test -f 'bench/bench.cpp' || echo '$(srcdir)/'`bench/bench.cpp

bench/bench_bench_bitcoin-bench.obj: bench/bench.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-bench.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-bench.Tpo -c -o bench/bench_bench_bitcoin-bench.obj `if test -f 'bench/bench.cpp'; then $(CYGPATH_W) 'bench/bench.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-bench.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-bench.Po
#	$(AM_V_CXX)source='bench/bench.cpp' object='bench/bench_bench_bitcoin-bench.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-bench.obj `if test -f 'bench/bench.cpp'; then $(CYGPATH_W) 'bench/bench.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/bench.cpp'; fi`

bench/bench_bench_bitcoin-checkblock.o: bench/checkblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-checkblock.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-checkblock.Tpo -c -o bench/bench_bench_bitcoin-checkblock.o `test -f 'bench/checkblock.cpp' || echo '$(srcdir)/'`bench/checkblock.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-checkblock.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-checkblock.Po
#	$(AM_V_CXX)source='bench/checkblock.cpp' object='bench/bench_bench_bitcoin-checkblock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-checkblock.o `test -f 'bench/checkblock.cpp' || echo '$(srcdir)/'`bench/checkblock.cpp

bench/bench_bench_bitcoin-checkblock.obj: bench/checkblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-checkblock.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-checkblock.Tpo -c -o bench/bench_bench_bitcoin-checkblock.obj `if test -f 'bench/checkblock.cpp'; then $(CYGPATH_W) 'bench/checkblock.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkblock.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-checkblock.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-checkblock.Po
#	$(AM_V_CXX)source='bench/checkblock.cpp' object='bench/bench_bench_bitcoin-checkblock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-checkblock.obj `if test -f 'bench/checkblock.cpp'; then $(CYGPATH_W) 'bench/checkblock.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkblock.cpp'; fi`

bench/bench_bench_bitcoin-checkqueue.o: bench/checkqueue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-checkqueue.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-checkqueue.Tpo -c -o bench/bench_bench_bitcoin-checkqueue.o `test -f 'bench/checkqueue.cpp' || echo '$(srcdir)/'`bench/checkqueue.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-checkqueue.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-checkqueue.Po
#	$(AM_V_CXX)source='bench/checkqueue.cpp' object='bench/bench_bench_bitcoin-checkqueue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-checkqueue.o `test -f 'bench/checkqueue.cpp' || echo '$(srcdir)/'`bench/checkqueue.cpp

bench/bench_bench_bitcoin-checkqueue.obj: bench/checkqueue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-checkqueue.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-checkqueue.Tpo -c -o bench/bench_bench_bitcoin-checkqueue.obj `if test -f 'bench/checkqueue.cpp'; then $(CYGPATH_W) 'bench/checkqueue.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkqueue.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-checkqueue.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-checkqueue.Po
#	$(AM_V_CXX)source='bench/checkqueue.cpp' object='bench/bench_bench_bitcoin-checkqueue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-checkqueue.obj `if test -f 'bench/checkqueue.cpp'; then $(CYGPATH_W) 'bench/checkqueue.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/checkqueue.cpp'; fi`

bench/bench_bench_bitcoin-Examples.o: bench/Examples.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-Examples.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-Examples.Tpo -c -o bench/bench_bench_bitcoin-Examples.o `test -f 'bench/Examples.cpp' || echo '$(srcdir)/'`bench/Examples.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-Examples.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-Examples.Po
#	$(AM_V_CXX)source='bench/Examples.cpp' object='bench/bench_bench_bitcoin-Examples.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-Examples.o `test -f 'bench/Examples.cpp' || echo '$(srcdir)/'`bench/Examples.cpp

bench/bench_bench_bitcoin-Examples.obj: bench/Examples.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-Examples.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-Examples.Tpo -c -o bench/bench_bench_bitcoin-Examples.obj `if test -f 'bench/Examples.cpp'; then $(CYGPATH_W) 'bench/Examples.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/Examples.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-Examples.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-Examples.Po
#	$(AM_V_CXX)source='bench/Examples.cpp' object='bench/bench_bench_bitcoin-Examples.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-Examples.obj `if test -f 'bench/Examples.cpp'; then $(CYGPATH_W) 'bench/Examples.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/Examples.cpp'; fi`

bench/bench_bench_bitcoin-rollingbloom.o: bench/rollingbloom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-rollingbloom.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-rollingbloom.Tpo -c -o bench/bench_bench_bitcoin-rollingbloom.o `test -f 'bench/rollingbloom.cpp' || echo '$(srcdir)/'`bench/rollingbloom.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-rollingbloom.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-rollingbloom.Po
#	$(AM_V_CXX)source='bench/rollingbloom.cpp' object='bench/bench_bench_bitcoin-rollingbloom.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-rollingbloom.o `test -f 'bench/rollingbloom.cpp' || echo '$(srcdir)/'`bench/rollingbloom.cpp

bench/bench_bench_bitcoin-rollingbloom.obj: bench/rollingbloom.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-rollingbloom.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-rollingbloom.Tpo -c -o bench/bench_bench_bitcoin-rollingbloom.obj `if test -f 'bench/rollingbloom.cpp'; then $(CYGPATH_W) 'bench/rollingbloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/rollingbloom.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-rollingbloom.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-rollingbloom.Po
#	$(AM_V_CXX)source='bench/rollingbloom.cpp' object='bench/bench_bench_bitcoin-rollingbloom.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-rollingbloom.obj `if test -f 'bench/rollingbloom.cpp'; then $(CYGPATH_W) 'bench/rollingbloom.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/rollingbloom.cpp'; fi`

bench/bench_bench_bitcoin-crypto_hash.o: bench/crypto_hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-crypto_hash.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-crypto_hash.Tpo -c -o bench/bench_bench_bitcoin-crypto_hash.o `test -f 'bench/crypto_hash.cpp' || echo '$(srcdir)/'`bench/crypto_hash.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-crypto_hash.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-crypto_hash.Po
#	$(AM_V_CXX)source='bench/crypto_hash.cpp' object='bench/bench_bench_bitcoin-crypto_hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-crypto_hash.o `test -f 'bench/crypto_hash.cpp' || echo '$(srcdir)/'`bench/crypto_hash.cpp

bench/bench_bench_bitcoin-crypto_hash.obj: bench/crypto_hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-crypto_hash.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-crypto_hash.Tpo -c -o bench/bench_bench_bitcoin-crypto_hash.obj `if test -f 'bench/crypto_hash.cpp'; then $(CYGPATH_W) 'bench/crypto_hash.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/crypto_hash.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-crypto_hash.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-crypto_hash.Po
#	$(AM_V_CXX)source='bench/crypto_hash.cpp' object='bench/bench_bench_bitcoin-crypto_hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-crypto_hash.obj `if test -f 'bench/crypto_hash.cpp'; then $(CYGPATH_W) 'bench/crypto_hash.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/crypto_hash.cpp'; fi`

bench/bench_bench_bitcoin-ccoins_caching.o: bench/ccoins_caching.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-ccoins_caching.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-ccoins_caching.Tpo -c -o bench/bench_bench_bitcoin-ccoins_caching.o `test -f 'bench/ccoins_caching.cpp' || echo '$(srcdir)/'`bench/ccoins_caching.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-ccoins_caching.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-ccoins_caching.Po
#	$(AM_V_CXX)source='bench/ccoins_caching.cpp' object='bench/bench_bench_bitcoin-ccoins_caching.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-ccoins_caching.o `test -f 'bench/ccoins_caching.cpp' || echo '$(srcdir)/'`bench/ccoins_caching.cpp

bench/bench_bench_bitcoin-ccoins_caching.obj: bench/ccoins_caching.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-ccoins_caching.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-ccoins_caching.Tpo -c -o bench/bench_bench_bitcoin-ccoins_caching.obj `if test -f 'bench/ccoins_caching.cpp'; then $(CYGPATH_W) 'bench/ccoins_caching.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/ccoins_caching.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-ccoins_caching.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-ccoins_caching.Po
#	$(AM_V_CXX)source='bench/ccoins_caching.cpp' object='bench/bench_bench_bitcoin-ccoins_caching.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-ccoins_caching.obj `if test -f 'bench/ccoins_caching.cpp'; then $(CYGPATH_W) 'bench/ccoins_caching.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/ccoins_caching.cpp'; fi`

bench/bench_bench_bitcoin-mempool_eviction.o: bench/mempool_eviction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-mempool_eviction.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-mempool_eviction.Tpo -c -o bench/bench_bench_bitcoin-mempool_eviction.o `test -f 'bench/mempool_eviction.cpp' || echo '$(srcdir)/'`bench/mempool_eviction.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-mempool_eviction.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-mempool_eviction.Po
#	$(AM_V_CXX)source='bench/mempool_eviction.cpp' object='bench/bench_bench_bitcoin-mempool_eviction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-mempool_eviction.o `test -f 'bench/mempool_eviction.cpp' || echo '$(srcdir)/'`bench/mempool_eviction.cpp

bench/bench_bench_bitcoin-mempool_eviction.obj: bench/mempool_eviction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-mempool_eviction.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-mempool_eviction.Tpo -c -o bench/bench_bench_bitcoin-mempool_eviction.obj `if test -f 'bench/mempool_eviction.cpp'; then $(CYGPATH_W) 'bench/mempool_eviction.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/mempool_eviction.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-mempool_eviction.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-mempool_eviction.Po
#	$(AM_V_CXX)source='bench/mempool_eviction.cpp' object='bench/bench_bench_bitcoin-mempool_eviction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-mempool_eviction.obj `if test -f 'bench/mempool_eviction.cpp'; then $(CYGPATH_W) 'bench/mempool_eviction.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/mempool_eviction.cpp'; fi`

bench/bench_bench_bitcoin-verify_script.o: bench/verify_script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-verify_script.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-verify_script.Tpo -c -o bench/bench_bench_bitcoin-verify_script.o `test -f 'bench/verify_script.cpp' || echo '$(srcdir)/'`bench/verify_script.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-verify_script.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-verify_script.Po
#	$(AM_V_CXX)source='bench/verify_script.cpp' object='bench/bench_bench_bitcoin-verify_script.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-verify_script.o `test -f 'bench/verify_script.cpp' || echo '$(srcdir)/'`bench/verify_script.cpp

bench/bench_bench_bitcoin-verify_script.obj: bench/verify_script.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-verify_script.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-verify_script.Tpo -c -o bench/bench_bench_bitcoin-verify_script.obj `if test -f 'bench/verify_script.cpp'; then $(CYGPATH_W) 'bench/verify_script.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/verify_script.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-verify_script.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-verify_script.Po
#	$(AM_V_CXX)source='bench/verify_script.cpp' object='bench/bench_bench_bitcoin-verify_script.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-verify_script.obj `if test -f 'bench/verify_script.cpp'; then $(CYGPATH_W) 'bench/verify_script.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/verify_script.cpp'; fi`

bench/bench_bench_bitcoin-base58.o: bench/base58.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-base58.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-base58.Tpo -c -o bench/bench_bench_bitcoin-base58.o `test -f 'bench/base58.cpp' || echo '$(srcdir)/'`bench/base58.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-base58.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-base58.Po
#	$(AM_V_CXX)source='bench/base58.cpp' object='bench/bench_bench_bitcoin-base58.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-base58.o `test -f 'bench/base58.cpp' || echo '$(srcdir)/'`bench/base58.cpp

bench/bench_bench_bitcoin-base58.obj: bench/base58.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-base58.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-base58.Tpo -c -o bench/bench_bench_bitcoin-base58.obj `if test -f 'bench/base58.cpp'; then $(CYGPATH_W) 'bench/base58.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/base58.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-base58.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-base58.Po
#	$(AM_V_CXX)source='bench/base58.cpp' object='bench/bench_bench_bitcoin-base58.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-base58.obj `if test -f 'bench/base58.cpp'; then $(CYGPATH_W) 'bench/base58.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/base58.cpp'; fi`

bench/bench_bench_bitcoin-lockedpool.o: bench/lockedpool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-lockedpool.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-lockedpool.Tpo -c -o bench/bench_bench_bitcoin-lockedpool.o `test -f 'bench/lockedpool.cpp' || echo '$(srcdir)/'`bench/lockedpool.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-lockedpool.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-lockedpool.Po
#	$(AM_V_CXX)source='bench/lockedpool.cpp' object='bench/bench_bench_bitcoin-lockedpool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-lockedpool.o `test -f 'bench/lockedpool.cpp' || echo '$(srcdir)/'`bench/lockedpool.cpp

bench/bench_bench_bitcoin-lockedpool.obj: bench/lockedpool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-lockedpool.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-lockedpool.Tpo -c -o bench/bench_bench_bitcoin-lockedpool.obj `if test -f 'bench/lockedpool.cpp'; then $(CYGPATH_W) 'bench/lockedpool.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/lockedpool.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-lockedpool.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-lockedpool.Po
#	$(AM_V_CXX)source='bench/lockedpool.cpp' object='bench/bench_bench_bitcoin-lockedpool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-lockedpool.obj `if test -f 'bench/lockedpool.cpp'; then $(CYGPATH_W) 'bench/lockedpool.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/lockedpool.cpp'; fi`

bench/bench_bench_bitcoin-perf.o: bench/perf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-perf.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-perf.Tpo -c -o bench/bench_bench_bitcoin-perf.o `test -f 'bench/perf.cpp' || echo '$(srcdir)/'`bench/perf.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-perf.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-perf.Po
#	$(AM_V_CXX)source='bench/perf.cpp' object='bench/bench_bench_bitcoin-perf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-perf.o `test -f 'bench/perf.cpp' || echo '$(srcdir)/'`bench/perf.cpp

bench/bench_bench_bitcoin-perf.obj: bench/perf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-perf.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-perf.Tpo -c -o bench/bench_bench_bitcoin-perf.obj `if test -f 'bench/perf.cpp'; then $(CYGPATH_W) 'bench/perf.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/perf.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-perf.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-perf.Po
#	$(AM_V_CXX)source='bench/perf.cpp' object='bench/bench_bench_bitcoin-perf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-perf.obj `if test -f 'bench/perf.cpp'; then $(CYGPATH_W) 'bench/perf.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/perf.cpp'; fi`

bench/bench_bench_bitcoin-prevector_destructor.o: bench/prevector_destructor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-prevector_destructor.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-prevector_destructor.Tpo -c -o bench/bench_bench_bitcoin-prevector_destructor.o `test -f 'bench/prevector_destructor.cpp' || echo '$(srcdir)/'`bench/prevector_destructor.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-prevector_destructor.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-prevector_destructor.Po
#	$(AM_V_CXX)source='bench/prevector_destructor.cpp' object='bench/bench_bench_bitcoin-prevector_destructor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-prevector_destructor.o `test -f 'bench/prevector_destructor.cpp' || echo '$(srcdir)/'`bench/prevector_destructor.cpp

bench/bench_bench_bitcoin-prevector_destructor.obj: bench/prevector_destructor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-prevector_destructor.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-prevector_destructor.Tpo -c -o bench/bench_bench_bitcoin-prevector_destructor.obj `if test -f 'bench/prevector_destructor.cpp'; then $(CYGPATH_W) 'bench/prevector_destructor.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/prevector_destructor.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-prevector_destructor.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-prevector_destructor.Po
#	$(AM_V_CXX)source='bench/prevector_destructor.cpp' object='bench/bench_bench_bitcoin-prevector_destructor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-prevector_destructor.obj `if test -f 'bench/prevector_destructor.cpp'; then $(CYGPATH_W) 'bench/prevector_destructor.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/prevector_destructor.cpp'; fi`

bench/bench_bench_bitcoin-coin_selection.o: bench/coin_selection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-coin_selection.o -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-coin_selection.Tpo -c -o bench/bench_bench_bitcoin-coin_selection.o `test -f 'bench/coin_selection.cpp' || echo '$(srcdir)/'`bench/coin_selection.cpp
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-coin_selection.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-coin_selection.Po
#	$(AM_V_CXX)source='bench/coin_selection.cpp' object='bench/bench_bench_bitcoin-coin_selection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-coin_selection.o `test -f 'bench/coin_selection.cpp' || echo '$(srcdir)/'`bench/coin_selection.cpp

bench/bench_bench_bitcoin-coin_selection.obj: bench/coin_selection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -MT bench/bench_bench_bitcoin-coin_selection.obj -MD -MP -MF bench/$(DEPDIR)/bench_bench_bitcoin-coin_selection.Tpo -c -o bench/bench_bench_bitcoin-coin_selection.obj `if test -f 'bench/coin_selection.cpp'; then $(CYGPATH_W) 'bench/coin_selection.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/coin_selection.cpp'; fi`
	$(AM_V_at)$(am__mv) bench/$(DEPDIR)/bench_bench_bitcoin-coin_selection.Tpo bench/$(DEPDIR)/bench_bench_bitcoin-coin_selection.Po
#	$(AM_V_CXX)source='bench/coin_selection.cpp' object='bench/bench_bench_bitcoin-coin_selection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(bench_bench_bitcoin_CPPFLAGS) $(CPPFLAGS) $(bench_bench_bitcoin_CXXFLAGS) $(CXXFLAGS) -c -o bench/bench_bench_bitcoin-coin_selection.obj `if test -f 'bench/coin_selection.cpp'; then $(CYGPATH_W) 'bench/coin_selection.cpp'; else $(CYGPATH_W) '$(srcdir)/bench/coin_selection.cpp'; fi`

test/test_test_bitcoin-arith_uint256_tests.o: test/arith_uint256_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-arith_uint256_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-arith_uint256_tests.Tpo -c -o test/test_test_bitcoin-arith_uint256_tests.o `test -f 'test/arith_uint256_tests.cpp' || echo '$(srcdir)/'`test/arith_uint256_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-arith_uint256_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-arith_uint256_tests.Po
#	$(AM_V_CXX)source='test/arith_uint256_tests.cpp' object='test/test_test_bitcoin-arith_uint256_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-arith_uint256_tests.o `test -f 'test/arith_uint256_tests.cpp' || echo '$(srcdir)/'`test/arith_uint256_tests.cpp

test/test_test_bitcoin-arith_uint256_tests.obj: test/arith_uint256_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-arith_uint256_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-arith_uint256_tests.Tpo -c -o test/test_test_bitcoin-arith_uint256_tests.obj `if test -f 'test/arith_uint256_tests.cpp'; then $(CYGPATH_W) 'test/arith_uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/arith_uint256_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-arith_uint256_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-arith_uint256_tests.Po
#	$(AM_V_CXX)source='test/arith_uint256_tests.cpp' object='test/test_test_bitcoin-arith_uint256_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-arith_uint256_tests.obj `if test -f 'test/arith_uint256_tests.cpp'; then $(CYGPATH_W) 'test/arith_uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/arith_uint256_tests.cpp'; fi`

test/test_test_bitcoin-addrman_tests.o: test/addrman_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-addrman_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-addrman_tests.Tpo -c -o test/test_test_bitcoin-addrman_tests.o `test -f 'test/addrman_tests.cpp' || echo '$(srcdir)/'`test/addrman_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-addrman_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-addrman_tests.Po
#	$(AM_V_CXX)source='test/addrman_tests.cpp' object='test/test_test_bitcoin-addrman_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-addrman_tests.o `test -f 'test/addrman_tests.cpp' || echo '$(srcdir)/'`test/addrman_tests.cpp

test/test_test_bitcoin-addrman_tests.obj: test/addrman_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-addrman_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-addrman_tests.Tpo -c -o test/test_test_bitcoin-addrman_tests.obj `if test -f 'test/addrman_tests.cpp'; then $(CYGPATH_W) 'test/addrman_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/addrman_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-addrman_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-addrman_tests.Po
#	$(AM_V_CXX)source='test/addrman_tests.cpp' object='test/test_test_bitcoin-addrman_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-addrman_tests.obj `if test -f 'test/addrman_tests.cpp'; then $(CYGPATH_W) 'test/addrman_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/addrman_tests.cpp'; fi`

test/test_test_bitcoin-alert_tests.o: test/alert_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-alert_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-alert_tests.Tpo -c -o test/test_test_bitcoin-alert_tests.o `test -f 'test/alert_tests.cpp' || echo '$(srcdir)/'`test/alert_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-alert_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-alert_tests.Po
#	$(AM_V_CXX)source='test/alert_tests.cpp' object='test/test_test_bitcoin-alert_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-alert_tests.o `test -f 'test/alert_tests.cpp' || echo '$(srcdir)/'`test/alert_tests.cpp

test/test_test_bitcoin-alert_tests.obj: test/alert_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-alert_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-alert_tests.Tpo -c -o test/test_test_bitcoin-alert_tests.obj `if test -f 'test/alert_tests.cpp'; then $(CYGPATH_W) 'test/alert_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/alert_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-alert_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-alert_tests.Po
#	$(AM_V_CXX)source='test/alert_tests.cpp' object='test/test_test_bitcoin-alert_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-alert_tests.obj `if test -f 'test/alert_tests.cpp'; then $(CYGPATH_W) 'test/alert_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/alert_tests.cpp'; fi`

test/test_test_bitcoin-allocator_tests.o: test/allocator_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-allocator_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-allocator_tests.Tpo -c -o test/test_test_bitcoin-allocator_tests.o `test -f 'test/allocator_tests.cpp' || echo '$(srcdir)/'`test/allocator_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-allocator_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-allocator_tests.Po
#	$(AM_V_CXX)source='test/allocator_tests.cpp' object='test/test_test_bitcoin-allocator_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-allocator_tests.o `test -f 'test/allocator_tests.cpp' || echo '$(srcdir)/'`test/allocator_tests.cpp

test/test_test_bitcoin-allocator_tests.obj: test/allocator_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-allocator_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-allocator_tests.Tpo -c -o test/test_test_bitcoin-allocator_tests.obj `if test -f 'test/allocator_tests.cpp'; then $(CYGPATH_W) 'test/allocator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/allocator_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-allocator_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-allocator_tests.Po
#	$(AM_V_CXX)source='test/allocator_tests.cpp' object='test/test_test_bitcoin-allocator_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-allocator_tests.obj `if test -f 'test/allocator_tests.cpp'; then $(CYGPATH_W) 'test/allocator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/allocator_tests.cpp'; fi`

test/test_test_bitcoin-base32_tests.o: test/base32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-base32_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-base32_tests.Tpo -c -o test/test_test_bitcoin-base32_tests.o `test -f 'test/base32_tests.cpp' || echo '$(srcdir)/'`test/base32_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-base32_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-base32_tests.Po
#	$(AM_V_CXX)source='test/base32_tests.cpp' object='test/test_test_bitcoin-base32_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-base32_tests.o `test -f 'test/base32_tests.cpp' || echo '$(srcdir)/'`test/base32_tests.cpp

test/test_test_bitcoin-base32_tests.obj: test/base32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-base32_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-base32_tests.Tpo -c -o test/test_test_bitcoin-base32_tests.obj `if test -f 'test/base32_tests.cpp'; then $(CYGPATH_W) 'test/base32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base32_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-base32_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-base32_tests.Po
#	$(AM_V_CXX)source='test/base32_tests.cpp' object='test/test_test_bitcoin-base32_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-base32_tests.obj `if test -f 'test/base32_tests.cpp'; then $(CYGPATH_W) 'test/base32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base32_tests.cpp'; fi`

test/test_test_bitcoin-base58_tests.o: test/base58_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-base58_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-base58_tests.Tpo -c -o test/test_test_bitcoin-base58_tests.o `test -f 'test/base58_tests.cpp' || echo '$(srcdir)/'`test/base58_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-base58_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-base58_tests.Po
#	$(AM_V_CXX)source='test/base58_tests.cpp' object='test/test_test_bitcoin-base58_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-base58_tests.o `test -f 'test/base58_tests.cpp' || echo '$(srcdir)/'`test/base58_tests.cpp

test/test_test_bitcoin-base58_tests.obj: test/base58_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-base58_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-base58_tests.Tpo -c -o test/test_test_bitcoin-base58_tests.obj `if test -f 'test/base58_tests.cpp'; then $(CYGPATH_W) 'test/base58_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base58_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-base58_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-base58_tests.Po
#	$(AM_V_CXX)source='test/base58_tests.cpp' object='test/test_test_bitcoin-base58_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-base58_tests.obj `if test -f 'test/base58_tests.cpp'; then $(CYGPATH_W) 'test/base58_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base58_tests.cpp'; fi`

test/test_test_bitcoin-base64_tests.o: test/base64_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-base64_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-base64_tests.Tpo -c -o test/test_test_bitcoin-base64_tests.o `test -f 'test/base64_tests.cpp' || echo '$(srcdir)/'`test/base64_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-base64_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-base64_tests.Po
#	$(AM_V_CXX)source='test/base64_tests.cpp' object='test/test_test_bitcoin-base64_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-base64_tests.o `test -f 'test/base64_tests.cpp' || echo '$(srcdir)/'`test/base64_tests.cpp

test/test_test_bitcoin-base64_tests.obj: test/base64_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-base64_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-base64_tests.Tpo -c -o test/test_test_bitcoin-base64_tests.obj `if test -f 'test/base64_tests.cpp'; then $(CYGPATH_W) 'test/base64_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base64_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-base64_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-base64_tests.Po
#	$(AM_V_CXX)source='test/base64_tests.cpp' object='test/test_test_bitcoin-base64_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-base64_tests.obj `if test -f 'test/base64_tests.cpp'; then $(CYGPATH_W) 'test/base64_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/base64_tests.cpp'; fi`

test/test_test_bitcoin-bip32_tests.o: test/bip32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-bip32_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-bip32_tests.Tpo -c -o test/test_test_bitcoin-bip32_tests.o `test -f 'test/bip32_tests.cpp' || echo '$(srcdir)/'`test/bip32_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-bip32_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-bip32_tests.Po
#	$(AM_V_CXX)source='test/bip32_tests.cpp' object='test/test_test_bitcoin-bip32_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-bip32_tests.o `test -f 'test/bip32_tests.cpp' || echo '$(srcdir)/'`test/bip32_tests.cpp

test/test_test_bitcoin-bip32_tests.obj: test/bip32_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-bip32_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-bip32_tests.Tpo -c -o test/test_test_bitcoin-bip32_tests.obj `if test -f 'test/bip32_tests.cpp'; then $(CYGPATH_W) 'test/bip32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bip32_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-bip32_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-bip32_tests.Po
#	$(AM_V_CXX)source='test/bip32_tests.cpp' object='test/test_test_bitcoin-bip32_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-bip32_tests.obj `if test -f 'test/bip32_tests.cpp'; then $(CYGPATH_W) 'test/bip32_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bip32_tests.cpp'; fi`

test/test_test_bitcoin-bloom_tests.o: test/bloom_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-bloom_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-bloom_tests.Tpo -c -o test/test_test_bitcoin-bloom_tests.o `test -f 'test/bloom_tests.cpp' || echo '$(srcdir)/'`test/bloom_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-bloom_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-bloom_tests.Po
#	$(AM_V_CXX)source='test/bloom_tests.cpp' object='test/test_test_bitcoin-bloom_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-bloom_tests.o `test -f 'test/bloom_tests.cpp' || echo '$(srcdir)/'`test/bloom_tests.cpp

test/test_test_bitcoin-bloom_tests.obj: test/bloom_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-bloom_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-bloom_tests.Tpo -c -o test/test_test_bitcoin-bloom_tests.obj `if test -f 'test/bloom_tests.cpp'; then $(CYGPATH_W) 'test/bloom_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bloom_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-bloom_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-bloom_tests.Po
#	$(AM_V_CXX)source='test/bloom_tests.cpp' object='test/test_test_bitcoin-bloom_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-bloom_tests.obj `if test -f 'test/bloom_tests.cpp'; then $(CYGPATH_W) 'test/bloom_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/bloom_tests.cpp'; fi`

test/test_test_bitcoin-checkblock_tests.o: test/checkblock_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-checkblock_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-checkblock_tests.Tpo -c -o test/test_test_bitcoin-checkblock_tests.o `test -f 'test/checkblock_tests.cpp' || echo '$(srcdir)/'`test/checkblock_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-checkblock_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-checkblock_tests.Po
#	$(AM_V_CXX)source='test/checkblock_tests.cpp' object='test/test_test_bitcoin-checkblock_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-checkblock_tests.o `test -f 'test/checkblock_tests.cpp' || echo '$(srcdir)/'`test/checkblock_tests.cpp

test/test_test_bitcoin-checkblock_tests.obj: test/checkblock_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-checkblock_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-checkblock_tests.Tpo -c -o test/test_test_bitcoin-checkblock_tests.obj `if test -f 'test/checkblock_tests.cpp'; then $(CYGPATH_W) 'test/checkblock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/checkblock_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-checkblock_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-checkblock_tests.Po
#	$(AM_V_CXX)source='test/checkblock_tests.cpp' object='test/test_test_bitcoin-checkblock_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-checkblock_tests.obj `if test -f 'test/checkblock_tests.cpp'; then $(CYGPATH_W) 'test/checkblock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/checkblock_tests.cpp'; fi`

test/test_test_bitcoin-Checkpoints_tests.o: test/Checkpoints_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-Checkpoints_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-Checkpoints_tests.Tpo -c -o test/test_test_bitcoin-Checkpoints_tests.o `test -f 'test/Checkpoints_tests.cpp' || echo '$(srcdir)/'`test/Checkpoints_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-Checkpoints_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-Checkpoints_tests.Po
#	$(AM_V_CXX)source='test/Checkpoints_tests.cpp' object='test/test_test_bitcoin-Checkpoints_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-Checkpoints_tests.o `test -f 'test/Checkpoints_tests.cpp' || echo '$(srcdir)/'`test/Checkpoints_tests.cpp

test/test_test_bitcoin-Checkpoints_tests.obj: test/Checkpoints_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-Checkpoints_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-Checkpoints_tests.Tpo -c -o test/test_test_bitcoin-Checkpoints_tests.obj `if test -f 'test/Checkpoints_tests.cpp'; then $(CYGPATH_W) 'test/Checkpoints_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/Checkpoints_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-Checkpoints_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-Checkpoints_tests.Po
#	$(AM_V_CXX)source='test/Checkpoints_tests.cpp' object='test/test_test_bitcoin-Checkpoints_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-Checkpoints_tests.obj `if test -f 'test/Checkpoints_tests.cpp'; then $(CYGPATH_W) 'test/Checkpoints_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/Checkpoints_tests.cpp'; fi`

test/test_test_bitcoin-coins_tests.o: test/coins_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-coins_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-coins_tests.Tpo -c -o test/test_test_bitcoin-coins_tests.o `test -f 'test/coins_tests.cpp' || echo '$(srcdir)/'`test/coins_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-coins_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-coins_tests.Po
#	$(AM_V_CXX)source='test/coins_tests.cpp' object='test/test_test_bitcoin-coins_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-coins_tests.o `test -f 'test/coins_tests.cpp' || echo '$(srcdir)/'`test/coins_tests.cpp

test/test_test_bitcoin-coins_tests.obj: test/coins_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-coins_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-coins_tests.Tpo -c -o test/test_test_bitcoin-coins_tests.obj `if test -f 'test/coins_tests.cpp'; then $(CYGPATH_W) 'test/coins_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/coins_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-coins_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-coins_tests.Po
#	$(AM_V_CXX)source='test/coins_tests.cpp' object='test/test_test_bitcoin-coins_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-coins_tests.obj `if test -f 'test/coins_tests.cpp'; then $(CYGPATH_W) 'test/coins_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/coins_tests.cpp'; fi`

test/test_test_bitcoin-compress_tests.o: test/compress_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-compress_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-compress_tests.Tpo -c -o test/test_test_bitcoin-compress_tests.o `test -f 'test/compress_tests.cpp' || echo '$(srcdir)/'`test/compress_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-compress_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-compress_tests.Po
#	$(AM_V_CXX)source='test/compress_tests.cpp' object='test/test_test_bitcoin-compress_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-compress_tests.o `test -f 'test/compress_tests.cpp' || echo '$(srcdir)/'`test/compress_tests.cpp

test/test_test_bitcoin-compress_tests.obj: test/compress_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-compress_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-compress_tests.Tpo -c -o test/test_test_bitcoin-compress_tests.obj `if test -f 'test/compress_tests.cpp'; then $(CYGPATH_W) 'test/compress_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/compress_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-compress_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-compress_tests.Po
#	$(AM_V_CXX)source='test/compress_tests.cpp' object='test/test_test_bitcoin-compress_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-compress_tests.obj `if test -f 'test/compress_tests.cpp'; then $(CYGPATH_W) 'test/compress_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/compress_tests.cpp'; fi`

test/test_test_bitcoin-crypto_tests.o: test/crypto_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-crypto_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-crypto_tests.Tpo -c -o test/test_test_bitcoin-crypto_tests.o `test -f 'test/crypto_tests.cpp' || echo '$(srcdir)/'`test/crypto_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-crypto_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-crypto_tests.Po
#	$(AM_V_CXX)source='test/crypto_tests.cpp' object='test/test_test_bitcoin-crypto_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-crypto_tests.o `test -f 'test/crypto_tests.cpp' || echo '$(srcdir)/'`test/crypto_tests.cpp

test/test_test_bitcoin-crypto_tests.obj: test/crypto_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-crypto_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-crypto_tests.Tpo -c -o test/test_test_bitcoin-crypto_tests.obj `if test -f 'test/crypto_tests.cpp'; then $(CYGPATH_W) 'test/crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/crypto_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-crypto_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-crypto_tests.Po
#	$(AM_V_CXX)source='test/crypto_tests.cpp' object='test/test_test_bitcoin-crypto_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-crypto_tests.obj `if test -f 'test/crypto_tests.cpp'; then $(CYGPATH_W) 'test/crypto_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/crypto_tests.cpp'; fi`

test/test_test_bitcoin-DoS_tests.o: test/DoS_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-DoS_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-DoS_tests.Tpo -c -o test/test_test_bitcoin-DoS_tests.o `test -f 'test/DoS_tests.cpp' || echo '$(srcdir)/'`test/DoS_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-DoS_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-DoS_tests.Po
#	$(AM_V_CXX)source='test/DoS_tests.cpp' object='test/test_test_bitcoin-DoS_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-DoS_tests.o `test -f 'test/DoS_tests.cpp' || echo '$(srcdir)/'`test/DoS_tests.cpp

test/test_test_bitcoin-DoS_tests.obj: test/DoS_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-DoS_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-DoS_tests.Tpo -c -o test/test_test_bitcoin-DoS_tests.obj `if test -f 'test/DoS_tests.cpp'; then $(CYGPATH_W) 'test/DoS_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/DoS_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-DoS_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-DoS_tests.Po
#	$(AM_V_CXX)source='test/DoS_tests.cpp' object='test/test_test_bitcoin-DoS_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-DoS_tests.obj `if test -f 'test/DoS_tests.cpp'; then $(CYGPATH_W) 'test/DoS_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/DoS_tests.cpp'; fi`

test/test_test_bitcoin-equihash_tests.o: test/equihash_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-equihash_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-equihash_tests.Tpo -c -o test/test_test_bitcoin-equihash_tests.o `test -f 'test/equihash_tests.cpp' || echo '$(srcdir)/'`test/equihash_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-equihash_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-equihash_tests.Po
#	$(AM_V_CXX)source='test/equihash_tests.cpp' object='test/test_test_bitcoin-equihash_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-equihash_tests.o `test -f 'test/equihash_tests.cpp' || echo '$(srcdir)/'`test/equihash_tests.cpp

test/test_test_bitcoin-equihash_tests.obj: test/equihash_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-equihash_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-equihash_tests.Tpo -c -o test/test_test_bitcoin-equihash_tests.obj `if test -f 'test/equihash_tests.cpp'; then $(CYGPATH_W) 'test/equihash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/equihash_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-equihash_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-equihash_tests.Po
#	$(AM_V_CXX)source='test/equihash_tests.cpp' object='test/test_test_bitcoin-equihash_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-equihash_tests.obj `if test -f 'test/equihash_tests.cpp'; then $(CYGPATH_W) 'test/equihash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/equihash_tests.cpp'; fi`

test/test_test_bitcoin-getarg_tests.o: test/getarg_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-getarg_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-getarg_tests.Tpo -c -o test/test_test_bitcoin-getarg_tests.o `test -f 'test/getarg_tests.cpp' || echo '$(srcdir)/'`test/getarg_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-getarg_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-getarg_tests.Po
#	$(AM_V_CXX)source='test/getarg_tests.cpp' object='test/test_test_bitcoin-getarg_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-getarg_tests.o `test -f 'test/getarg_tests.cpp' || echo '$(srcdir)/'`test/getarg_tests.cpp

test/test_test_bitcoin-getarg_tests.obj: test/getarg_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-getarg_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-getarg_tests.Tpo -c -o test/test_test_bitcoin-getarg_tests.obj `if test -f 'test/getarg_tests.cpp'; then $(CYGPATH_W) 'test/getarg_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/getarg_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-getarg_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-getarg_tests.Po
#	$(AM_V_CXX)source='test/getarg_tests.cpp' object='test/test_test_bitcoin-getarg_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-getarg_tests.obj `if test -f 'test/getarg_tests.cpp'; then $(CYGPATH_W) 'test/getarg_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/getarg_tests.cpp'; fi`

test/test_test_bitcoin-hash_tests.o: test/hash_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-hash_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-hash_tests.Tpo -c -o test/test_test_bitcoin-hash_tests.o `test -f 'test/hash_tests.cpp' || echo '$(srcdir)/'`test/hash_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-hash_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-hash_tests.Po
#	$(AM_V_CXX)source='test/hash_tests.cpp' object='test/test_test_bitcoin-hash_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-hash_tests.o `test -f 'test/hash_tests.cpp' || echo '$(srcdir)/'`test/hash_tests.cpp

test/test_test_bitcoin-hash_tests.obj: test/hash_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-hash_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-hash_tests.Tpo -c -o test/test_test_bitcoin-hash_tests.obj `if test -f 'test/hash_tests.cpp'; then $(CYGPATH_W) 'test/hash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/hash_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-hash_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-hash_tests.Po
#	$(AM_V_CXX)source='test/hash_tests.cpp' object='test/test_test_bitcoin-hash_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-hash_tests.obj `if test -f 'test/hash_tests.cpp'; then $(CYGPATH_W) 'test/hash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/hash_tests.cpp'; fi`

test/test_test_bitcoin-key_tests.o: test/key_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-key_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-key_tests.Tpo -c -o test/test_test_bitcoin-key_tests.o `test -f 'test/key_tests.cpp' || echo '$(srcdir)/'`test/key_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-key_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-key_tests.Po
#	$(AM_V_CXX)source='test/key_tests.cpp' object='test/test_test_bitcoin-key_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-key_tests.o `test -f 'test/key_tests.cpp' || echo '$(srcdir)/'`test/key_tests.cpp

test/test_test_bitcoin-key_tests.obj: test/key_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-key_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-key_tests.Tpo -c -o test/test_test_bitcoin-key_tests.obj `if test -f 'test/key_tests.cpp'; then $(CYGPATH_W) 'test/key_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-key_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-key_tests.Po
#	$(AM_V_CXX)source='test/key_tests.cpp' object='test/test_test_bitcoin-key_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-key_tests.obj `if test -f 'test/key_tests.cpp'; then $(CYGPATH_W) 'test/key_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/key_tests.cpp'; fi`

test/test_test_bitcoin-main_tests.o: test/main_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-main_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-main_tests.Tpo -c -o test/test_test_bitcoin-main_tests.o `test -f 'test/main_tests.cpp' || echo '$(srcdir)/'`test/main_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-main_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-main_tests.Po
#	$(AM_V_CXX)source='test/main_tests.cpp' object='test/test_test_bitcoin-main_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-main_tests.o `test -f 'test/main_tests.cpp' || echo '$(srcdir)/'`test/main_tests.cpp

test/test_test_bitcoin-main_tests.obj: test/main_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-main_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-main_tests.Tpo -c -o test/test_test_bitcoin-main_tests.obj `if test -f 'test/main_tests.cpp'; then $(CYGPATH_W) 'test/main_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/main_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-main_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-main_tests.Po
#	$(AM_V_CXX)source='test/main_tests.cpp' object='test/test_test_bitcoin-main_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-main_tests.obj `if test -f 'test/main_tests.cpp'; then $(CYGPATH_W) 'test/main_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/main_tests.cpp'; fi`

test/test_test_bitcoin-mempool_tests.o: test/mempool_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-mempool_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-mempool_tests.Tpo -c -o test/test_test_bitcoin-mempool_tests.o `test -f 'test/mempool_tests.cpp' || echo '$(srcdir)/'`test/mempool_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-mempool_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-mempool_tests.Po
#	$(AM_V_CXX)source='test/mempool_tests.cpp' object='test/test_test_bitcoin-mempool_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-mempool_tests.o `test -f 'test/mempool_tests.cpp' || echo '$(srcdir)/'`test/mempool_tests.cpp

test/test_test_bitcoin-mempool_tests.obj: test/mempool_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-mempool_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-mempool_tests.Tpo -c -o test/test_test_bitcoin-mempool_tests.obj `if test -f 'test/mempool_tests.cpp'; then $(CYGPATH_W) 'test/mempool_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mempool_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-mempool_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-mempool_tests.Po
#	$(AM_V_CXX)source='test/mempool_tests.cpp' object='test/test_test_bitcoin-mempool_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-mempool_tests.obj `if test -f 'test/mempool_tests.cpp'; then $(CYGPATH_W) 'test/mempool_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mempool_tests.cpp'; fi`

test/test_test_bitcoin-miner_tests.o: test/miner_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-miner_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-miner_tests.Tpo -c -o test/test_test_bitcoin-miner_tests.o `test -f 'test/miner_tests.cpp' || echo '$(srcdir)/'`test/miner_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-miner_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-miner_tests.Po
#	$(AM_V_CXX)source='test/miner_tests.cpp' object='test/test_test_bitcoin-miner_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-miner_tests.o `test -f 'test/miner_tests.cpp' || echo '$(srcdir)/'`test/miner_tests.cpp

test/test_test_bitcoin-miner_tests.obj: test/miner_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-miner_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-miner_tests.Tpo -c -o test/test_test_bitcoin-miner_tests.obj `if test -f 'test/miner_tests.cpp'; then $(CYGPATH_W) 'test/miner_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-miner_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-miner_tests.Po
#	$(AM_V_CXX)source='test/miner_tests.cpp' object='test/test_test_bitcoin-miner_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-miner_tests.obj `if test -f 'test/miner_tests.cpp'; then $(CYGPATH_W) 'test/miner_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/miner_tests.cpp'; fi`

test/test_test_bitcoin-mruset_tests.o: test/mruset_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-mruset_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-mruset_tests.Tpo -c -o test/test_test_bitcoin-mruset_tests.o `test -f 'test/mruset_tests.cpp' || echo '$(srcdir)/'`test/mruset_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-mruset_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-mruset_tests.Po
#	$(AM_V_CXX)source='test/mruset_tests.cpp' object='test/test_test_bitcoin-mruset_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-mruset_tests.o `test -f 'test/mruset_tests.cpp' || echo '$(srcdir)/'`test/mruset_tests.cpp

test/test_test_bitcoin-mruset_tests.obj: test/mruset_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-mruset_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-mruset_tests.Tpo -c -o test/test_test_bitcoin-mruset_tests.obj `if test -f 'test/mruset_tests.cpp'; then $(CYGPATH_W) 'test/mruset_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mruset_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-mruset_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-mruset_tests.Po
#	$(AM_V_CXX)source='test/mruset_tests.cpp' object='test/test_test_bitcoin-mruset_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-mruset_tests.obj `if test -f 'test/mruset_tests.cpp'; then $(CYGPATH_W) 'test/mruset_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/mruset_tests.cpp'; fi`

test/test_test_bitcoin-multisig_tests.o: test/multisig_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-multisig_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-multisig_tests.Tpo -c -o test/test_test_bitcoin-multisig_tests.o `test -f 'test/multisig_tests.cpp' || echo '$(srcdir)/'`test/multisig_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-multisig_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-multisig_tests.Po
#	$(AM_V_CXX)source='test/multisig_tests.cpp' object='test/test_test_bitcoin-multisig_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-multisig_tests.o `test -f 'test/multisig_tests.cpp' || echo '$(srcdir)/'`test/multisig_tests.cpp

test/test_test_bitcoin-multisig_tests.obj: test/multisig_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-multisig_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-multisig_tests.Tpo -c -o test/test_test_bitcoin-multisig_tests.obj `if test -f 'test/multisig_tests.cpp'; then $(CYGPATH_W) 'test/multisig_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/multisig_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-multisig_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-multisig_tests.Po
#	$(AM_V_CXX)source='test/multisig_tests.cpp' object='test/test_test_bitcoin-multisig_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-multisig_tests.obj `if test -f 'test/multisig_tests.cpp'; then $(CYGPATH_W) 'test/multisig_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/multisig_tests.cpp'; fi`

test/test_test_bitcoin-netbase_tests.o: test/netbase_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-netbase_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-netbase_tests.Tpo -c -o test/test_test_bitcoin-netbase_tests.o `test -f 'test/netbase_tests.cpp' || echo '$(srcdir)/'`test/netbase_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-netbase_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-netbase_tests.Po
#	$(AM_V_CXX)source='test/netbase_tests.cpp' object='test/test_test_bitcoin-netbase_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-netbase_tests.o `test -f 'test/netbase_tests.cpp' || echo '$(srcdir)/'`test/netbase_tests.cpp

test/test_test_bitcoin-netbase_tests.obj: test/netbase_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-netbase_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-netbase_tests.Tpo -c -o test/test_test_bitcoin-netbase_tests.obj `if test -f 'test/netbase_tests.cpp'; then $(CYGPATH_W) 'test/netbase_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/netbase_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-netbase_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-netbase_tests.Po
#	$(AM_V_CXX)source='test/netbase_tests.cpp' object='test/test_test_bitcoin-netbase_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-netbase_tests.obj `if test -f 'test/netbase_tests.cpp'; then $(CYGPATH_W) 'test/netbase_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/netbase_tests.cpp'; fi`

test/test_test_bitcoin-pmt_tests.o: test/pmt_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-pmt_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-pmt_tests.Tpo -c -o test/test_test_bitcoin-pmt_tests.o `test -f 'test/pmt_tests.cpp' || echo '$(srcdir)/'`test/pmt_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-pmt_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-pmt_tests.Po
#	$(AM_V_CXX)source='test/pmt_tests.cpp' object='test/test_test_bitcoin-pmt_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-pmt_tests.o `test -f 'test/pmt_tests.cpp' || echo '$(srcdir)/'`test/pmt_tests.cpp

test/test_test_bitcoin-pmt_tests.obj: test/pmt_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-pmt_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-pmt_tests.Tpo -c -o test/test_test_bitcoin-pmt_tests.obj `if test -f 'test/pmt_tests.cpp'; then $(CYGPATH_W) 'test/pmt_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pmt_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-pmt_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-pmt_tests.Po
#	$(AM_V_CXX)source='test/pmt_tests.cpp' object='test/test_test_bitcoin-pmt_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-pmt_tests.obj `if test -f 'test/pmt_tests.cpp'; then $(CYGPATH_W) 'test/pmt_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pmt_tests.cpp'; fi`

test/test_test_bitcoin-policyestimator_tests.o: test/policyestimator_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-policyestimator_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-policyestimator_tests.Tpo -c -o test/test_test_bitcoin-policyestimator_tests.o `test -f 'test/policyestimator_tests.cpp' || echo '$(srcdir)/'`test/policyestimator_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-policyestimator_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-policyestimator_tests.Po
#	$(AM_V_CXX)source='test/policyestimator_tests.cpp' object='test/test_test_bitcoin-policyestimator_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-policyestimator_tests.o `test -f 'test/policyestimator_tests.cpp' || echo '$(srcdir)/'`test/policyestimator_tests.cpp

test/test_test_bitcoin-policyestimator_tests.obj: test/policyestimator_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-policyestimator_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-policyestimator_tests.Tpo -c -o test/test_test_bitcoin-policyestimator_tests.obj `if test -f 'test/policyestimator_tests.cpp'; then $(CYGPATH_W) 'test/policyestimator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/policyestimator_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-policyestimator_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-policyestimator_tests.Po
#	$(AM_V_CXX)source='test/policyestimator_tests.cpp' object='test/test_test_bitcoin-policyestimator_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-policyestimator_tests.obj `if test -f 'test/policyestimator_tests.cpp'; then $(CYGPATH_W) 'test/policyestimator_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/policyestimator_tests.cpp'; fi`

test/test_test_bitcoin-pow_tests.o: test/pow_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-pow_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-pow_tests.Tpo -c -o test/test_test_bitcoin-pow_tests.o `test -f 'test/pow_tests.cpp' || echo '$(srcdir)/'`test/pow_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-pow_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-pow_tests.Po
#	$(AM_V_CXX)source='test/pow_tests.cpp' object='test/test_test_bitcoin-pow_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-pow_tests.o `test -f 'test/pow_tests.cpp' || echo '$(srcdir)/'`test/pow_tests.cpp

test/test_test_bitcoin-pow_tests.obj: test/pow_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-pow_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-pow_tests.Tpo -c -o test/test_test_bitcoin-pow_tests.obj `if test -f 'test/pow_tests.cpp'; then $(CYGPATH_W) 'test/pow_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pow_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-pow_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-pow_tests.Po
#	$(AM_V_CXX)source='test/pow_tests.cpp' object='test/test_test_bitcoin-pow_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-pow_tests.obj `if test -f 'test/pow_tests.cpp'; then $(CYGPATH_W) 'test/pow_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/pow_tests.cpp'; fi`

test/test_test_bitcoin-raii_event_tests.o: test/raii_event_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-raii_event_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-raii_event_tests.Tpo -c -o test/test_test_bitcoin-raii_event_tests.o `test -f 'test/raii_event_tests.cpp' || echo '$(srcdir)/'`test/raii_event_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-raii_event_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-raii_event_tests.Po
#	$(AM_V_CXX)source='test/raii_event_tests.cpp' object='test/test_test_bitcoin-raii_event_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-raii_event_tests.o `test -f 'test/raii_event_tests.cpp' || echo '$(srcdir)/'`test/raii_event_tests.cpp

test/test_test_bitcoin-raii_event_tests.obj: test/raii_event_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-raii_event_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-raii_event_tests.Tpo -c -o test/test_test_bitcoin-raii_event_tests.obj `if test -f 'test/raii_event_tests.cpp'; then $(CYGPATH_W) 'test/raii_event_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/raii_event_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-raii_event_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-raii_event_tests.Po
#	$(AM_V_CXX)source='test/raii_event_tests.cpp' object='test/test_test_bitcoin-raii_event_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-raii_event_tests.obj `if test -f 'test/raii_event_tests.cpp'; then $(CYGPATH_W) 'test/raii_event_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/raii_event_tests.cpp'; fi`

test/test_test_bitcoin-reverselock_tests.o: test/reverselock_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-reverselock_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-reverselock_tests.Tpo -c -o test/test_test_bitcoin-reverselock_tests.o `test -f 'test/reverselock_tests.cpp' || echo '$(srcdir)/'`test/reverselock_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-reverselock_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-reverselock_tests.Po
#	$(AM_V_CXX)source='test/reverselock_tests.cpp' object='test/test_test_bitcoin-reverselock_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-reverselock_tests.o `test -f 'test/reverselock_tests.cpp' || echo '$(srcdir)/'`test/reverselock_tests.cpp

test/test_test_bitcoin-reverselock_tests.obj: test/reverselock_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-reverselock_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-reverselock_tests.Tpo -c -o test/test_test_bitcoin-reverselock_tests.obj `if test -f 'test/reverselock_tests.cpp'; then $(CYGPATH_W) 'test/reverselock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/reverselock_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-reverselock_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-reverselock_tests.Po
#	$(AM_V_CXX)source='test/reverselock_tests.cpp' object='test/test_test_bitcoin-reverselock_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-reverselock_tests.obj `if test -f 'test/reverselock_tests.cpp'; then $(CYGPATH_W) 'test/reverselock_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/reverselock_tests.cpp'; fi`

test/test_test_bitcoin-rpc_tests.o: test/rpc_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-rpc_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-rpc_tests.Tpo -c -o test/test_test_bitcoin-rpc_tests.o `test -f 'test/rpc_tests.cpp' || echo '$(srcdir)/'`test/rpc_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-rpc_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-rpc_tests.Po
#	$(AM_V_CXX)source='test/rpc_tests.cpp' object='test/test_test_bitcoin-rpc_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-rpc_tests.o `test -f 'test/rpc_tests.cpp' || echo '$(srcdir)/'`test/rpc_tests.cpp

test/test_test_bitcoin-rpc_tests.obj: test/rpc_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-rpc_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-rpc_tests.Tpo -c -o test/test_test_bitcoin-rpc_tests.obj `if test -f 'test/rpc_tests.cpp'; then $(CYGPATH_W) 'test/rpc_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/rpc_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-rpc_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-rpc_tests.Po
#	$(AM_V_CXX)source='test/rpc_tests.cpp' object='test/test_test_bitcoin-rpc_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-rpc_tests.obj `if test -f 'test/rpc_tests.cpp'; then $(CYGPATH_W) 'test/rpc_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/rpc_tests.cpp'; fi`

test/test_test_bitcoin-sanity_tests.o: test/sanity_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-sanity_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-sanity_tests.Tpo -c -o test/test_test_bitcoin-sanity_tests.o `test -f 'test/sanity_tests.cpp' || echo '$(srcdir)/'`test/sanity_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-sanity_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-sanity_tests.Po
#	$(AM_V_CXX)source='test/sanity_tests.cpp' object='test/test_test_bitcoin-sanity_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-sanity_tests.o `test -f 'test/sanity_tests.cpp' || echo '$(srcdir)/'`test/sanity_tests.cpp

test/test_test_bitcoin-sanity_tests.obj: test/sanity_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-sanity_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-sanity_tests.Tpo -c -o test/test_test_bitcoin-sanity_tests.obj `if test -f 'test/sanity_tests.cpp'; then $(CYGPATH_W) 'test/sanity_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sanity_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-sanity_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-sanity_tests.Po
#	$(AM_V_CXX)source='test/sanity_tests.cpp' object='test/test_test_bitcoin-sanity_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-sanity_tests.obj `if test -f 'test/sanity_tests.cpp'; then $(CYGPATH_W) 'test/sanity_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sanity_tests.cpp'; fi`

test/test_test_bitcoin-scheduler_tests.o: test/scheduler_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-scheduler_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-scheduler_tests.Tpo -c -o test/test_test_bitcoin-scheduler_tests.o `test -f 'test/scheduler_tests.cpp' || echo '$(srcdir)/'`test/scheduler_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-scheduler_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-scheduler_tests.Po
#	$(AM_V_CXX)source='test/scheduler_tests.cpp' object='test/test_test_bitcoin-scheduler_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-scheduler_tests.o `test -f 'test/scheduler_tests.cpp' || echo '$(srcdir)/'`test/scheduler_tests.cpp

test/test_test_bitcoin-scheduler_tests.obj: test/scheduler_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-scheduler_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-scheduler_tests.Tpo -c -o test/test_test_bitcoin-scheduler_tests.obj `if test -f 'test/scheduler_tests.cpp'; then $(CYGPATH_W) 'test/scheduler_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scheduler_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-scheduler_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-scheduler_tests.Po
#	$(AM_V_CXX)source='test/scheduler_tests.cpp' object='test/test_test_bitcoin-scheduler_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-scheduler_tests.obj `if test -f 'test/scheduler_tests.cpp'; then $(CYGPATH_W) 'test/scheduler_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scheduler_tests.cpp'; fi`

test/test_test_bitcoin-script_P2SH_tests.o: test/script_P2SH_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-script_P2SH_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-script_P2SH_tests.Tpo -c -o test/test_test_bitcoin-script_P2SH_tests.o `test -f 'test/script_P2SH_tests.cpp' || echo '$(srcdir)/'`test/script_P2SH_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-script_P2SH_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-script_P2SH_tests.Po
#	$(AM_V_CXX)source='test/script_P2SH_tests.cpp' object='test/test_test_bitcoin-script_P2SH_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-script_P2SH_tests.o `test -f 'test/script_P2SH_tests.cpp' || echo '$(srcdir)/'`test/script_P2SH_tests.cpp

test/test_test_bitcoin-script_P2SH_tests.obj: test/script_P2SH_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-script_P2SH_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-script_P2SH_tests.Tpo -c -o test/test_test_bitcoin-script_P2SH_tests.obj `if test -f 'test/script_P2SH_tests.cpp'; then $(CYGPATH_W) 'test/script_P2SH_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_P2SH_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-script_P2SH_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-script_P2SH_tests.Po
#	$(AM_V_CXX)source='test/script_P2SH_tests.cpp' object='test/test_test_bitcoin-script_P2SH_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-script_P2SH_tests.obj `if test -f 'test/script_P2SH_tests.cpp'; then $(CYGPATH_W) 'test/script_P2SH_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_P2SH_tests.cpp'; fi`

test/test_test_bitcoin-script_tests.o: test/script_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-script_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-script_tests.Tpo -c -o test/test_test_bitcoin-script_tests.o `test -f 'test/script_tests.cpp' || echo '$(srcdir)/'`test/script_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-script_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-script_tests.Po
#	$(AM_V_CXX)source='test/script_tests.cpp' object='test/test_test_bitcoin-script_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-script_tests.o `test -f 'test/script_tests.cpp' || echo '$(srcdir)/'`test/script_tests.cpp

test/test_test_bitcoin-script_tests.obj: test/script_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-script_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-script_tests.Tpo -c -o test/test_test_bitcoin-script_tests.obj `if test -f 'test/script_tests.cpp'; then $(CYGPATH_W) 'test/script_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-script_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-script_tests.Po
#	$(AM_V_CXX)source='test/script_tests.cpp' object='test/test_test_bitcoin-script_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-script_tests.obj `if test -f 'test/script_tests.cpp'; then $(CYGPATH_W) 'test/script_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/script_tests.cpp'; fi`

test/test_test_bitcoin-scriptnum_tests.o: test/scriptnum_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-scriptnum_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-scriptnum_tests.Tpo -c -o test/test_test_bitcoin-scriptnum_tests.o `test -f 'test/scriptnum_tests.cpp' || echo '$(srcdir)/'`test/scriptnum_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-scriptnum_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-scriptnum_tests.Po
#	$(AM_V_CXX)source='test/scriptnum_tests.cpp' object='test/test_test_bitcoin-scriptnum_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-scriptnum_tests.o `test -f 'test/scriptnum_tests.cpp' || echo '$(srcdir)/'`test/scriptnum_tests.cpp

test/test_test_bitcoin-scriptnum_tests.obj: test/scriptnum_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-scriptnum_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-scriptnum_tests.Tpo -c -o test/test_test_bitcoin-scriptnum_tests.obj `if test -f 'test/scriptnum_tests.cpp'; then $(CYGPATH_W) 'test/scriptnum_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scriptnum_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-scriptnum_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-scriptnum_tests.Po
#	$(AM_V_CXX)source='test/scriptnum_tests.cpp' object='test/test_test_bitcoin-scriptnum_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-scriptnum_tests.obj `if test -f 'test/scriptnum_tests.cpp'; then $(CYGPATH_W) 'test/scriptnum_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/scriptnum_tests.cpp'; fi`

test/test_test_bitcoin-serialize_tests.o: test/serialize_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-serialize_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-serialize_tests.Tpo -c -o test/test_test_bitcoin-serialize_tests.o `test -f 'test/serialize_tests.cpp' || echo '$(srcdir)/'`test/serialize_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-serialize_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-serialize_tests.Po
#	$(AM_V_CXX)source='test/serialize_tests.cpp' object='test/test_test_bitcoin-serialize_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-serialize_tests.o `test -f 'test/serialize_tests.cpp' || echo '$(srcdir)/'`test/serialize_tests.cpp

test/test_test_bitcoin-serialize_tests.obj: test/serialize_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-serialize_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-serialize_tests.Tpo -c -o test/test_test_bitcoin-serialize_tests.obj `if test -f 'test/serialize_tests.cpp'; then $(CYGPATH_W) 'test/serialize_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/serialize_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-serialize_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-serialize_tests.Po
#	$(AM_V_CXX)source='test/serialize_tests.cpp' object='test/test_test_bitcoin-serialize_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-serialize_tests.obj `if test -f 'test/serialize_tests.cpp'; then $(CYGPATH_W) 'test/serialize_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/serialize_tests.cpp'; fi`

test/test_test_bitcoin-sighash_tests.o: test/sighash_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-sighash_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-sighash_tests.Tpo -c -o test/test_test_bitcoin-sighash_tests.o `test -f 'test/sighash_tests.cpp' || echo '$(srcdir)/'`test/sighash_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-sighash_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-sighash_tests.Po
#	$(AM_V_CXX)source='test/sighash_tests.cpp' object='test/test_test_bitcoin-sighash_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-sighash_tests.o `test -f 'test/sighash_tests.cpp' || echo '$(srcdir)/'`test/sighash_tests.cpp

test/test_test_bitcoin-sighash_tests.obj: test/sighash_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-sighash_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-sighash_tests.Tpo -c -o test/test_test_bitcoin-sighash_tests.obj `if test -f 'test/sighash_tests.cpp'; then $(CYGPATH_W) 'test/sighash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sighash_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-sighash_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-sighash_tests.Po
#	$(AM_V_CXX)source='test/sighash_tests.cpp' object='test/test_test_bitcoin-sighash_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-sighash_tests.obj `if test -f 'test/sighash_tests.cpp'; then $(CYGPATH_W) 'test/sighash_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sighash_tests.cpp'; fi`

test/test_test_bitcoin-sigopcount_tests.o: test/sigopcount_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-sigopcount_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-sigopcount_tests.Tpo -c -o test/test_test_bitcoin-sigopcount_tests.o `test -f 'test/sigopcount_tests.cpp' || echo '$(srcdir)/'`test/sigopcount_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-sigopcount_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-sigopcount_tests.Po
#	$(AM_V_CXX)source='test/sigopcount_tests.cpp' object='test/test_test_bitcoin-sigopcount_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-sigopcount_tests.o `test -f 'test/sigopcount_tests.cpp' || echo '$(srcdir)/'`test/sigopcount_tests.cpp

test/test_test_bitcoin-sigopcount_tests.obj: test/sigopcount_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-sigopcount_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-sigopcount_tests.Tpo -c -o test/test_test_bitcoin-sigopcount_tests.obj `if test -f 'test/sigopcount_tests.cpp'; then $(CYGPATH_W) 'test/sigopcount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sigopcount_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-sigopcount_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-sigopcount_tests.Po
#	$(AM_V_CXX)source='test/sigopcount_tests.cpp' object='test/test_test_bitcoin-sigopcount_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-sigopcount_tests.obj `if test -f 'test/sigopcount_tests.cpp'; then $(CYGPATH_W) 'test/sigopcount_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sigopcount_tests.cpp'; fi`

test/test_test_bitcoin-skiplist_tests.o: test/skiplist_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-skiplist_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-skiplist_tests.Tpo -c -o test/test_test_bitcoin-skiplist_tests.o `test -f 'test/skiplist_tests.cpp' || echo '$(srcdir)/'`test/skiplist_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-skiplist_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-skiplist_tests.Po
#	$(AM_V_CXX)source='test/skiplist_tests.cpp' object='test/test_test_bitcoin-skiplist_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-skiplist_tests.o `test -f 'test/skiplist_tests.cpp' || echo '$(srcdir)/'`test/skiplist_tests.cpp

test/test_test_bitcoin-skiplist_tests.obj: test/skiplist_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-skiplist_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-skiplist_tests.Tpo -c -o test/test_test_bitcoin-skiplist_tests.obj `if test -f 'test/skiplist_tests.cpp'; then $(CYGPATH_W) 'test/skiplist_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/skiplist_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-skiplist_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-skiplist_tests.Po
#	$(AM_V_CXX)source='test/skiplist_tests.cpp' object='test/test_test_bitcoin-skiplist_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-skiplist_tests.obj `if test -f 'test/skiplist_tests.cpp'; then $(CYGPATH_W) 'test/skiplist_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/skiplist_tests.cpp'; fi`

test/test_test_bitcoin-test_bitcoin.o: test/test_bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-test_bitcoin.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-test_bitcoin.Tpo -c -o test/test_test_bitcoin-test_bitcoin.o `test -f 'test/test_bitcoin.cpp' || echo '$(srcdir)/'`test/test_bitcoin.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-test_bitcoin.Tpo test/$(DEPDIR)/test_test_bitcoin-test_bitcoin.Po
#	$(AM_V_CXX)source='test/test_bitcoin.cpp' object='test/test_test_bitcoin-test_bitcoin.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-test_bitcoin.o `test -f 'test/test_bitcoin.cpp' || echo '$(srcdir)/'`test/test_bitcoin.cpp

test/test_test_bitcoin-test_bitcoin.obj: test/test_bitcoin.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-test_bitcoin.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-test_bitcoin.Tpo -c -o test/test_test_bitcoin-test_bitcoin.obj `if test -f 'test/test_bitcoin.cpp'; then $(CYGPATH_W) 'test/test_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-test_bitcoin.Tpo test/$(DEPDIR)/test_test_bitcoin-test_bitcoin.Po
#	$(AM_V_CXX)source='test/test_bitcoin.cpp' object='test/test_test_bitcoin-test_bitcoin.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-test_bitcoin.obj `if test -f 'test/test_bitcoin.cpp'; then $(CYGPATH_W) 'test/test_bitcoin.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin.cpp'; fi`

test/test_test_bitcoin-timedata_tests.o: test/timedata_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-timedata_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-timedata_tests.Tpo -c -o test/test_test_bitcoin-timedata_tests.o `test -f 'test/timedata_tests.cpp' || echo '$(srcdir)/'`test/timedata_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-timedata_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-timedata_tests.Po
#	$(AM_V_CXX)source='test/timedata_tests.cpp' object='test/test_test_bitcoin-timedata_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-timedata_tests.o `test -f 'test/timedata_tests.cpp' || echo '$(srcdir)/'`test/timedata_tests.cpp

test/test_test_bitcoin-timedata_tests.obj: test/timedata_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-timedata_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-timedata_tests.Tpo -c -o test/test_test_bitcoin-timedata_tests.obj `if test -f 'test/timedata_tests.cpp'; then $(CYGPATH_W) 'test/timedata_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/timedata_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-timedata_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-timedata_tests.Po
#	$(AM_V_CXX)source='test/timedata_tests.cpp' object='test/test_test_bitcoin-timedata_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-timedata_tests.obj `if test -f 'test/timedata_tests.cpp'; then $(CYGPATH_W) 'test/timedata_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/timedata_tests.cpp'; fi`

test/test_test_bitcoin-torcontrol_tests.o: test/torcontrol_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-torcontrol_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-torcontrol_tests.Tpo -c -o test/test_test_bitcoin-torcontrol_tests.o `test -f 'test/torcontrol_tests.cpp' || echo '$(srcdir)/'`test/torcontrol_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-torcontrol_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-torcontrol_tests.Po
#	$(AM_V_CXX)source='test/torcontrol_tests.cpp' object='test/test_test_bitcoin-torcontrol_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-torcontrol_tests.o `test -f 'test/torcontrol_tests.cpp' || echo '$(srcdir)/'`test/torcontrol_tests.cpp

test/test_test_bitcoin-torcontrol_tests.obj: test/torcontrol_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-torcontrol_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-torcontrol_tests.Tpo -c -o test/test_test_bitcoin-torcontrol_tests.obj `if test -f 'test/torcontrol_tests.cpp'; then $(CYGPATH_W) 'test/torcontrol_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/torcontrol_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-torcontrol_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-torcontrol_tests.Po
#	$(AM_V_CXX)source='test/torcontrol_tests.cpp' object='test/test_test_bitcoin-torcontrol_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-torcontrol_tests.obj `if test -f 'test/torcontrol_tests.cpp'; then $(CYGPATH_W) 'test/torcontrol_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/torcontrol_tests.cpp'; fi`

test/test_test_bitcoin-transaction_tests.o: test/transaction_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-transaction_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-transaction_tests.Tpo -c -o test/test_test_bitcoin-transaction_tests.o `test -f 'test/transaction_tests.cpp' || echo '$(srcdir)/'`test/transaction_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-transaction_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-transaction_tests.Po
#	$(AM_V_CXX)source='test/transaction_tests.cpp' object='test/test_test_bitcoin-transaction_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-transaction_tests.o `test -f 'test/transaction_tests.cpp' || echo '$(srcdir)/'`test/transaction_tests.cpp

test/test_test_bitcoin-transaction_tests.obj: test/transaction_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-transaction_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-transaction_tests.Tpo -c -o test/test_test_bitcoin-transaction_tests.obj `if test -f 'test/transaction_tests.cpp'; then $(CYGPATH_W) 'test/transaction_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/transaction_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-transaction_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-transaction_tests.Po
#	$(AM_V_CXX)source='test/transaction_tests.cpp' object='test/test_test_bitcoin-transaction_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-transaction_tests.obj `if test -f 'test/transaction_tests.cpp'; then $(CYGPATH_W) 'test/transaction_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/transaction_tests.cpp'; fi`

test/test_test_bitcoin-uint256_tests.o: test/uint256_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-uint256_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-uint256_tests.Tpo -c -o test/test_test_bitcoin-uint256_tests.o `test -f 'test/uint256_tests.cpp' || echo '$(srcdir)/'`test/uint256_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-uint256_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-uint256_tests.Po
#	$(AM_V_CXX)source='test/uint256_tests.cpp' object='test/test_test_bitcoin-uint256_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-uint256_tests.o `test -f 'test/uint256_tests.cpp' || echo '$(srcdir)/'`test/uint256_tests.cpp

test/test_test_bitcoin-uint256_tests.obj: test/uint256_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-uint256_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-uint256_tests.Tpo -c -o test/test_test_bitcoin-uint256_tests.obj `if test -f 'test/uint256_tests.cpp'; then $(CYGPATH_W) 'test/uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/uint256_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-uint256_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-uint256_tests.Po
#	$(AM_V_CXX)source='test/uint256_tests.cpp' object='test/test_test_bitcoin-uint256_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-uint256_tests.obj `if test -f 'test/uint256_tests.cpp'; then $(CYGPATH_W) 'test/uint256_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/uint256_tests.cpp'; fi`

test/test_test_bitcoin-univalue_tests.o: test/univalue_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-univalue_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-univalue_tests.Tpo -c -o test/test_test_bitcoin-univalue_tests.o `test -f 'test/univalue_tests.cpp' || echo '$(srcdir)/'`test/univalue_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-univalue_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-univalue_tests.Po
#	$(AM_V_CXX)source='test/univalue_tests.cpp' object='test/test_test_bitcoin-univalue_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-univalue_tests.o `test -f 'test/univalue_tests.cpp' || echo '$(srcdir)/'`test/univalue_tests.cpp

test/test_test_bitcoin-univalue_tests.obj: test/univalue_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-univalue_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-univalue_tests.Tpo -c -o test/test_test_bitcoin-univalue_tests.obj `if test -f 'test/univalue_tests.cpp'; then $(CYGPATH_W) 'test/univalue_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/univalue_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-univalue_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-univalue_tests.Po
#	$(AM_V_CXX)source='test/univalue_tests.cpp' object='test/test_test_bitcoin-univalue_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-univalue_tests.obj `if test -f 'test/univalue_tests.cpp'; then $(CYGPATH_W) 'test/univalue_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/univalue_tests.cpp'; fi`

test/test_test_bitcoin-util_tests.o: test/util_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-util_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-util_tests.Tpo -c -o test/test_test_bitcoin-util_tests.o `test -f 'test/util_tests.cpp' || echo '$(srcdir)/'`test/util_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-util_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-util_tests.Po
#	$(AM_V_CXX)source='test/util_tests.cpp' object='test/test_test_bitcoin-util_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-util_tests.o `test -f 'test/util_tests.cpp' || echo '$(srcdir)/'`test/util_tests.cpp

test/test_test_bitcoin-util_tests.obj: test/util_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-util_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-util_tests.Tpo -c -o test/test_test_bitcoin-util_tests.obj `if test -f 'test/util_tests.cpp'; then $(CYGPATH_W) 'test/util_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-util_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-util_tests.Po
#	$(AM_V_CXX)source='test/util_tests.cpp' object='test/test_test_bitcoin-util_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-util_tests.obj `if test -f 'test/util_tests.cpp'; then $(CYGPATH_W) 'test/util_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/util_tests.cpp'; fi`

test/test_test_bitcoin-sha256compress_tests.o: test/sha256compress_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-sha256compress_tests.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-sha256compress_tests.Tpo -c -o test/test_test_bitcoin-sha256compress_tests.o `test -f 'test/sha256compress_tests.cpp' || echo '$(srcdir)/'`test/sha256compress_tests.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-sha256compress_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-sha256compress_tests.Po
#	$(AM_V_CXX)source='test/sha256compress_tests.cpp' object='test/test_test_bitcoin-sha256compress_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-sha256compress_tests.o `test -f 'test/sha256compress_tests.cpp' || echo '$(srcdir)/'`test/sha256compress_tests.cpp

test/test_test_bitcoin-sha256compress_tests.obj: test/sha256compress_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin-sha256compress_tests.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin-sha256compress_tests.Tpo -c -o test/test_test_bitcoin-sha256compress_tests.obj `if test -f 'test/sha256compress_tests.cpp'; then $(CYGPATH_W) 'test/sha256compress_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sha256compress_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin-sha256compress_tests.Tpo test/$(DEPDIR)/test_test_bitcoin-sha256compress_tests.Po
#	$(AM_V_CXX)source='test/sha256compress_tests.cpp' object='test/test_test_bitcoin-sha256compress_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin-sha256compress_tests.obj `if test -f 'test/sha256compress_tests.cpp'; then $(CYGPATH_W) 'test/sha256compress_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/test/sha256compress_tests.cpp'; fi`

wallet/test/test_test_bitcoin-wallet_tests.o: wallet/test/wallet_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-wallet_tests.o -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_tests.Tpo -c -o wallet/test/test_test_bitcoin-wallet_tests.o `test -f 'wallet/test/wallet_tests.cpp' || echo '$(srcdir)/'`wallet/test/wallet_tests.cpp
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_tests.Po
#	$(AM_V_CXX)source='wallet/test/wallet_tests.cpp' object='wallet/test/test_test_bitcoin-wallet_tests.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-wallet_tests.o `test -f 'wallet/test/wallet_tests.cpp' || echo '$(srcdir)/'`wallet/test/wallet_tests.cpp

wallet/test/test_test_bitcoin-wallet_tests.obj: wallet/test/wallet_tests.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT wallet/test/test_test_bitcoin-wallet_tests.obj -MD -MP -MF wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_tests.Tpo -c -o wallet/test/test_test_bitcoin-wallet_tests.obj `if test -f 'wallet/test/wallet_tests.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_tests.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_tests.Tpo wallet/test/$(DEPDIR)/test_test_bitcoin-wallet_tests.Po
#	$(AM_V_CXX)source='wallet/test/wallet_tests.cpp' object='wallet/test/test_test_bitcoin-wallet_tests.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wallet/test/test_test_bitcoin-wallet_tests.obj `if test -f 'wallet/test/wallet_tests.cpp'; then $(CYGPATH_W) 'wallet/test/wallet_tests.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/test/wallet_tests.cpp'; fi`

test/test_test_bitcoin_fuzzy-test_bitcoin_fuzzy.o: test/test_bitcoin_fuzzy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_fuzzy_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_fuzzy_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin_fuzzy-test_bitcoin_fuzzy.o -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin_fuzzy-test_bitcoin_fuzzy.Tpo -c -o test/test_test_bitcoin_fuzzy-test_bitcoin_fuzzy.o `test -f 'test/test_bitcoin_fuzzy.cpp' || echo '$(srcdir)/'`test/test_bitcoin_fuzzy.cpp
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin_fuzzy-test_bitcoin_fuzzy.Tpo test/$(DEPDIR)/test_test_bitcoin_fuzzy-test_bitcoin_fuzzy.Po
#	$(AM_V_CXX)source='test/test_bitcoin_fuzzy.cpp' object='test/test_test_bitcoin_fuzzy-test_bitcoin_fuzzy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_fuzzy_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_fuzzy_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin_fuzzy-test_bitcoin_fuzzy.o `test -f 'test/test_bitcoin_fuzzy.cpp' || echo '$(srcdir)/'`test/test_bitcoin_fuzzy.cpp

test/test_test_bitcoin_fuzzy-test_bitcoin_fuzzy.obj: test/test_bitcoin_fuzzy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_fuzzy_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_fuzzy_CXXFLAGS) $(CXXFLAGS) -MT test/test_test_bitcoin_fuzzy-test_bitcoin_fuzzy.obj -MD -MP -MF test/$(DEPDIR)/test_test_bitcoin_fuzzy-test_bitcoin_fuzzy.Tpo -c -o test/test_test_bitcoin_fuzzy-test_bitcoin_fuzzy.obj `if test -f 'test/test_bitcoin_fuzzy.cpp'; then $(CYGPATH_W) 'test/test_bitcoin_fuzzy.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin_fuzzy.cpp'; fi`
	$(AM_V_at)$(am__mv) test/$(DEPDIR)/test_test_bitcoin_fuzzy-test_bitcoin_fuzzy.Tpo test/$(DEPDIR)/test_test_bitcoin_fuzzy-test_bitcoin_fuzzy.Po
#	$(AM_V_CXX)source='test/test_bitcoin_fuzzy.cpp' object='test/test_test_bitcoin_fuzzy-test_bitcoin_fuzzy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_test_bitcoin_fuzzy_CPPFLAGS) $(CPPFLAGS) $(test_test_bitcoin_fuzzy_CXXFLAGS) $(CXXFLAGS) -c -o test/test_test_bitcoin_fuzzy-test_bitcoin_fuzzy.obj `if test -f 'test/test_bitcoin_fuzzy.cpp'; then $(CYGPATH_W) 'test/test_bitcoin_fuzzy.cpp'; else $(CYGPATH_W) '$(srcdir)/test/test_bitcoin_fuzzy.cpp'; fi`

vds_cli-bitcoin-cli.o: bitcoin-cli.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_cli_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vds_cli-bitcoin-cli.o -MD -MP -MF $(DEPDIR)/vds_cli-bitcoin-cli.Tpo -c -o vds_cli-bitcoin-cli.o `test -f 'bitcoin-cli.cpp' || echo '$(srcdir)/'`bitcoin-cli.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/vds_cli-bitcoin-cli.Tpo $(DEPDIR)/vds_cli-bitcoin-cli.Po
#	$(AM_V_CXX)source='bitcoin-cli.cpp' object='vds_cli-bitcoin-cli.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_cli_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vds_cli-bitcoin-cli.o `test -f 'bitcoin-cli.cpp' || echo '$(srcdir)/'`bitcoin-cli.cpp

vds_cli-bitcoin-cli.obj: bitcoin-cli.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_cli_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vds_cli-bitcoin-cli.obj -MD -MP -MF $(DEPDIR)/vds_cli-bitcoin-cli.Tpo -c -o vds_cli-bitcoin-cli.obj `if test -f 'bitcoin-cli.cpp'; then $(CYGPATH_W) 'bitcoin-cli.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-cli.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/vds_cli-bitcoin-cli.Tpo $(DEPDIR)/vds_cli-bitcoin-cli.Po
#	$(AM_V_CXX)source='bitcoin-cli.cpp' object='vds_cli-bitcoin-cli.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_cli_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vds_cli-bitcoin-cli.obj `if test -f 'bitcoin-cli.cpp'; then $(CYGPATH_W) 'bitcoin-cli.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-cli.cpp'; fi`

gtest/vds_gtest-main.o: gtest/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-main.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-main.Tpo -c -o gtest/vds_gtest-main.o `test -f 'gtest/main.cpp' || echo '$(srcdir)/'`gtest/main.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-main.Tpo gtest/$(DEPDIR)/vds_gtest-main.Po
#	$(AM_V_CXX)source='gtest/main.cpp' object='gtest/vds_gtest-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-main.o `test -f 'gtest/main.cpp' || echo '$(srcdir)/'`gtest/main.cpp

gtest/vds_gtest-main.obj: gtest/main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-main.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-main.Tpo -c -o gtest/vds_gtest-main.obj `if test -f 'gtest/main.cpp'; then $(CYGPATH_W) 'gtest/main.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/main.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-main.Tpo gtest/$(DEPDIR)/vds_gtest-main.Po
#	$(AM_V_CXX)source='gtest/main.cpp' object='gtest/vds_gtest-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-main.obj `if test -f 'gtest/main.cpp'; then $(CYGPATH_W) 'gtest/main.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/main.cpp'; fi`

gtest/vds_gtest-utils.o: gtest/utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-utils.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-utils.Tpo -c -o gtest/vds_gtest-utils.o `test -f 'gtest/utils.cpp' || echo '$(srcdir)/'`gtest/utils.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-utils.Tpo gtest/$(DEPDIR)/vds_gtest-utils.Po
#	$(AM_V_CXX)source='gtest/utils.cpp' object='gtest/vds_gtest-utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-utils.o `test -f 'gtest/utils.cpp' || echo '$(srcdir)/'`gtest/utils.cpp

gtest/vds_gtest-utils.obj: gtest/utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-utils.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-utils.Tpo -c -o gtest/vds_gtest-utils.obj `if test -f 'gtest/utils.cpp'; then $(CYGPATH_W) 'gtest/utils.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/utils.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-utils.Tpo gtest/$(DEPDIR)/vds_gtest-utils.Po
#	$(AM_V_CXX)source='gtest/utils.cpp' object='gtest/vds_gtest-utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-utils.obj `if test -f 'gtest/utils.cpp'; then $(CYGPATH_W) 'gtest/utils.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/utils.cpp'; fi`

gtest/vds_gtest-test_checktransaction.o: gtest/test_checktransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_checktransaction.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_checktransaction.Tpo -c -o gtest/vds_gtest-test_checktransaction.o `test -f 'gtest/test_checktransaction.cpp' || echo '$(srcdir)/'`gtest/test_checktransaction.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_checktransaction.Tpo gtest/$(DEPDIR)/vds_gtest-test_checktransaction.Po
#	$(AM_V_CXX)source='gtest/test_checktransaction.cpp' object='gtest/vds_gtest-test_checktransaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_checktransaction.o `test -f 'gtest/test_checktransaction.cpp' || echo '$(srcdir)/'`gtest/test_checktransaction.cpp

gtest/vds_gtest-test_checktransaction.obj: gtest/test_checktransaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_checktransaction.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_checktransaction.Tpo -c -o gtest/vds_gtest-test_checktransaction.obj `if test -f 'gtest/test_checktransaction.cpp'; then $(CYGPATH_W) 'gtest/test_checktransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_checktransaction.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_checktransaction.Tpo gtest/$(DEPDIR)/vds_gtest-test_checktransaction.Po
#	$(AM_V_CXX)source='gtest/test_checktransaction.cpp' object='gtest/vds_gtest-test_checktransaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_checktransaction.obj `if test -f 'gtest/test_checktransaction.cpp'; then $(CYGPATH_W) 'gtest/test_checktransaction.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_checktransaction.cpp'; fi`

gtest/vds_gtest-json_test_vectors.o: gtest/json_test_vectors.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-json_test_vectors.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-json_test_vectors.Tpo -c -o gtest/vds_gtest-json_test_vectors.o `test -f 'gtest/json_test_vectors.cpp' || echo '$(srcdir)/'`gtest/json_test_vectors.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-json_test_vectors.Tpo gtest/$(DEPDIR)/vds_gtest-json_test_vectors.Po
#	$(AM_V_CXX)source='gtest/json_test_vectors.cpp' object='gtest/vds_gtest-json_test_vectors.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-json_test_vectors.o `test -f 'gtest/json_test_vectors.cpp' || echo '$(srcdir)/'`gtest/json_test_vectors.cpp

gtest/vds_gtest-json_test_vectors.obj: gtest/json_test_vectors.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-json_test_vectors.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-json_test_vectors.Tpo -c -o gtest/vds_gtest-json_test_vectors.obj `if test -f 'gtest/json_test_vectors.cpp'; then $(CYGPATH_W) 'gtest/json_test_vectors.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/json_test_vectors.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-json_test_vectors.Tpo gtest/$(DEPDIR)/vds_gtest-json_test_vectors.Po
#	$(AM_V_CXX)source='gtest/json_test_vectors.cpp' object='gtest/vds_gtest-json_test_vectors.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-json_test_vectors.obj `if test -f 'gtest/json_test_vectors.cpp'; then $(CYGPATH_W) 'gtest/json_test_vectors.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/json_test_vectors.cpp'; fi`

wallet/gtest/vds_gtest-test_wallet_zkeys.o: wallet/gtest/test_wallet_zkeys.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT wallet/gtest/vds_gtest-test_wallet_zkeys.o -MD -MP -MF wallet/gtest/$(DEPDIR)/vds_gtest-test_wallet_zkeys.Tpo -c -o wallet/gtest/vds_gtest-test_wallet_zkeys.o `test -f 'wallet/gtest/test_wallet_zkeys.cpp' || echo '$(srcdir)/'`wallet/gtest/test_wallet_zkeys.cpp
	$(AM_V_at)$(am__mv) wallet/gtest/$(DEPDIR)/vds_gtest-test_wallet_zkeys.Tpo wallet/gtest/$(DEPDIR)/vds_gtest-test_wallet_zkeys.Po
#	$(AM_V_CXX)source='wallet/gtest/test_wallet_zkeys.cpp' object='wallet/gtest/vds_gtest-test_wallet_zkeys.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o wallet/gtest/vds_gtest-test_wallet_zkeys.o `test -f 'wallet/gtest/test_wallet_zkeys.cpp' || echo '$(srcdir)/'`wallet/gtest/test_wallet_zkeys.cpp

wallet/gtest/vds_gtest-test_wallet_zkeys.obj: wallet/gtest/test_wallet_zkeys.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT wallet/gtest/vds_gtest-test_wallet_zkeys.obj -MD -MP -MF wallet/gtest/$(DEPDIR)/vds_gtest-test_wallet_zkeys.Tpo -c -o wallet/gtest/vds_gtest-test_wallet_zkeys.obj `if test -f 'wallet/gtest/test_wallet_zkeys.cpp'; then $(CYGPATH_W) 'wallet/gtest/test_wallet_zkeys.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/gtest/test_wallet_zkeys.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/gtest/$(DEPDIR)/vds_gtest-test_wallet_zkeys.Tpo wallet/gtest/$(DEPDIR)/vds_gtest-test_wallet_zkeys.Po
#	$(AM_V_CXX)source='wallet/gtest/test_wallet_zkeys.cpp' object='wallet/gtest/vds_gtest-test_wallet_zkeys.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o wallet/gtest/vds_gtest-test_wallet_zkeys.obj `if test -f 'wallet/gtest/test_wallet_zkeys.cpp'; then $(CYGPATH_W) 'wallet/gtest/test_wallet_zkeys.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/gtest/test_wallet_zkeys.cpp'; fi`

gtest/vds_gtest-test_tautology.o: gtest/test_tautology.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_tautology.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_tautology.Tpo -c -o gtest/vds_gtest-test_tautology.o `test -f 'gtest/test_tautology.cpp' || echo '$(srcdir)/'`gtest/test_tautology.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_tautology.Tpo gtest/$(DEPDIR)/vds_gtest-test_tautology.Po
#	$(AM_V_CXX)source='gtest/test_tautology.cpp' object='gtest/vds_gtest-test_tautology.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_tautology.o `test -f 'gtest/test_tautology.cpp' || echo '$(srcdir)/'`gtest/test_tautology.cpp

gtest/vds_gtest-test_tautology.obj: gtest/test_tautology.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_tautology.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_tautology.Tpo -c -o gtest/vds_gtest-test_tautology.obj `if test -f 'gtest/test_tautology.cpp'; then $(CYGPATH_W) 'gtest/test_tautology.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_tautology.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_tautology.Tpo gtest/$(DEPDIR)/vds_gtest-test_tautology.Po
#	$(AM_V_CXX)source='gtest/test_tautology.cpp' object='gtest/vds_gtest-test_tautology.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_tautology.obj `if test -f 'gtest/test_tautology.cpp'; then $(CYGPATH_W) 'gtest/test_tautology.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_tautology.cpp'; fi`

gtest/vds_gtest-test_deprecation.o: gtest/test_deprecation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_deprecation.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_deprecation.Tpo -c -o gtest/vds_gtest-test_deprecation.o `test -f 'gtest/test_deprecation.cpp' || echo '$(srcdir)/'`gtest/test_deprecation.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_deprecation.Tpo gtest/$(DEPDIR)/vds_gtest-test_deprecation.Po
#	$(AM_V_CXX)source='gtest/test_deprecation.cpp' object='gtest/vds_gtest-test_deprecation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_deprecation.o `test -f 'gtest/test_deprecation.cpp' || echo '$(srcdir)/'`gtest/test_deprecation.cpp

gtest/vds_gtest-test_deprecation.obj: gtest/test_deprecation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_deprecation.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_deprecation.Tpo -c -o gtest/vds_gtest-test_deprecation.obj `if test -f 'gtest/test_deprecation.cpp'; then $(CYGPATH_W) 'gtest/test_deprecation.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_deprecation.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_deprecation.Tpo gtest/$(DEPDIR)/vds_gtest-test_deprecation.Po
#	$(AM_V_CXX)source='gtest/test_deprecation.cpp' object='gtest/vds_gtest-test_deprecation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_deprecation.obj `if test -f 'gtest/test_deprecation.cpp'; then $(CYGPATH_W) 'gtest/test_deprecation.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_deprecation.cpp'; fi`

gtest/vds_gtest-test_equihash.o: gtest/test_equihash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_equihash.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_equihash.Tpo -c -o gtest/vds_gtest-test_equihash.o `test -f 'gtest/test_equihash.cpp' || echo '$(srcdir)/'`gtest/test_equihash.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_equihash.Tpo gtest/$(DEPDIR)/vds_gtest-test_equihash.Po
#	$(AM_V_CXX)source='gtest/test_equihash.cpp' object='gtest/vds_gtest-test_equihash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_equihash.o `test -f 'gtest/test_equihash.cpp' || echo '$(srcdir)/'`gtest/test_equihash.cpp

gtest/vds_gtest-test_equihash.obj: gtest/test_equihash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_equihash.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_equihash.Tpo -c -o gtest/vds_gtest-test_equihash.obj `if test -f 'gtest/test_equihash.cpp'; then $(CYGPATH_W) 'gtest/test_equihash.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_equihash.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_equihash.Tpo gtest/$(DEPDIR)/vds_gtest-test_equihash.Po
#	$(AM_V_CXX)source='gtest/test_equihash.cpp' object='gtest/vds_gtest-test_equihash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_equihash.obj `if test -f 'gtest/test_equihash.cpp'; then $(CYGPATH_W) 'gtest/test_equihash.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_equihash.cpp'; fi`

gtest/vds_gtest-test_httprpc.o: gtest/test_httprpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_httprpc.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_httprpc.Tpo -c -o gtest/vds_gtest-test_httprpc.o `test -f 'gtest/test_httprpc.cpp' || echo '$(srcdir)/'`gtest/test_httprpc.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_httprpc.Tpo gtest/$(DEPDIR)/vds_gtest-test_httprpc.Po
#	$(AM_V_CXX)source='gtest/test_httprpc.cpp' object='gtest/vds_gtest-test_httprpc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_httprpc.o `test -f 'gtest/test_httprpc.cpp' || echo '$(srcdir)/'`gtest/test_httprpc.cpp

gtest/vds_gtest-test_httprpc.obj: gtest/test_httprpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_httprpc.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_httprpc.Tpo -c -o gtest/vds_gtest-test_httprpc.obj `if test -f 'gtest/test_httprpc.cpp'; then $(CYGPATH_W) 'gtest/test_httprpc.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_httprpc.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_httprpc.Tpo gtest/$(DEPDIR)/vds_gtest-test_httprpc.Po
#	$(AM_V_CXX)source='gtest/test_httprpc.cpp' object='gtest/vds_gtest-test_httprpc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_httprpc.obj `if test -f 'gtest/test_httprpc.cpp'; then $(CYGPATH_W) 'gtest/test_httprpc.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_httprpc.cpp'; fi`

gtest/vds_gtest-test_keys.o: gtest/test_keys.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_keys.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_keys.Tpo -c -o gtest/vds_gtest-test_keys.o `test -f 'gtest/test_keys.cpp' || echo '$(srcdir)/'`gtest/test_keys.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_keys.Tpo gtest/$(DEPDIR)/vds_gtest-test_keys.Po
#	$(AM_V_CXX)source='gtest/test_keys.cpp' object='gtest/vds_gtest-test_keys.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_keys.o `test -f 'gtest/test_keys.cpp' || echo '$(srcdir)/'`gtest/test_keys.cpp

gtest/vds_gtest-test_keys.obj: gtest/test_keys.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_keys.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_keys.Tpo -c -o gtest/vds_gtest-test_keys.obj `if test -f 'gtest/test_keys.cpp'; then $(CYGPATH_W) 'gtest/test_keys.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_keys.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_keys.Tpo gtest/$(DEPDIR)/vds_gtest-test_keys.Po
#	$(AM_V_CXX)source='gtest/test_keys.cpp' object='gtest/vds_gtest-test_keys.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_keys.obj `if test -f 'gtest/test_keys.cpp'; then $(CYGPATH_W) 'gtest/test_keys.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_keys.cpp'; fi`

gtest/vds_gtest-test_keystore.o: gtest/test_keystore.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_keystore.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_keystore.Tpo -c -o gtest/vds_gtest-test_keystore.o `test -f 'gtest/test_keystore.cpp' || echo '$(srcdir)/'`gtest/test_keystore.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_keystore.Tpo gtest/$(DEPDIR)/vds_gtest-test_keystore.Po
#	$(AM_V_CXX)source='gtest/test_keystore.cpp' object='gtest/vds_gtest-test_keystore.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_keystore.o `test -f 'gtest/test_keystore.cpp' || echo '$(srcdir)/'`gtest/test_keystore.cpp

gtest/vds_gtest-test_keystore.obj: gtest/test_keystore.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_keystore.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_keystore.Tpo -c -o gtest/vds_gtest-test_keystore.obj `if test -f 'gtest/test_keystore.cpp'; then $(CYGPATH_W) 'gtest/test_keystore.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_keystore.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_keystore.Tpo gtest/$(DEPDIR)/vds_gtest-test_keystore.Po
#	$(AM_V_CXX)source='gtest/test_keystore.cpp' object='gtest/vds_gtest-test_keystore.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_keystore.obj `if test -f 'gtest/test_keystore.cpp'; then $(CYGPATH_W) 'gtest/test_keystore.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_keystore.cpp'; fi`

gtest/vds_gtest-test_noteencryption.o: gtest/test_noteencryption.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_noteencryption.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_noteencryption.Tpo -c -o gtest/vds_gtest-test_noteencryption.o `test -f 'gtest/test_noteencryption.cpp' || echo '$(srcdir)/'`gtest/test_noteencryption.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_noteencryption.Tpo gtest/$(DEPDIR)/vds_gtest-test_noteencryption.Po
#	$(AM_V_CXX)source='gtest/test_noteencryption.cpp' object='gtest/vds_gtest-test_noteencryption.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_noteencryption.o `test -f 'gtest/test_noteencryption.cpp' || echo '$(srcdir)/'`gtest/test_noteencryption.cpp

gtest/vds_gtest-test_noteencryption.obj: gtest/test_noteencryption.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_noteencryption.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_noteencryption.Tpo -c -o gtest/vds_gtest-test_noteencryption.obj `if test -f 'gtest/test_noteencryption.cpp'; then $(CYGPATH_W) 'gtest/test_noteencryption.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_noteencryption.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_noteencryption.Tpo gtest/$(DEPDIR)/vds_gtest-test_noteencryption.Po
#	$(AM_V_CXX)source='gtest/test_noteencryption.cpp' object='gtest/vds_gtest-test_noteencryption.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_noteencryption.obj `if test -f 'gtest/test_noteencryption.cpp'; then $(CYGPATH_W) 'gtest/test_noteencryption.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_noteencryption.cpp'; fi`

gtest/vds_gtest-test_mempool.o: gtest/test_mempool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_mempool.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_mempool.Tpo -c -o gtest/vds_gtest-test_mempool.o `test -f 'gtest/test_mempool.cpp' || echo '$(srcdir)/'`gtest/test_mempool.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_mempool.Tpo gtest/$(DEPDIR)/vds_gtest-test_mempool.Po
#	$(AM_V_CXX)source='gtest/test_mempool.cpp' object='gtest/vds_gtest-test_mempool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_mempool.o `test -f 'gtest/test_mempool.cpp' || echo '$(srcdir)/'`gtest/test_mempool.cpp

gtest/vds_gtest-test_mempool.obj: gtest/test_mempool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_mempool.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_mempool.Tpo -c -o gtest/vds_gtest-test_mempool.obj `if test -f 'gtest/test_mempool.cpp'; then $(CYGPATH_W) 'gtest/test_mempool.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_mempool.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_mempool.Tpo gtest/$(DEPDIR)/vds_gtest-test_mempool.Po
#	$(AM_V_CXX)source='gtest/test_mempool.cpp' object='gtest/vds_gtest-test_mempool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_mempool.obj `if test -f 'gtest/test_mempool.cpp'; then $(CYGPATH_W) 'gtest/test_mempool.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_mempool.cpp'; fi`

gtest/vds_gtest-test_merkletree.o: gtest/test_merkletree.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_merkletree.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_merkletree.Tpo -c -o gtest/vds_gtest-test_merkletree.o `test -f 'gtest/test_merkletree.cpp' || echo '$(srcdir)/'`gtest/test_merkletree.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_merkletree.Tpo gtest/$(DEPDIR)/vds_gtest-test_merkletree.Po
#	$(AM_V_CXX)source='gtest/test_merkletree.cpp' object='gtest/vds_gtest-test_merkletree.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_merkletree.o `test -f 'gtest/test_merkletree.cpp' || echo '$(srcdir)/'`gtest/test_merkletree.cpp

gtest/vds_gtest-test_merkletree.obj: gtest/test_merkletree.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_merkletree.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_merkletree.Tpo -c -o gtest/vds_gtest-test_merkletree.obj `if test -f 'gtest/test_merkletree.cpp'; then $(CYGPATH_W) 'gtest/test_merkletree.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_merkletree.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_merkletree.Tpo gtest/$(DEPDIR)/vds_gtest-test_merkletree.Po
#	$(AM_V_CXX)source='gtest/test_merkletree.cpp' object='gtest/vds_gtest-test_merkletree.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_merkletree.obj `if test -f 'gtest/test_merkletree.cpp'; then $(CYGPATH_W) 'gtest/test_merkletree.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_merkletree.cpp'; fi`

gtest/vds_gtest-test_miner.o: gtest/test_miner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_miner.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_miner.Tpo -c -o gtest/vds_gtest-test_miner.o `test -f 'gtest/test_miner.cpp' || echo '$(srcdir)/'`gtest/test_miner.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_miner.Tpo gtest/$(DEPDIR)/vds_gtest-test_miner.Po
#	$(AM_V_CXX)source='gtest/test_miner.cpp' object='gtest/vds_gtest-test_miner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_miner.o `test -f 'gtest/test_miner.cpp' || echo '$(srcdir)/'`gtest/test_miner.cpp

gtest/vds_gtest-test_miner.obj: gtest/test_miner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_miner.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_miner.Tpo -c -o gtest/vds_gtest-test_miner.obj `if test -f 'gtest/test_miner.cpp'; then $(CYGPATH_W) 'gtest/test_miner.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_miner.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_miner.Tpo gtest/$(DEPDIR)/vds_gtest-test_miner.Po
#	$(AM_V_CXX)source='gtest/test_miner.cpp' object='gtest/vds_gtest-test_miner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_miner.obj `if test -f 'gtest/test_miner.cpp'; then $(CYGPATH_W) 'gtest/test_miner.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_miner.cpp'; fi`

gtest/vds_gtest-test_pow.o: gtest/test_pow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_pow.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_pow.Tpo -c -o gtest/vds_gtest-test_pow.o `test -f 'gtest/test_pow.cpp' || echo '$(srcdir)/'`gtest/test_pow.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_pow.Tpo gtest/$(DEPDIR)/vds_gtest-test_pow.Po
#	$(AM_V_CXX)source='gtest/test_pow.cpp' object='gtest/vds_gtest-test_pow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_pow.o `test -f 'gtest/test_pow.cpp' || echo '$(srcdir)/'`gtest/test_pow.cpp

gtest/vds_gtest-test_pow.obj: gtest/test_pow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_pow.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_pow.Tpo -c -o gtest/vds_gtest-test_pow.obj `if test -f 'gtest/test_pow.cpp'; then $(CYGPATH_W) 'gtest/test_pow.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_pow.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_pow.Tpo gtest/$(DEPDIR)/vds_gtest-test_pow.Po
#	$(AM_V_CXX)source='gtest/test_pow.cpp' object='gtest/vds_gtest-test_pow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_pow.obj `if test -f 'gtest/test_pow.cpp'; then $(CYGPATH_W) 'gtest/test_pow.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_pow.cpp'; fi`

gtest/vds_gtest-test_random.o: gtest/test_random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_random.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_random.Tpo -c -o gtest/vds_gtest-test_random.o `test -f 'gtest/test_random.cpp' || echo '$(srcdir)/'`gtest/test_random.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_random.Tpo gtest/$(DEPDIR)/vds_gtest-test_random.Po
#	$(AM_V_CXX)source='gtest/test_random.cpp' object='gtest/vds_gtest-test_random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_random.o `test -f 'gtest/test_random.cpp' || echo '$(srcdir)/'`gtest/test_random.cpp

gtest/vds_gtest-test_random.obj: gtest/test_random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_random.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_random.Tpo -c -o gtest/vds_gtest-test_random.obj `if test -f 'gtest/test_random.cpp'; then $(CYGPATH_W) 'gtest/test_random.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_random.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_random.Tpo gtest/$(DEPDIR)/vds_gtest-test_random.Po
#	$(AM_V_CXX)source='gtest/test_random.cpp' object='gtest/vds_gtest-test_random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_random.obj `if test -f 'gtest/test_random.cpp'; then $(CYGPATH_W) 'gtest/test_random.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_random.cpp'; fi`

gtest/vds_gtest-test_rpc.o: gtest/test_rpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_rpc.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_rpc.Tpo -c -o gtest/vds_gtest-test_rpc.o `test -f 'gtest/test_rpc.cpp' || echo '$(srcdir)/'`gtest/test_rpc.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_rpc.Tpo gtest/$(DEPDIR)/vds_gtest-test_rpc.Po
#	$(AM_V_CXX)source='gtest/test_rpc.cpp' object='gtest/vds_gtest-test_rpc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_rpc.o `test -f 'gtest/test_rpc.cpp' || echo '$(srcdir)/'`gtest/test_rpc.cpp

gtest/vds_gtest-test_rpc.obj: gtest/test_rpc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_rpc.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_rpc.Tpo -c -o gtest/vds_gtest-test_rpc.obj `if test -f 'gtest/test_rpc.cpp'; then $(CYGPATH_W) 'gtest/test_rpc.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_rpc.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_rpc.Tpo gtest/$(DEPDIR)/vds_gtest-test_rpc.Po
#	$(AM_V_CXX)source='gtest/test_rpc.cpp' object='gtest/vds_gtest-test_rpc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_rpc.obj `if test -f 'gtest/test_rpc.cpp'; then $(CYGPATH_W) 'gtest/test_rpc.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_rpc.cpp'; fi`

gtest/vds_gtest-test_sapling_note.o: gtest/test_sapling_note.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_sapling_note.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_sapling_note.Tpo -c -o gtest/vds_gtest-test_sapling_note.o `test -f 'gtest/test_sapling_note.cpp' || echo '$(srcdir)/'`gtest/test_sapling_note.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_sapling_note.Tpo gtest/$(DEPDIR)/vds_gtest-test_sapling_note.Po
#	$(AM_V_CXX)source='gtest/test_sapling_note.cpp' object='gtest/vds_gtest-test_sapling_note.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_sapling_note.o `test -f 'gtest/test_sapling_note.cpp' || echo '$(srcdir)/'`gtest/test_sapling_note.cpp

gtest/vds_gtest-test_sapling_note.obj: gtest/test_sapling_note.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_sapling_note.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_sapling_note.Tpo -c -o gtest/vds_gtest-test_sapling_note.obj `if test -f 'gtest/test_sapling_note.cpp'; then $(CYGPATH_W) 'gtest/test_sapling_note.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_sapling_note.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_sapling_note.Tpo gtest/$(DEPDIR)/vds_gtest-test_sapling_note.Po
#	$(AM_V_CXX)source='gtest/test_sapling_note.cpp' object='gtest/vds_gtest-test_sapling_note.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_sapling_note.obj `if test -f 'gtest/test_sapling_note.cpp'; then $(CYGPATH_W) 'gtest/test_sapling_note.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_sapling_note.cpp'; fi`

gtest/vds_gtest-test_transaction.o: gtest/test_transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_transaction.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_transaction.Tpo -c -o gtest/vds_gtest-test_transaction.o `test -f 'gtest/test_transaction.cpp' || echo '$(srcdir)/'`gtest/test_transaction.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_transaction.Tpo gtest/$(DEPDIR)/vds_gtest-test_transaction.Po
#	$(AM_V_CXX)source='gtest/test_transaction.cpp' object='gtest/vds_gtest-test_transaction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_transaction.o `test -f 'gtest/test_transaction.cpp' || echo '$(srcdir)/'`gtest/test_transaction.cpp

gtest/vds_gtest-test_transaction.obj: gtest/test_transaction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_transaction.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_transaction.Tpo -c -o gtest/vds_gtest-test_transaction.obj `if test -f 'gtest/test_transaction.cpp'; then $(CYGPATH_W) 'gtest/test_transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_transaction.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_transaction.Tpo gtest/$(DEPDIR)/vds_gtest-test_transaction.Po
#	$(AM_V_CXX)source='gtest/test_transaction.cpp' object='gtest/vds_gtest-test_transaction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_transaction.obj `if test -f 'gtest/test_transaction.cpp'; then $(CYGPATH_W) 'gtest/test_transaction.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_transaction.cpp'; fi`

gtest/vds_gtest-test_transaction_builder.o: gtest/test_transaction_builder.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_transaction_builder.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_transaction_builder.Tpo -c -o gtest/vds_gtest-test_transaction_builder.o `test -f 'gtest/test_transaction_builder.cpp' || echo '$(srcdir)/'`gtest/test_transaction_builder.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_transaction_builder.Tpo gtest/$(DEPDIR)/vds_gtest-test_transaction_builder.Po
#	$(AM_V_CXX)source='gtest/test_transaction_builder.cpp' object='gtest/vds_gtest-test_transaction_builder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_transaction_builder.o `test -f 'gtest/test_transaction_builder.cpp' || echo '$(srcdir)/'`gtest/test_transaction_builder.cpp

gtest/vds_gtest-test_transaction_builder.obj: gtest/test_transaction_builder.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_transaction_builder.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_transaction_builder.Tpo -c -o gtest/vds_gtest-test_transaction_builder.obj `if test -f 'gtest/test_transaction_builder.cpp'; then $(CYGPATH_W) 'gtest/test_transaction_builder.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_transaction_builder.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_transaction_builder.Tpo gtest/$(DEPDIR)/vds_gtest-test_transaction_builder.Po
#	$(AM_V_CXX)source='gtest/test_transaction_builder.cpp' object='gtest/vds_gtest-test_transaction_builder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_transaction_builder.obj `if test -f 'gtest/test_transaction_builder.cpp'; then $(CYGPATH_W) 'gtest/test_transaction_builder.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_transaction_builder.cpp'; fi`

gtest/vds_gtest-test_validation.o: gtest/test_validation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_validation.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_validation.Tpo -c -o gtest/vds_gtest-test_validation.o `test -f 'gtest/test_validation.cpp' || echo '$(srcdir)/'`gtest/test_validation.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_validation.Tpo gtest/$(DEPDIR)/vds_gtest-test_validation.Po
#	$(AM_V_CXX)source='gtest/test_validation.cpp' object='gtest/vds_gtest-test_validation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_validation.o `test -f 'gtest/test_validation.cpp' || echo '$(srcdir)/'`gtest/test_validation.cpp

gtest/vds_gtest-test_validation.obj: gtest/test_validation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_validation.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_validation.Tpo -c -o gtest/vds_gtest-test_validation.obj `if test -f 'gtest/test_validation.cpp'; then $(CYGPATH_W) 'gtest/test_validation.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_validation.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_validation.Tpo gtest/$(DEPDIR)/vds_gtest-test_validation.Po
#	$(AM_V_CXX)source='gtest/test_validation.cpp' object='gtest/vds_gtest-test_validation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_validation.obj `if test -f 'gtest/test_validation.cpp'; then $(CYGPATH_W) 'gtest/test_validation.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_validation.cpp'; fi`

gtest/vds_gtest-test_circuit.o: gtest/test_circuit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_circuit.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_circuit.Tpo -c -o gtest/vds_gtest-test_circuit.o `test -f 'gtest/test_circuit.cpp' || echo '$(srcdir)/'`gtest/test_circuit.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_circuit.Tpo gtest/$(DEPDIR)/vds_gtest-test_circuit.Po
#	$(AM_V_CXX)source='gtest/test_circuit.cpp' object='gtest/vds_gtest-test_circuit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_circuit.o `test -f 'gtest/test_circuit.cpp' || echo '$(srcdir)/'`gtest/test_circuit.cpp

gtest/vds_gtest-test_circuit.obj: gtest/test_circuit.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_circuit.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_circuit.Tpo -c -o gtest/vds_gtest-test_circuit.obj `if test -f 'gtest/test_circuit.cpp'; then $(CYGPATH_W) 'gtest/test_circuit.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_circuit.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_circuit.Tpo gtest/$(DEPDIR)/vds_gtest-test_circuit.Po
#	$(AM_V_CXX)source='gtest/test_circuit.cpp' object='gtest/vds_gtest-test_circuit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_circuit.obj `if test -f 'gtest/test_circuit.cpp'; then $(CYGPATH_W) 'gtest/test_circuit.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_circuit.cpp'; fi`

gtest/vds_gtest-test_txid.o: gtest/test_txid.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_txid.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_txid.Tpo -c -o gtest/vds_gtest-test_txid.o `test -f 'gtest/test_txid.cpp' || echo '$(srcdir)/'`gtest/test_txid.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_txid.Tpo gtest/$(DEPDIR)/vds_gtest-test_txid.Po
#	$(AM_V_CXX)source='gtest/test_txid.cpp' object='gtest/vds_gtest-test_txid.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_txid.o `test -f 'gtest/test_txid.cpp' || echo '$(srcdir)/'`gtest/test_txid.cpp

gtest/vds_gtest-test_txid.obj: gtest/test_txid.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_txid.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_txid.Tpo -c -o gtest/vds_gtest-test_txid.obj `if test -f 'gtest/test_txid.cpp'; then $(CYGPATH_W) 'gtest/test_txid.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_txid.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_txid.Tpo gtest/$(DEPDIR)/vds_gtest-test_txid.Po
#	$(AM_V_CXX)source='gtest/test_txid.cpp' object='gtest/vds_gtest-test_txid.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_txid.obj `if test -f 'gtest/test_txid.cpp'; then $(CYGPATH_W) 'gtest/test_txid.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_txid.cpp'; fi`

gtest/vds_gtest-test_libzcash_utils.o: gtest/test_libzcash_utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_libzcash_utils.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_libzcash_utils.Tpo -c -o gtest/vds_gtest-test_libzcash_utils.o `test -f 'gtest/test_libzcash_utils.cpp' || echo '$(srcdir)/'`gtest/test_libzcash_utils.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_libzcash_utils.Tpo gtest/$(DEPDIR)/vds_gtest-test_libzcash_utils.Po
#	$(AM_V_CXX)source='gtest/test_libzcash_utils.cpp' object='gtest/vds_gtest-test_libzcash_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_libzcash_utils.o `test -f 'gtest/test_libzcash_utils.cpp' || echo '$(srcdir)/'`gtest/test_libzcash_utils.cpp

gtest/vds_gtest-test_libzcash_utils.obj: gtest/test_libzcash_utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_libzcash_utils.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_libzcash_utils.Tpo -c -o gtest/vds_gtest-test_libzcash_utils.obj `if test -f 'gtest/test_libzcash_utils.cpp'; then $(CYGPATH_W) 'gtest/test_libzcash_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_libzcash_utils.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_libzcash_utils.Tpo gtest/$(DEPDIR)/vds_gtest-test_libzcash_utils.Po
#	$(AM_V_CXX)source='gtest/test_libzcash_utils.cpp' object='gtest/vds_gtest-test_libzcash_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_libzcash_utils.obj `if test -f 'gtest/test_libzcash_utils.cpp'; then $(CYGPATH_W) 'gtest/test_libzcash_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_libzcash_utils.cpp'; fi`

gtest/vds_gtest-test_proofs.o: gtest/test_proofs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_proofs.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_proofs.Tpo -c -o gtest/vds_gtest-test_proofs.o `test -f 'gtest/test_proofs.cpp' || echo '$(srcdir)/'`gtest/test_proofs.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_proofs.Tpo gtest/$(DEPDIR)/vds_gtest-test_proofs.Po
#	$(AM_V_CXX)source='gtest/test_proofs.cpp' object='gtest/vds_gtest-test_proofs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_proofs.o `test -f 'gtest/test_proofs.cpp' || echo '$(srcdir)/'`gtest/test_proofs.cpp

gtest/vds_gtest-test_proofs.obj: gtest/test_proofs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_proofs.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_proofs.Tpo -c -o gtest/vds_gtest-test_proofs.obj `if test -f 'gtest/test_proofs.cpp'; then $(CYGPATH_W) 'gtest/test_proofs.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_proofs.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_proofs.Tpo gtest/$(DEPDIR)/vds_gtest-test_proofs.Po
#	$(AM_V_CXX)source='gtest/test_proofs.cpp' object='gtest/vds_gtest-test_proofs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_proofs.obj `if test -f 'gtest/test_proofs.cpp'; then $(CYGPATH_W) 'gtest/test_proofs.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_proofs.cpp'; fi`

gtest/vds_gtest-test_paymentdisclosure.o: gtest/test_paymentdisclosure.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_paymentdisclosure.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_paymentdisclosure.Tpo -c -o gtest/vds_gtest-test_paymentdisclosure.o `test -f 'gtest/test_paymentdisclosure.cpp' || echo '$(srcdir)/'`gtest/test_paymentdisclosure.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_paymentdisclosure.Tpo gtest/$(DEPDIR)/vds_gtest-test_paymentdisclosure.Po
#	$(AM_V_CXX)source='gtest/test_paymentdisclosure.cpp' object='gtest/vds_gtest-test_paymentdisclosure.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_paymentdisclosure.o `test -f 'gtest/test_paymentdisclosure.cpp' || echo '$(srcdir)/'`gtest/test_paymentdisclosure.cpp

gtest/vds_gtest-test_paymentdisclosure.obj: gtest/test_paymentdisclosure.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_paymentdisclosure.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_paymentdisclosure.Tpo -c -o gtest/vds_gtest-test_paymentdisclosure.obj `if test -f 'gtest/test_paymentdisclosure.cpp'; then $(CYGPATH_W) 'gtest/test_paymentdisclosure.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_paymentdisclosure.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_paymentdisclosure.Tpo gtest/$(DEPDIR)/vds_gtest-test_paymentdisclosure.Po
#	$(AM_V_CXX)source='gtest/test_paymentdisclosure.cpp' object='gtest/vds_gtest-test_paymentdisclosure.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_paymentdisclosure.obj `if test -f 'gtest/test_paymentdisclosure.cpp'; then $(CYGPATH_W) 'gtest/test_paymentdisclosure.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_paymentdisclosure.cpp'; fi`

gtest/vds_gtest-test_pedersen_hash.o: gtest/test_pedersen_hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_pedersen_hash.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_pedersen_hash.Tpo -c -o gtest/vds_gtest-test_pedersen_hash.o `test -f 'gtest/test_pedersen_hash.cpp' || echo '$(srcdir)/'`gtest/test_pedersen_hash.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_pedersen_hash.Tpo gtest/$(DEPDIR)/vds_gtest-test_pedersen_hash.Po
#	$(AM_V_CXX)source='gtest/test_pedersen_hash.cpp' object='gtest/vds_gtest-test_pedersen_hash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_pedersen_hash.o `test -f 'gtest/test_pedersen_hash.cpp' || echo '$(srcdir)/'`gtest/test_pedersen_hash.cpp

gtest/vds_gtest-test_pedersen_hash.obj: gtest/test_pedersen_hash.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_pedersen_hash.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_pedersen_hash.Tpo -c -o gtest/vds_gtest-test_pedersen_hash.obj `if test -f 'gtest/test_pedersen_hash.cpp'; then $(CYGPATH_W) 'gtest/test_pedersen_hash.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_pedersen_hash.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_pedersen_hash.Tpo gtest/$(DEPDIR)/vds_gtest-test_pedersen_hash.Po
#	$(AM_V_CXX)source='gtest/test_pedersen_hash.cpp' object='gtest/vds_gtest-test_pedersen_hash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_pedersen_hash.obj `if test -f 'gtest/test_pedersen_hash.cpp'; then $(CYGPATH_W) 'gtest/test_pedersen_hash.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_pedersen_hash.cpp'; fi`

gtest/vds_gtest-test_checkblock.o: gtest/test_checkblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_checkblock.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_checkblock.Tpo -c -o gtest/vds_gtest-test_checkblock.o `test -f 'gtest/test_checkblock.cpp' || echo '$(srcdir)/'`gtest/test_checkblock.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_checkblock.Tpo gtest/$(DEPDIR)/vds_gtest-test_checkblock.Po
#	$(AM_V_CXX)source='gtest/test_checkblock.cpp' object='gtest/vds_gtest-test_checkblock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_checkblock.o `test -f 'gtest/test_checkblock.cpp' || echo '$(srcdir)/'`gtest/test_checkblock.cpp

gtest/vds_gtest-test_checkblock.obj: gtest/test_checkblock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_checkblock.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_checkblock.Tpo -c -o gtest/vds_gtest-test_checkblock.obj `if test -f 'gtest/test_checkblock.cpp'; then $(CYGPATH_W) 'gtest/test_checkblock.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_checkblock.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_checkblock.Tpo gtest/$(DEPDIR)/vds_gtest-test_checkblock.Po
#	$(AM_V_CXX)source='gtest/test_checkblock.cpp' object='gtest/vds_gtest-test_checkblock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_checkblock.obj `if test -f 'gtest/test_checkblock.cpp'; then $(CYGPATH_W) 'gtest/test_checkblock.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_checkblock.cpp'; fi`

gtest/vds_gtest-test_zip32.o: gtest/test_zip32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_zip32.o -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_zip32.Tpo -c -o gtest/vds_gtest-test_zip32.o `test -f 'gtest/test_zip32.cpp' || echo '$(srcdir)/'`gtest/test_zip32.cpp
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_zip32.Tpo gtest/$(DEPDIR)/vds_gtest-test_zip32.Po
#	$(AM_V_CXX)source='gtest/test_zip32.cpp' object='gtest/vds_gtest-test_zip32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_zip32.o `test -f 'gtest/test_zip32.cpp' || echo '$(srcdir)/'`gtest/test_zip32.cpp

gtest/vds_gtest-test_zip32.obj: gtest/test_zip32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT gtest/vds_gtest-test_zip32.obj -MD -MP -MF gtest/$(DEPDIR)/vds_gtest-test_zip32.Tpo -c -o gtest/vds_gtest-test_zip32.obj `if test -f 'gtest/test_zip32.cpp'; then $(CYGPATH_W) 'gtest/test_zip32.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_zip32.cpp'; fi`
	$(AM_V_at)$(am__mv) gtest/$(DEPDIR)/vds_gtest-test_zip32.Tpo gtest/$(DEPDIR)/vds_gtest-test_zip32.Po
#	$(AM_V_CXX)source='gtest/test_zip32.cpp' object='gtest/vds_gtest-test_zip32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o gtest/vds_gtest-test_zip32.obj `if test -f 'gtest/test_zip32.cpp'; then $(CYGPATH_W) 'gtest/test_zip32.cpp'; else $(CYGPATH_W) '$(srcdir)/gtest/test_zip32.cpp'; fi`

wallet/gtest/vds_gtest-test_wallet.o: wallet/gtest/test_wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT wallet/gtest/vds_gtest-test_wallet.o -MD -MP -MF wallet/gtest/$(DEPDIR)/vds_gtest-test_wallet.Tpo -c -o wallet/gtest/vds_gtest-test_wallet.o `test -f 'wallet/gtest/test_wallet.cpp' || echo '$(srcdir)/'`wallet/gtest/test_wallet.cpp
	$(AM_V_at)$(am__mv) wallet/gtest/$(DEPDIR)/vds_gtest-test_wallet.Tpo wallet/gtest/$(DEPDIR)/vds_gtest-test_wallet.Po
#	$(AM_V_CXX)source='wallet/gtest/test_wallet.cpp' object='wallet/gtest/vds_gtest-test_wallet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o wallet/gtest/vds_gtest-test_wallet.o `test -f 'wallet/gtest/test_wallet.cpp' || echo '$(srcdir)/'`wallet/gtest/test_wallet.cpp

wallet/gtest/vds_gtest-test_wallet.obj: wallet/gtest/test_wallet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -MT wallet/gtest/vds_gtest-test_wallet.obj -MD -MP -MF wallet/gtest/$(DEPDIR)/vds_gtest-test_wallet.Tpo -c -o wallet/gtest/vds_gtest-test_wallet.obj `if test -f 'wallet/gtest/test_wallet.cpp'; then $(CYGPATH_W) 'wallet/gtest/test_wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/gtest/test_wallet.cpp'; fi`
	$(AM_V_at)$(am__mv) wallet/gtest/$(DEPDIR)/vds_gtest-test_wallet.Tpo wallet/gtest/$(DEPDIR)/vds_gtest-test_wallet.Po
#	$(AM_V_CXX)source='wallet/gtest/test_wallet.cpp' object='wallet/gtest/vds_gtest-test_wallet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_gtest_CPPFLAGS) $(CPPFLAGS) $(vds_gtest_CXXFLAGS) $(CXXFLAGS) -c -o wallet/gtest/vds_gtest-test_wallet.obj `if test -f 'wallet/gtest/test_wallet.cpp'; then $(CYGPATH_W) 'wallet/gtest/test_wallet.cpp'; else $(CYGPATH_W) '$(srcdir)/wallet/gtest/test_wallet.cpp'; fi`

vds_tx-bitcoin-tx.o: bitcoin-tx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_tx_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vds_tx-bitcoin-tx.o -MD -MP -MF $(DEPDIR)/vds_tx-bitcoin-tx.Tpo -c -o vds_tx-bitcoin-tx.o `test -f 'bitcoin-tx.cpp' || echo '$(srcdir)/'`bitcoin-tx.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/vds_tx-bitcoin-tx.Tpo $(DEPDIR)/vds_tx-bitcoin-tx.Po
#	$(AM_V_CXX)source='bitcoin-tx.cpp' object='vds_tx-bitcoin-tx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_tx_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vds_tx-bitcoin-tx.o `test -f 'bitcoin-tx.cpp' || echo '$(srcdir)/'`bitcoin-tx.cpp

vds_tx-bitcoin-tx.obj: bitcoin-tx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_tx_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vds_tx-bitcoin-tx.obj -MD -MP -MF $(DEPDIR)/vds_tx-bitcoin-tx.Tpo -c -o vds_tx-bitcoin-tx.obj `if test -f 'bitcoin-tx.cpp'; then $(CYGPATH_W) 'bitcoin-tx.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-tx.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/vds_tx-bitcoin-tx.Tpo $(DEPDIR)/vds_tx-bitcoin-tx.Po
#	$(AM_V_CXX)source='bitcoin-tx.cpp' object='vds_tx-bitcoin-tx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vds_tx_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vds_tx-bitcoin-tx.obj `if test -f 'bitcoin-tx.cpp'; then $(CYGPATH_W) 'bitcoin-tx.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoin-tx.cpp'; fi`

vdsd-bitcoind.o: bitcoind.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vdsd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vdsd-bitcoind.o -MD -MP -MF $(DEPDIR)/vdsd-bitcoind.Tpo -c -o vdsd-bitcoind.o `test -f 'bitcoind.cpp' || echo '$(srcdir)/'`bitcoind.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/vdsd-bitcoind.Tpo $(DEPDIR)/vdsd-bitcoind.Po
#	$(AM_V_CXX)source='bitcoind.cpp' object='vdsd-bitcoind.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vdsd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vdsd-bitcoind.o `test -f 'bitcoind.cpp' || echo '$(srcdir)/'`bitcoind.cpp

vdsd-bitcoind.obj: bitcoind.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vdsd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT vdsd-bitcoind.obj -MD -MP -MF $(DEPDIR)/vdsd-bitcoind.Tpo -c -o vdsd-bitcoind.obj `if test -f 'bitcoind.cpp'; then $(CYGPATH_W) 'bitcoind.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoind.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/vdsd-bitcoind.Tpo $(DEPDIR)/vdsd-bitcoind.Po
#	$(AM_V_CXX)source='bitcoind.cpp' object='vdsd-bitcoind.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(vdsd_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o vdsd-bitcoind.obj `if test -f 'bitcoind.cpp'; then $(CYGPATH_W) 'bitcoind.cpp'; else $(CYGPATH_W) '$(srcdir)/bitcoind.cpp'; fi`

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf bench/.libs bench/_libs
	-rm -rf compat/.libs compat/_libs
	-rm -rf crypto/.libs crypto/_libs
	-rm -rf primitives/.libs primitives/_libs
	-rm -rf script/.libs script/_libs
	-rm -rf test/.libs test/_libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all 
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
test/test_bitcoin.log: test/test_bitcoin$(EXEEXT)
	@p='test/test_bitcoin$(EXEEXT)'; \
	b='test/test_bitcoin'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
vds-gtest.log: vds-gtest$(EXEEXT)
	@p='vds-gtest$(EXEEXT)'; \
	b='vds-gtest'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
#check-local:
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS check-local
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f amqp/$(DEPDIR)/$(am__dirstamp)
	-rm -f amqp/$(am__dirstamp)
	-rm -f bench/$(DEPDIR)/$(am__dirstamp)
	-rm -f bench/$(am__dirstamp)
	-rm -f compat/$(DEPDIR)/$(am__dirstamp)
	-rm -f compat/$(am__dirstamp)
	-rm -f consensus/$(DEPDIR)/$(am__dirstamp)
	-rm -f consensus/$(am__dirstamp)
	-rm -f cpp-ethereum/libdevcore/$(DEPDIR)/$(am__dirstamp)
	-rm -f cpp-ethereum/libdevcore/$(am__dirstamp)
	-rm -f cpp-ethereum/libdevcrypto/$(DEPDIR)/$(am__dirstamp)
	-rm -f cpp-ethereum/libdevcrypto/$(am__dirstamp)
	-rm -f cpp-ethereum/libethash/$(DEPDIR)/$(am__dirstamp)
	-rm -f cpp-ethereum/libethash/$(am__dirstamp)
	-rm -f cpp-ethereum/libethashseal/$(DEPDIR)/$(am__dirstamp)
	-rm -f cpp-ethereum/libethashseal/$(am__dirstamp)
	-rm -f cpp-ethereum/libethashseal/genesis/$(DEPDIR)/$(am__dirstamp)
	-rm -f cpp-ethereum/libethashseal/genesis/$(am__dirstamp)
	-rm -f cpp-ethereum/libethcore/$(DEPDIR)/$(am__dirstamp)
	-rm -f cpp-ethereum/libethcore/$(am__dirstamp)
	-rm -f cpp-ethereum/libethereum/$(DEPDIR)/$(am__dirstamp)
	-rm -f cpp-ethereum/libethereum/$(am__dirstamp)
	-rm -f cpp-ethereum/libevm/$(DEPDIR)/$(am__dirstamp)
	-rm -f cpp-ethereum/libevm/$(am__dirstamp)
	-rm -f cpp-ethereum/libevmcore/$(DEPDIR)/$(am__dirstamp)
	-rm -f cpp-ethereum/libevmcore/$(am__dirstamp)
	-rm -f cpp-ethereum/utils/libscrypt/$(DEPDIR)/$(am__dirstamp)
	-rm -f cpp-ethereum/utils/libscrypt/$(am__dirstamp)
	-rm -f crypto/$(DEPDIR)/$(am__dirstamp)
	-rm -f crypto/$(am__dirstamp)
	-rm -f cryptopp/$(DEPDIR)/$(am__dirstamp)
	-rm -f cryptopp/$(am__dirstamp)
	-rm -f gtest/$(DEPDIR)/$(am__dirstamp)
	-rm -f gtest/$(am__dirstamp)
	-rm -f leveldb/$(am__dirstamp)
	-rm -f leveldb/db/$(DEPDIR)/$(am__dirstamp)
	-rm -f leveldb/db/$(am__dirstamp)
	-rm -f leveldb/helpers/memenv/$(DEPDIR)/$(am__dirstamp)
	-rm -f leveldb/helpers/memenv/$(am__dirstamp)
	-rm -f leveldb/port/$(DEPDIR)/$(am__dirstamp)
	-rm -f leveldb/port/$(am__dirstamp)
	-rm -f leveldb/table/$(DEPDIR)/$(am__dirstamp)
	-rm -f leveldb/table/$(am__dirstamp)
	-rm -f leveldb/util/$(DEPDIR)/$(am__dirstamp)
	-rm -f leveldb/util/$(am__dirstamp)
	-rm -f policy/$(DEPDIR)/$(am__dirstamp)
	-rm -f policy/$(am__dirstamp)
	-rm -f primitives/$(DEPDIR)/$(am__dirstamp)
	-rm -f primitives/$(am__dirstamp)
	-rm -f qtum/$(DEPDIR)/$(am__dirstamp)
	-rm -f qtum/$(am__dirstamp)
	-rm -f rpc/$(DEPDIR)/$(am__dirstamp)
	-rm -f rpc/$(am__dirstamp)
	-rm -f script/$(DEPDIR)/$(am__dirstamp)
	-rm -f script/$(am__dirstamp)
	-rm -f support/$(DEPDIR)/$(am__dirstamp)
	-rm -f support/$(am__dirstamp)
	-rm -f test/$(DEPDIR)/$(am__dirstamp)
	-rm -f test/$(am__dirstamp)
	-rm -f vds/$(DEPDIR)/$(am__dirstamp)
	-rm -f vds/$(am__dirstamp)
	-rm -f wallet/$(DEPDIR)/$(am__dirstamp)
	-rm -f wallet/$(am__dirstamp)
	-rm -f wallet/gtest/$(DEPDIR)/$(am__dirstamp)
	-rm -f wallet/gtest/$(am__dirstamp)
	-rm -f wallet/test/$(DEPDIR)/$(am__dirstamp)
	-rm -f wallet/test/$(am__dirstamp)
	-rm -f zmq/$(DEPDIR)/$(am__dirstamp)
	-rm -f zmq/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool clean-local clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR) amqp/$(DEPDIR) bench/$(DEPDIR) compat/$(DEPDIR) consensus/$(DEPDIR) cpp-ethereum/libdevcore/$(DEPDIR) cpp-ethereum/libdevcrypto/$(DEPDIR) cpp-ethereum/libethash/$(DEPDIR) cpp-ethereum/libethashseal/$(DEPDIR) cpp-ethereum/libethashseal/genesis/$(DEPDIR) cpp-ethereum/libethcore/$(DEPDIR) cpp-ethereum/libethereum/$(DEPDIR) cpp-ethereum/libevm/$(DEPDIR) cpp-ethereum/libevmcore/$(DEPDIR) cpp-ethereum/utils/libscrypt/$(DEPDIR) crypto/$(DEPDIR) cryptopp/$(DEPDIR) gtest/$(DEPDIR) leveldb/db/$(DEPDIR) leveldb/helpers/memenv/$(DEPDIR) leveldb/port/$(DEPDIR) leveldb/table/$(DEPDIR) leveldb/util/$(DEPDIR) policy/$(DEPDIR) primitives/$(DEPDIR) qtum/$(DEPDIR) rpc/$(DEPDIR) script/$(DEPDIR) support/$(DEPDIR) test/$(DEPDIR) vds/$(DEPDIR) wallet/$(DEPDIR) wallet/gtest/$(DEPDIR) wallet/test/$(DEPDIR) zmq/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR) amqp/$(DEPDIR) bench/$(DEPDIR) compat/$(DEPDIR) consensus/$(DEPDIR) cpp-ethereum/libdevcore/$(DEPDIR) cpp-ethereum/libdevcrypto/$(DEPDIR) cpp-ethereum/libethash/$(DEPDIR) cpp-ethereum/libethashseal/$(DEPDIR) cpp-ethereum/libethashseal/genesis/$(DEPDIR) cpp-ethereum/libethcore/$(DEPDIR) cpp-ethereum/libethereum/$(DEPDIR) cpp-ethereum/libevm/$(DEPDIR) cpp-ethereum/libevmcore/$(DEPDIR) cpp-ethereum/utils/libscrypt/$(DEPDIR) crypto/$(DEPDIR) cryptopp/$(DEPDIR) gtest/$(DEPDIR) leveldb/db/$(DEPDIR) leveldb/helpers/memenv/$(DEPDIR) leveldb/port/$(DEPDIR) leveldb/table/$(DEPDIR) leveldb/util/$(DEPDIR) policy/$(DEPDIR) primitives/$(DEPDIR) qtum/$(DEPDIR) rpc/$(DEPDIR) script/$(DEPDIR) support/$(DEPDIR) test/$(DEPDIR) vds/$(DEPDIR) wallet/$(DEPDIR) wallet/gtest/$(DEPDIR) wallet/test/$(DEPDIR) zmq/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
	check-TESTS check-am check-local clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool clean-local \
	clean-noinstPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.PRECIOUS: Makefile


$(LIBSECP256K1): $(LIBSNARK) $(wildcard secp256k1/src/*) $(wildcard secp256k1/include/*)
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C $(@D) $(@F)

$(LIBSNARK): $(wildcard snark/src/*)
	$(AM_V_at) CC="$(CC)" CXX="$(CXX)" AR="$(AR)" CXXFLAGS="$(LIBSNARK_CXXFLAGS)" $(MAKE) $(AM_MAKEFLAGS) -C snark/ DEPINST="$(LIBSNARK_DEPINST)" $(LIBSNARK_CONFIG_FLAGS) OPTFLAGS="-O2 -march=x86-64"

libsnark-tests: $(wildcard snark/src/*)
	$(AM_V_at) CC="$(CC)" CXX="$(CXX)" AR="$(AR)" CXXFLAGS="$(LIBSNARK_CXXFLAGS)" $(MAKE) $(AM_MAKEFLAGS) -C snark/ check DEPINST="$(LIBSNARK_DEPINST)" $(LIBSNARK_CONFIG_FLAGS) OPTFLAGS="-O2 -march=x86-64"

$(LIBUNIVALUE): $(wildcard univalue/lib/*)
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C univalue/

.PHONY: FORCE check-symbols check-security

obj/build.h: FORCE
	@$(MKDIR_P) $(builddir)/obj
	@$(top_srcdir)/share/genbuild.sh $(abs_top_builddir)/src/obj/build.h \
	$(abs_top_srcdir)

libvds_util_a-clientversion.$(OBJEXT): obj/build.h

clean-local:
	-$(MAKE) -C leveldb clean
	-$(MAKE) -C secp256k1 clean
	-$(MAKE) -C snark clean
	-$(MAKE) -C univalue clean
	-$(MAKE) -C net clean
	-rm -f leveldb/*/*.gcno leveldb/helpers/memenv/*.gcno
	-rm -f cryptopp/*.o
	-rm -f config.h

.rc.o:
	@test -f $(WINDRES)
	$(AM_V_GEN) $(WINDRES) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) -DWINDRES_PREPROC -i $< -o $@

.mm.o:
	$(AM_V_CXX) $(OBJCXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	  $(CPPFLAGS) $(AM_CXXFLAGS) $(QT_INCLUDES) $(AM_CXXFLAGS) $(PIE_FLAGS) $(CXXFLAGS) -c -o $@ $<

check-symbols: $(bin_PROGRAMS)
#	@echo "Checking glibc back compat of [$(bin_PROGRAMS)]..."
#	$(AM_V_at) READELF=$(READELF) CPPFILT=$(CPPFILT) $(top_srcdir)/contrib/devtools/symbol-check.py < $(bin_PROGRAMS)

check-security: $(bin_PROGRAMS)
	@echo "Checking binary security of [$(bin_PROGRAMS)]..."
	$(AM_V_at) READELF=$(READELF) OBJDUMP=$(OBJDUMP) $(top_srcdir)/contrib/devtools/security-check.py < $(bin_PROGRAMS)

%.pb.cc %.pb.h: %.proto
	@test -f $(PROTOC)
	$(AM_V_GEN) $(PROTOC) --cpp_out=$(@D) --proto_path=$(abspath $(<D) $<)

%.contract.hpp: %.sol
	@test -f $(SOLC)
	$(AM_V_GEN) $(SOLC) --evm-version homestead --combined-json abi,bin $< > $(basename $<).json && $(top_srcdir)/contrib/devtools/gen_contracts.py $(basename $<).json

bench/checkblock.cpp: bench/data/block413567.raw.h

bitcoin_bench: $(BENCH_BINARY)

bench: $(BENCH_BINARY) FORCE
	$(BENCH_BINARY)

bitcoin_bench_clean : FORCE
	rm -f $(CLEAN_BITCOIN_BENCH) $(bench_bench_bitcoin_OBJECTS) $(BENCH_BINARY)

%.raw.h: %.raw
	@$(MKDIR_P) $(@D)
	@{ \
	 echo "static unsigned const char $(*F)[] = {" && \
	 $(HEXDUMP) -v -e '8/1 "0x%02x, "' -e '"\n"' $< | $(SED) -e 's/0x  ,//g' && \
	 echo "};"; \
	} > "$@.new" && mv -f "$@.new" "$@"
	@echo "Generated $@"

$(VDS_TESTS): $(GENERATED_TEST_FILES)

bitcoin_test: $(TEST_BINARY)

bitcoin_test_check: $(TEST_BINARY) FORCE
	$(MAKE) check-TESTS TESTS=$^

bitcoin_test_clean : FORCE
	rm -f $(CLEAN_VDS_TEST) $(test_test_bitcoin_OBJECTS) $(TEST_BINARY)

check-local:
	@echo "Running test/bitcoin-util-test.py..."
	$(AM_V_at)srcdir=$(srcdir) PYTHONPATH=$(builddir)/test $(srcdir)/test/bitcoin-util-test.py
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C secp256k1 check
	$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C univalue check

%.json.h: %.json
	@$(MKDIR_P) $(@D)
	@echo "namespace json_tests{" > $@
	@echo "static unsigned const char $(*F)[] = {" >> $@
	@$(HEXDUMP) -v -e '8/1 "0x%02x, "' -e '"\n"' $< | $(SED) -e 's/0x  ,//g' >> $@
	@echo "};};" >> $@
	@echo "Generated $@"

%.raw.h: %.raw
	@$(MKDIR_P) $(@D)
	@echo "namespace alert_tests{" > $@
	@echo "static unsigned const char $(*F)[] = {" >> $@
	@$(HEXDUMP) -v -e '8/1 "0x%02x, "' -e '"\n"' $< | $(SED) -e 's/0x  ,//g' >> $@
	@echo "};};" >> $@
	@echo "Generated $@"

vds-gtest_check: vds-gtest FORCE
	./vds-gtest

vds-gtest-expected-failures: vds-gtest FORCE
	./vds-gtest --gtest_filter=*DISABLED_* --gtest_also_run_disabled_tests

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
